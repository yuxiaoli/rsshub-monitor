<?xml version="1.0" encoding="UTF-8"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>YUU YUU - Curius</title><link>https://curius.app/yuu-yuu</link><atom:link href="http://rsshub.thzu.xyz/curius/links/yuu-yuu" rel="self" type="application/rss+xml"></atom:link><description>YUU YUU - Curius - Powered by RSSHub</description><generator>RSSHub</generator><webMaster>contact@rsshub.app (RSSHub)</webMaster><language>en</language><lastBuildDate>Wed, 19 Mar 2025 23:02:40 GMT</lastBuildDate><ttl>5</ttl><item><title>Potential for profits gives Rice lab’s plastic waste project promise | Rice News | News and Media Relations | Rice University</title><description></description><link>https://news.rice.edu/news/2023/potential-profits-gives-rice-labs-plastic-waste-project-promise</link><guid isPermaLink="false">curius:yuu-yuu:132613</guid><pubDate>Fri, 13 Sep 2024 07:23:17 GMT</pubDate></item><item><title>The New Internet</title><description></description><link>https://tailscale.com/blog/new-internet</link><guid isPermaLink="false">curius:yuu-yuu:126525</guid><pubDate>Sun, 28 Jul 2024 14:55:24 GMT</pubDate></item><item><title>AI能听懂音乐笑话吗？ - Nostalgic Future Catalog 怀旧未来档案馆</title><description></description><link>https://nostalgic-future.net/note/post/can-ai-understand-music-jokes</link><guid isPermaLink="false">curius:yuu-yuu:116455</guid><pubDate>Fri, 17 May 2024 10:02:23 GMT</pubDate></item><item><title>Elements of successful NIH grant applications | PNAS</title><description></description><link>https://www.pnas.org/doi/10.1073/pnas.2315735121</link><guid isPermaLink="false">curius:yuu-yuu:112848</guid><pubDate>Wed, 24 Apr 2024 17:59:50 GMT</pubDate></item><item><title>简明写作指南</title><description></description><link>https://mp.weixin.qq.com/s/7zf2P_Q9F_1gJKxNYOsuZA</link><guid isPermaLink="false">curius:yuu-yuu:111517</guid><pubDate>Wed, 17 Apr 2024 08:56:01 GMT</pubDate></item><item><title>我的画图流：画图工具与技巧分享</title><description></description><link>https://mp.weixin.qq.com/s?__biz=Mzg2NDg5NzI5Mw==</link><guid isPermaLink="false">curius:yuu-yuu:111516</guid><pubDate>Wed, 17 Apr 2024 08:55:19 GMT</pubDate></item><item><title>AI’s Feeding Frenzy Killed My Sites – The SSD Guy Blog</title><description></description><link>https://thessdguy.com/ais-feeding-frenzy-killed-my-sites</link><guid isPermaLink="false">curius:yuu-yuu:108503</guid><pubDate>Sat, 30 Mar 2024 14:32:46 GMT</pubDate></item><item><title>(1 封私信) 底层的人们应该怎么打破信息差的壁垒呢? - 知乎</title><description></description><link>https://www.zhihu.com/question/614676265/answer/3442308810</link><guid isPermaLink="false">curius:yuu-yuu:107768</guid><pubDate>Mon, 25 Mar 2024 13:51:54 GMT</pubDate></item><item><title>Yanyan&#39;s Wiki</title><description>评论：   &lt;br&gt;标注：
“先读个硕士观望一下要不要读博士”：对我们来说，这是一个不存在的选项 (现在南京大学计算机系在推免时也分开了硕士和博士)。科研的入门训练是极为艰苦且漫长的。对硕士生，我们选择直接拿来当马仔。&lt;br&gt;   </description><link>https://jyywiki.cn/Letter.md</link><guid isPermaLink="false">curius:yuu-yuu:107664</guid><pubDate>Sun, 24 Mar 2024 17:49:04 GMT</pubDate></item><item><title>vCard + RSS as an alternative to social media - nfraprado</title><description></description><link>https://nfraprado.net/post/vcard-rss-as-an-alternative-to-social-media.html</link><guid isPermaLink="false">curius:yuu-yuu:107650</guid><pubDate>Sun, 24 Mar 2024 16:49:07 GMT</pubDate></item><item><title>巨头AI，受困于巨头垄断 – 虹线</title><description></description><link>https://1q43.blog/post/2129</link><guid isPermaLink="false">curius:yuu-yuu:102755</guid><pubDate>Mon, 26 Feb 2024 12:50:48 GMT</pubDate></item><item><title>软件幻灭（译） @ tonsky.me</title><description>评论：   &lt;br&gt;标注：我有一个每天都要运行的Python程序，每次运行需要1.5秒。我花了六个小时用rust重写了这个程序，现在这个程序运行一次只需要0.06秒了。41年零24天以后，效率提升节约下来的时间补偿了我重写程序的六个小时。:)&lt;br&gt;    &lt;br&gt;标注：当某个APP或者服务宣称是“人工智能驱动”或“基于机器学习”的时候，我把它理解为“不可靠，不可预测，行为不可解释”。我尽量避免使用”AI”，因为我希望电脑是可靠的，可预测的，可解释的。&lt;br&gt;   </description><link>https://tonsky.me/blog/disenchantment/zh</link><guid isPermaLink="false">curius:yuu-yuu:102752</guid><pubDate>Mon, 26 Feb 2024 12:30:17 GMT</pubDate></item><item><title>The Dirty Pipe Vulnerability — The Dirty Pipe Vulnerability documentation</title><description></description><link>https://dirtypipe.cm4all.com/</link><guid isPermaLink="false">curius:yuu-yuu:102155</guid><pubDate>Thu, 22 Feb 2024 03:46:54 GMT</pubDate></item><item><title>计算机伪科学：文科已经走了，理科还会远吗？</title><description></description><link>https://mp.weixin.qq.com/s/WI6mIoC8uI96pqi1i-WC3A</link><guid isPermaLink="false">curius:yuu-yuu:102152</guid><pubDate>Thu, 22 Feb 2024 03:35:53 GMT</pubDate></item><item><title>我对盗版的态度 | 螺莉莉数据中心</title><description></description><link>https://roriri.one/2024/01/25/about-pirate</link><guid isPermaLink="false">curius:yuu-yuu:100977</guid><pubDate>Thu, 15 Feb 2024 13:25:25 GMT</pubDate></item><item><title>knutmelvaer.no/blog/2020/04/who-are-the-non-technicals</title><description></description><link>https://www.knutmelvaer.no/blog/2020/04/who-are-the-non-technicals</link><guid isPermaLink="false">curius:yuu-yuu:99313</guid><pubDate>Sun, 04 Feb 2024 09:17:22 GMT</pubDate></item><item><title>Authorable format / John Otander</title><description></description><link>https://www.johno.com/authorable-format</link><guid isPermaLink="false">curius:yuu-yuu:99312</guid><pubDate>Sun, 04 Feb 2024 08:43:44 GMT</pubDate></item><item><title>PHD身边的时间陷阱 | ZHANG RONG</title><description></description><link>https://zr9558.com/2014/08/16/timetrap</link><guid isPermaLink="false">curius:yuu-yuu:98722</guid><pubDate>Wed, 31 Jan 2024 13:49:51 GMT</pubDate></item><item><title>Hacking ADHD - Strategies for the Modern Developer | Ledger</title><description></description><link>https://www.ledger.com/blog/hacking-adhd-strategies-for-the-modern-developer</link><guid isPermaLink="false">curius:yuu-yuu:87010</guid><pubDate>Thu, 16 Nov 2023 14:17:37 GMT</pubDate></item><item><title>Misguided call for a 7-Zip boycott brings attention to FOSS archiving tools • The Register</title><description></description><link>https://www.theregister.com/AMP/2022/06/27/7zip_compression_tool</link><guid isPermaLink="false">curius:yuu-yuu:86139</guid><pubDate>Fri, 10 Nov 2023 20:50:14 GMT</pubDate></item><item><title>农民行动的观念基础——以一个公司型农场的作物失窃事件为例</title><description>评论：   &lt;br&gt;标注：
&lt;br&gt;    &lt;br&gt;标注：笔者：为什么你这儿的玉米从来不丢，跟你的地隔着10米远的农场，玉米成片地丢失啊？

姜中水：因为他们都知道我叫什么……知道了名就知道了关系，来偷玉米的人就要考虑这个关系。农场就没有这一点，你去村里打听一下，有几个人知道王辰林这个名啊，他的名在我们这里叫不响。我们都拿着他很陌生，不熟悉，就不用考虑跟你什么关系，你说他的玉米丢多少，和我们有什么关系啊？

笔者：拿外地人的为什么不会不好意思啊？

姜中水：我不认识你啊，没感情，没关系。就像我们是中国人，他们是外国人一样。打个比方吧，我在地里走着，捡了个手机，我先看看通讯录里有没有我认识的人，要是有，这就不能关机，要等着丢手机的打电话。他一来电话，我就说，“放心吧，在我这儿呢，我一会给你送过去”。要是我一看里面一个认识的也没有，马上给他关机拔卡卖了去，有什么不好意思的啊？（访谈资料20160831SZJ）&lt;br&gt;    &lt;br&gt;标注：
&lt;br&gt;   </description><link>https://mp.weixin.qq.com/s/ULhZInE8-3yXFcpnr97ZDA</link><guid isPermaLink="false">curius:yuu-yuu:80677</guid><pubDate>Thu, 05 Oct 2023 10:08:49 GMT</pubDate></item><item><title>Why You Shouldn&#39;t Nest Your Code - YouTube</title><description></description><link>https://www.youtube.com/watch?v=CFRhGnuXG-4</link><guid isPermaLink="false">curius:yuu-yuu:78584</guid><pubDate>Tue, 19 Sep 2023 14:02:48 GMT</pubDate></item><item><title>English-level-up-tips</title><description>评论：   &lt;br&gt;标注：
&lt;br&gt;   </description><link>https://byoungd.github.io/English-level-up-tips</link><guid isPermaLink="false">curius:yuu-yuu:78540</guid><pubDate>Tue, 19 Sep 2023 08:36:14 GMT</pubDate></item><item><title>Why Web UI Development Is So Hard? | by Juntao Qiu | Sep, 2023 | ITNEXT</title><description>原文：Web UI development might appear straightforward at first glance, but delve deeper and you’ll discover a multitude of complexities that challenge even seasoned developers. This piece aims to dissect the inherent challenges of web UI development, from the discrepancy between web languages and the modern UI requirements, to intricate data management issues and asynchronous API calls.&lt;br&gt;&lt;br&gt;We’ll also explore often-overlooked “unhappy paths” such as loading states, error handling, and broader architecture considerations encompassing security, performance, and accessibility.&lt;br&gt;&lt;br&gt;Unless you’re building a straightforward, document-like webpage — such as a basic article without advanced UI elements like search boxes or modals — the built-in languages offered by web browsers are generally insufficient. Most web applications are much more complex than a simple document.&lt;br&gt;&lt;br&gt;The disparity between the language of the web and the UI experiences people encounter daily is substantial. Whether it’s a ticket booking platform, a project management tool, or an image gallery, modern web UIs are intricate, and native web languages don’t readily support them. You can go the extra mile to “simulate” UI components like accordions, toggle switches, or interactive cards, but fundamentally, you’re still working with what amounts to a document, not a genuine UI component.&lt;br&gt;&lt;br&gt;In an ideal world, building a user interface would resemble working with a visual UI designer. Tools like C++ Builder or Delphi, or more modern alternatives like Figma, let you drag-and-drop components onto a canvas that then renders seamlessly on any screen.&lt;br&gt;&lt;br&gt;This isn’t the case with web development. For instance, to create a custom search input, you’ll need to wrap it in additional elements, fine-tune colors, adjust padding and fonts, and perhaps add an icon for user guidance. Creating an auto-suggestion list that appears right under the search box, matching its width exactly, is often far more labor-intensive than one might initially think.&lt;br&gt;&lt;br&gt;Above is a Jira ticket — an issue view, and as you can tell it’s a relatively complicated user interface. For such a UI you might expect there is Navigator component, Dropdown list, Accordion and so on. But there isn’t, or should I say not directly.&lt;br&gt;&lt;br&gt;Developers have worked hard to simulate these with HTML, CSS and JavaScript. If I disable the CSS for the site temporarily, I will get something like this:&lt;br&gt;&lt;br&gt;Thanks to Jira engineers’ hard work, the application still functions even though it doesn’t look right — you can click buttons and links to navigate around and even upload an image as an attachment for the ticket.&lt;br&gt;&lt;br&gt;Utilizing a design system library can alleviate some of these challenges, offering developers a head start rather than building from scratch. However, design systems come with their own set of drawbacks and require thorough evaluation before integration into your project.&lt;br&gt;&lt;br&gt;But building a design system is a challenging thing. There are tons of things that need to be considered, but they are…&lt;br&gt;&lt;br&gt;Unfortunately, the language mismatch is only a tiny portion of the problem, and frankly, the situation has changed slightly since we have declarative UI libraries like React and Vue. However, there are other challenges in the front-end realm. The data (state) management is definitely on the list.&lt;br&gt;&lt;br&gt;Managing the state in modern frontend development is a complex task. Nearly every application has to retrieve data from a remote server via a network. This often involves various concerns like authentication for API access and the specifics of the data-fetching code, such as the protocol used, data format, and whether the API is RESTful, GraphQL, or RPC-based.&lt;br&gt;&lt;br&gt;But that’s just one aspect; there’s also the matter of managing local state. For example, an accordion component needs to track whether it’s expanded or collapsed, and a text field in a form must manage its own value.&lt;br&gt;&lt;br&gt;Using a third-party state management library like Redux or MobX can be beneficial when your application reaches a level of complexity that makes state tracking difficult. However, this approach isn’t without its caveats and should be considered carefully.&lt;br&gt;&lt;br&gt;Many developers are leaning towards using React’s built-in Context API for state management. Additional complexities such as steep learning curves, boilerplate code, and potential performance overhead are some reasons why these libraries might not be suitable for everyone.&lt;br&gt;&lt;br&gt;When it comes to UI development, our primary focus is often on the “happy path” — the optimal user journey where everything goes as planned. However, neglecting the “unhappy paths” can make your UI far more complicated than you might initially think. Here are some scenarios that could lead to unhappy paths and consequently complicate your UI development efforts.&lt;br&gt;&lt;br&gt;Imagine you’re using a third-party component or even another team’s component within your application. If that component throws an error, it could potentially break your UI or lead to unexpected behaviors that you have to account for. This can involve adding conditional logic or error boundaries to handle these errors gracefully, making your UI more complex than initially anticipated.&lt;br&gt;&lt;br&gt;For example, the following code we’re trying to access something doesn’t exist in the passed in props — a common TypeError: Cannot read properties of undefined (reading ‘doesnt’) and it throws an exception.&lt;br&gt;&lt;br&gt;It can cause the whole application to crash if we don’t isolate the error into an ErrorBoundary.&lt;br&gt;&lt;br&gt;Your UI might depend on various microservices or APIs for fetching data. If any of these downstream systems are down, your UI has to account for it. You’ll need to design fallbacks, loading indicators, or friendly error messages that guide the user on what to do next. Handling these scenarios effectively often involves both frontend and backend logic, thus adding another layer of complexity to your UI development tasks.&lt;br&gt;&lt;br&gt;No matter how perfectly you design your UI, users will always find ways to use your system in manners you didn’t anticipate. Whether they input special characters in text fields, try to submit forms too quickly, or use browser extensions that interfere with your site, you have to design your UI to handle these edge cases. This means implementing additional validation, checks, and safeguards that can complicate your UI codebase.&lt;br&gt;&lt;br&gt;Understanding and effectively managing these unhappy paths are critical for creating a robust, resilient, and user-friendly interface. Not only do they make your application more reliable, but they also contribute to a more comprehensive and well-thought-out user experience.&lt;br&gt;&lt;br&gt;I’ve discussed the unhappy path in this article before, please have a read if you haven’t yet.&lt;br&gt;&lt;br&gt;When the Product Owner told you it’s a small change, don’t trust him.&lt;br&gt;&lt;br&gt;In React, network programming poses unique challenges that go beyond the apparent simplicity of making API calls with useEffect . While the happy path might seem straightforward, the reality quickly complicates as you account for various scenarios like error handling, loading states, and retries. Add to that the complexities of caching and the code can quickly become unwieldy and hard to maintain.&lt;br&gt;&lt;br&gt;So instead of doing this (it’s a good starting point, though) with useEffect hook.&lt;br&gt;&lt;br&gt;In a real-world codebase, beyond just using the fetch function, you’ll often find yourself managing additional states, a process that’s also susceptible to errors.&lt;br&gt;&lt;br&gt;There is a long list of potential considerations on the react-query documentation page.&lt;br&gt;&lt;br&gt;We’ve touched on some key challenges in Web UI Development, yet this is just a fraction of the complexities you’ll encounter in real-world projects. Many more factors must be considered as you navigate these and other challenges.&lt;br&gt;&lt;br&gt;While each bulletin above could warrant its own article or even a series of articles, I’ll stop here to keep this post from becoming too lengthy and overwhelming. I’ve included a references section with further reading materials for those interested in diving deeper.&lt;br&gt;&lt;br&gt;In sum, the landscape of web UI development is fraught with challenges that extend beyond writing code and designing interfaces. The inherent language limitations, nuanced data management, async complexities, and often-ignored unhappy paths collectively make this a formidable field.&lt;br&gt;&lt;br&gt;Architectural decisions around security, performance, and accessibility further complicate the landscape. Understanding these challenges is the first step towards navigating them effectively and crafting web UIs that are visually appealing but also robust, secure, and user-friendly.&lt;br&gt;&lt;br&gt;More from Juntao Qiu and ITNEXT&lt;br&gt;&lt;br&gt;Decoupling UI and Logic in React: A Clean Code Approach with Headless Components&lt;br&gt;&lt;br&gt;In the realm of front-end development, terms and paradigms can sometimes be mystifying, and ‘headless UI’ or ‘headless components’ may very…&lt;br&gt;&lt;br&gt;Yes, here are 4 stacks to build MVPs faster in 2023&lt;br&gt;&lt;br&gt;The faster you launch, the faster you can test your idea with users. So here are the 4 best stacks to launch your product faster in 2023.&lt;br&gt;&lt;br&gt;🦙 How to Run Llama 2 on Mac M1 and Train with Your Own Data&lt;br&gt;&lt;br&gt;Llama 2 is the next generation of large language model (LLM) developed and released by Meta, a leading AI research company. It is…&lt;br&gt;&lt;br&gt;Create Your Own OpenAI Powered Chatbot in React within 30 minutes.&lt;br&gt;&lt;br&gt;In this tutorial, we will explore how to build a simple user interface that leverages the OpenAI HTTP API in conjunction with React. The…&lt;br&gt;&lt;br&gt;See all from Juntao Qiu&lt;br&gt;&lt;br&gt;See all from ITNEXT&lt;br&gt;&lt;br&gt;“Good Commit” vs “Your Commit”: How to Write a Perfect Git Commit Message&lt;br&gt;&lt;br&gt;A good commit shows whether a developer is a good collaborator — Peter Hutterer, Linux.&lt;br&gt;&lt;br&gt;State Management in React in 2023: The Latest and Greatest Approaches&lt;br&gt;&lt;br&gt;20 JavaScript Tips and Tricks You Can Use Right Now&lt;br&gt;&lt;br&gt;Photo by Gabriel Heinzer on Unsplash&lt;br&gt;&lt;br&gt;🚫⚠️ 5 React useState Mistakes That Can Put Your Job at Risk: Avoid These Pitfalls! 🔥💥&lt;br&gt;&lt;br&gt;Hey, React developers! We all love the power and simplicity of the useState hook, but let’s face it, even the most experienced coders can…&lt;br&gt;&lt;br&gt;The Best Filter UI Design for Large-Scale Apps&lt;br&gt;&lt;br&gt;Optimizing filter layout and interaction&lt;br&gt;&lt;br&gt;Here’s Why You Should Hand Over Product Prioritization to Engineering Managers&lt;br&gt;&lt;br&gt;Let engineering managers own prioritization. Bold move, but here’s why it’s the future — and your team’s secret weapon&lt;br&gt;&lt;br&gt;   </description><link>https://itnext.io/why-web-ui-development-is-so-hard-a88c47f4b3c5</link><guid isPermaLink="false">curius:yuu-yuu:77542</guid><pubDate>Tue, 12 Sep 2023 16:41:59 GMT</pubDate></item><item><title>除了XXX年一遇的暴雨，得知泄洪时间同样重要 | 搜信源</title><description></description><link>https://mp.weixin.qq.com/s/GBavi728LMkoJCCl_9jCqw</link><guid isPermaLink="false">curius:yuu-yuu:77394</guid><pubDate>Mon, 11 Sep 2023 09:53:43 GMT</pubDate></item><item><title>Blocked by Cloudflare</title><description>原文：Well, it finally happened to me. I was blocked out of a website I need for work because of Cloudflare. And I have no idea if or when I’ll be let back in.&lt;br&gt;&lt;br&gt;The story begins with Cloudflare. Cloudflare is a company that provides content delivery networking , distributed denial-of-service prevention , and other networking infrastructure services to large parts of the internet. The decisions that this company makes have broad impacts for individuals, companies, and anything that relies on the internet, as their homepage describes .&lt;br&gt;&lt;br&gt;Many websites that use Cloudflare’s services deploy a “browser integrity check” before you can access their site. In theory, this is to keep bad actors, unscrupulous bots, and other undesirables off of your website to keep your traffic costs down and ensure your website is interacting with a genuine human using your site for a purpose you intended. But often there are issues with these security pages that cause problems for users who are just minding their own business and genuinely trying to access the site with good intentions.&lt;br&gt;&lt;br&gt;One such issue is the “secure connection loop”. You type the URL for the site you want to visit in the address bar, Cloudflare intercepts that request, and puts up a security page that says “Checking if the site connection is secure”. That page looks like this:&lt;br&gt;&lt;br&gt;The issue is that sometimes you can never get past this page. The loading symbol just keeps spinning, but the check never completes. Or maybe the page refreshes and asks you to verify you are a human for a second time. Then it refreshes again, and again, and again. So even though you are a human who is jumping through the hoops Cloudflare demands you jump through, they throw away that hoop and ask you to jump through another one, or else they won’t let you through.&lt;br&gt;&lt;br&gt;This is a common enough problem that when you search for “Cloudflare checking if the site connection is secure”, you see one result for Cloudflare’s official documentation and every other result asking about how to get around these pages because users are stuck at them.&lt;br&gt;&lt;br&gt;This is what happened to me when I tried to access a page on GitLab for some scientific software I was checking out for work on my work computer. GitLab starting using Cloudflare in 2020 , so naturally I was met their their “browser integrity check page”. But no matter what I did, I was stuck in that “secure connection loop”. I have no idea why. I checked the developer console for errors and tried to fix them. I temporarily disabled extensions. I opened a private browsing window. I restarted my computer. Nothing worked.&lt;br&gt;&lt;br&gt;Because I needed to check out this software, I read a bunch of those search results to see if I could get around Cloudflare’s check. Eventually, I found some suggestions that if you’re using Firefox you can disable the privacy.resistFingerprinting option in the about:config page. But that was already listed as false for me when I got stuck, so I switched the value to true just to see if that would do anything.&lt;br&gt;&lt;br&gt;And that worked! I navigated straight through the browser integrity check and was able to check out the software I wanted to look at. Problem solved.&lt;br&gt;&lt;br&gt;Just kidding, my problem was only temporarily relieved. And this, in fact, made my situation much worse.&lt;br&gt;&lt;br&gt;The next day, I tried accessing a web page internal to my company that I need for my work and I was met with this page:&lt;br&gt;&lt;br&gt;To recap: I couldn’t get past a security check page because of issues in Cloudflare’s software. Because of that, I enabled a single privacy-preserving feature in my browser to bypass the faulty page. As a result, I was then blocked on an unrelated website that I need for work.&lt;br&gt;&lt;br&gt;The silliness of it all is that I was on my work device the whole time, which was behind my workplace VPN. And you can’t access this VPN without specific security certificates being installed on the device. Worse yet, I know that Cloudflare knows I have those certificates. Why? Because it asked for them!&lt;br&gt;&lt;br&gt;Cloudflare has extremely reliable data to attest that I am in fact the person I say I am:&lt;br&gt;&lt;br&gt;But it actively ignores this information in favour of a hint that maybe, there is a possibility that I might, in some possible universe, be doing something I wouldn’t normally do.&lt;br&gt;&lt;br&gt;I didn’t install some sketchy extension. I’m not connecting over a headless browser. I didn’t change the user agent string. I didn’t try to access the website over Tor or some unconventional protocol. I only changed one privacy-preserving setting in my browser. Even reverting the setting to its previous value didn’t change anything. But now resources that I absolutely need for work are in jeopardy and there’s no easy recourse for me to resolve these issues. And need I remind you that the only reason I enabled this option in the first place was to get around Cloudflare’s faulty security in the first place?&lt;br&gt;&lt;br&gt;What I suspect happened is that the secure connection loop caused my browser to request access to a single page many times in a short time span. Cloudflare detected the high frequency of requests and denials (but not their faulty loop that caused this pattern of requests, of course), and tagged my browser as suspicious. When I then blocked fingerprinting to get around the page, it worked initially, but Cloudflare eventually identified the series of events as nefarious and marked me with their scarlet letter. So now I have no idea when that page will work for me again. Maybe I’ll have to dig through the corporate directory to find the sysadmin responsible for this page to see if they can enable my access again. Who knows how much time that will waste.&lt;br&gt;&lt;br&gt;I tried all of the above in Firefox. So I naturally tried to access the same page in Google Chrome to see if I’d still be blocked. Thankfully, I wasn’t.&lt;br&gt;&lt;br&gt;But of course I wasn’t because Chrome doesn’t have the same privacy- and security-enhancing designs that Firefox does. Chrome will happily collect as much private information about me and my browsing history and share them with select parties, as needed. It also doesn’t resist fingerprinting or let me modify settings to the same degree that Firefox does because Chrome relies on those fingerprinting technologies to ensure that I am targeted by ads it deems necessary for me to see.&lt;br&gt;&lt;br&gt;Being blocked on Firefox and not blocked on Chrome also tells me that Cloudflare is blocking me based on the fingerprint (or lackthereof) of my browser. Everything about my connection is identical between the two requests, aside from the browser being used. It’s the same security certificates, same corporate VPN, same machine, even the same timeframe when I try to access the site.&lt;br&gt;&lt;br&gt;For the foreseeable future, I have to use Chrome to access this internal work site. I may also have to do this for other sites, because I don’t know how many internal and external websites are “secured” by Cloudflare that may block me, now. I could try reinstalling Firefox and to see if that changes anything. But at this point I’m just guessing what I could do to solve my problems. And if I’ve learned anything from the events above it’s that guessing with stuff like this can make my situation much worse with little to no recourse.&lt;br&gt;&lt;br&gt;These types of experiences are precisely the things that worry me about the future of the web. I have strong proof that I am who I say I am, but because I took one step out of lockstep with what was expected of me by others that I can’t communicate with, I’m blocked from accessing resources that I need. My case is obviously only one small example. But it is an example that makes my livelihood more difficult and fragmented.&lt;br&gt;&lt;br&gt;Similar remote attestation and “security” measures could just as easily target things like online banking, which would interfere with just about every aspect of a person’s life. And this isn’t just hypothetical examples, mind you. Anyone who uses a de-Googled Android phone has to go to great lengths to ensure hardware attestation is working correctly, like GrapheneOS documents here , or else they can’t using banking apps. There is scant middle ground between accessing your money on your device and letting Google monitor your every interaction with that device.&lt;br&gt;&lt;br&gt;Proposals for the future of the web that leave more power with unaccountable corporations and less with the individual will inevitably lead to more situations like this where individuals are left scrambling to figure out the Kafka-esque and invisible rules that they must follow to meet the ever-changing whims of these corporate entities. I feel confident in making bold statements like this because companies, governments, and regulatory bodies across the world have repeatedly and overwhelmingly made decisions that favour corporate and governmental control over individual freedoms, rights, and privacy over the past 20 years. Only in the last few years have legal frameworks with actual teeth started going after companies that routinely violate privacy laws, like the 1.2 B EUR fine levied against Facebook due to its GDPR violations . But these legal decisions don’t happen without huge fights and blowbacks from tech companies.&lt;br&gt;&lt;br&gt;The Web Integrity API proposal that has so many people and companies in uproar about the future of the web is precisely this kind of proposal. If and when financial companies opt in to remote attestation policies for their websites, it will place greater restrictions on the types of hardware, operating systems, and software individuals can use. I understand that there are legitimately good reasons to block certain combinations of hardware and software, say old devices with known vulnerabilities that cannot get patched. But decisions like this from corporate entities always seem to have motivated reasoning that increases the control of corporations at the cost of the freedoms or rights of individuals.&lt;br&gt;&lt;br&gt;Take the first example of the Web Integrity API proposal:&lt;br&gt;&lt;br&gt;Users like visiting websites that are expensive to create and maintain, but they often want or need to do it without paying directly. These websites fund themselves with ads, but the advertisers can only afford to pay for humans to see the ads, rather than robots. This creates a need for human users to prove to websites that they’re human, sometimes through tasks like challenges or logins.&lt;br&gt;&lt;br&gt;Within two sentences, the authors are able to present the needs of advertisers as if they were synonymous with the needs of individuals. And in the third sentence they put the onus on the individual to do something about it. Is it relevant that the authors all work for Google, which makes most of its money from advertising?&lt;br&gt;&lt;br&gt;Similarly, the introduction of passkeys is a useful proposal that could go multiple ways. More secure access to websites that also provides a simpler user experience is undoubtedly a win-win. But like I mentioned above in my experience with Cloudflare, I already had very strong data to prove that I was who I said I was and they blocked me anyway. How am I to know whether these synced SSH keys that are unique to a single domain won’t get overlooked by Cloudflare or similar service providers? And if these passkeys are going to form the backbone of how I interact with almost any website, how much control over them will I have? A small list of important questions I have about using passkeys are:&lt;br&gt;&lt;br&gt;I’m not a sysadmin or network engineer, so answers to these questions are simply beyond my expertise. There are other, more important questions I focus on in my day job and I simply do not have the time to become a computer security expert as well. As much as I’d love to use a simpler and standardized authentication method that is more secure than passwords, the central question of how much control I have over my data and how that is respected by others is critical when considering the benefits of ceding control over to corporate entities. And that is a separate question from how much it will even matter if, at the end of the day, some other company with dubious practices and origins will just do their own thing anyway?&lt;br&gt;&lt;br&gt;Passwords, for all their faults, have one fundamentally stellar property by nature: individuals make them for themselves . Individuals can make them on whatever device they own. Individuals can make them how they want. Individuals can manage them how they like. Certain people or tools or companies can make it easier to manage and use your passwords, but ultimately passwords are made by, and belong to, the individual.&lt;br&gt;&lt;br&gt;VPNs, certificates, fingerprinting, and other technologies are ways of addressing the shortcomings of passwords and computer security. But if I have to give up all pretense of privacy to do basic things, and might still get blocked anyway, how much is any of this stuff helping?&lt;br&gt;&lt;br&gt;   </description><link>https://jrhawley.ca/2023/08/07/blocked-by-cloudflare</link><guid isPermaLink="false">curius:yuu-yuu:73296</guid><pubDate>Wed, 09 Aug 2023 14:03:57 GMT</pubDate></item><item><title>ajeetdsouza/zoxide: A smarter cd command. Supports all major shells.</title><description></description><link>https://github.com/ajeetdsouza/zoxide</link><guid isPermaLink="false">curius:yuu-yuu:73295</guid><pubDate>Wed, 09 Aug 2023 14:00:58 GMT</pubDate></item><item><title>The Fear Of AI Just Killed A Very Useful Tool | Techdirt</title><description>原文：I do understand why so many people, especially creative folks, are worried about AI and how it’s used. The future is quite unknown, and things are changing very rapidly, at a pace that can feel out of control. However, when concern and worry about new technologies and how they may impact things morphs into mob-inspiring fear, dumb things happen. I would much rather that when we look at new things, we take a more realistic approach to them, and look at ways we can keep the good parts of what they provide, while looking for ways to mitigate the downsides.&lt;br&gt;&lt;br&gt;Hopefully without everyone going crazy in the meantime. Unfortunately, that’s not really the world we live in.&lt;br&gt;&lt;br&gt;Last year, when everyone was focused on generative AI for images, we had Rob Sheridan on the podcast to talk about why it was important for creative people to figure out how to embrace the technology rather than fear it. The opening story of the recent NY Times profile of me was all about me in a group chat, trying to suggest to some very creative Hollywood folks how to embrace AI rather than simply raging against it. And I’ve already called out how folks rushing to copyright, thinking that will somehow “save” them from AI, are barking up the wrong tree .&lt;br&gt;&lt;br&gt;But, in the meantime, the fear over AI is leading to some crazy and sometimes unfortunate outcomes. Benji Smith, who created what appears to be an absolutely amazing tool for writers, Shaxpir , also created what looked like an absolutely fascinating tool called Prosecraft, that had scanned and analyzed a whole bunch of books and would let you call up really useful data on books.&lt;br&gt;&lt;br&gt;He created it years ago, based on an idea he had years earlier, trying to understand the length of various books (which he initially kept in a spreadsheet). As Smith himself describes in a blog post :&lt;br&gt;&lt;br&gt;I heard a story on NPR about how Kurt Vonnegut invented an idea about the “shapes of stories” by counting happy and sad words. The University of Vermont “Computational Story Lab” published research papers about how this technique could show the major plot points and the “emotional story arc” of the Harry Potter novels (as well as many many other books).&lt;br&gt;&lt;br&gt;So I tried it myself and found that I could plot a graph of the emotional ups and downs of any story. I added those new “sentiment analysis” tools to the prosecraft website too.&lt;br&gt;&lt;br&gt;When I ran out of books on my own shelves, I looked to the internet for more text that I could analyze, and I used web crawlers to find more books. I wanted to be mindful of the diversity of different stories, so I tried to find books by authors of every race and gender, from every different cultural and political background, writing in every different genre and exploring all different kinds of themes. Fiction and nonfiction and philosophy and science and religion and culture and politics.&lt;br&gt;&lt;br&gt;Somewhere out there on the internet, I thought to myself, there was a new author writing a horror or romance or fantasy novel, struggling for guidance about how long to write their stories, how to write more vivid prose, and how much “passive voice” was too much or too little.&lt;br&gt;&lt;br&gt;I wanted to give those budding storytellers a suite of “lexicographic” tools that they could use, to compare their own writing with the writing of authors they admire. I’ve been working in the field of computational linguistics and machine learning for 20+ years, and I was always frustrated that the fancy tools were only accessible to big businesses and government spy agencies. I wanted to bring that magic to everyone.&lt;br&gt;&lt;br&gt;Frankly, all of that sounds amazing. And amazingly useful. Even more amazing is that he built it, and it worked. It would produce useful analysis of books, such as this example from Alice’s Adventures in Wonderland:&lt;br&gt;&lt;br&gt;And, it could also do further analysis like the following:&lt;br&gt;&lt;br&gt;This is all quite interesting. It’s also the kind of thing that data scientists do on all kinds of work for useful purposes.&lt;br&gt;&lt;br&gt;Smith built Prosecraft into Shaxpir, again, making it a more useful tool. But, on Monday, some authors on the internet found out about it and lost their shit, leading Smith to shut the whole project down .&lt;br&gt;&lt;br&gt;There seems to be a lot of misunderstanding about all of this. Smith notes that he had researched the copyright issues and was sure he wasn’t violating anything, and he’s right. We’ve gone over this many times before. Scanning books is pretty clearly fair use . What you do with that later could violate copyright law, but I don’t see anything that Prosecraft did that comes anywhere even remotely close to violating copyright law.&lt;br&gt;&lt;br&gt;But… some authors got pretty upset about all of it.&lt;br&gt;&lt;br&gt;I’m still perplexed at what the complaint is here? You don’t need to “consent” for someone to analyze your book. You don’t need to “consent” to someone putting up statistics about their analysis of your book.&lt;br&gt;&lt;br&gt;But, Zach’s tweet went viral with a bunch of folks ready to blow up anything that smacks of tech bro AI, and lots of authors started yelling at Smith.&lt;br&gt;&lt;br&gt;The Gizmodo article has a ridiculously wrong “fair use” analysis, saying “Fair Use does not, by any stretch of the imagination, allow you to use an author’s entire copyrighted work without permission as a part of a data training program that feeds into your own ‘AI algorithm.’” Except… it almost certainly does? Again, we’ve gone through this with the Google Book scanning case, and the courts said that you can absolutely do that because it’s transformative.&lt;br&gt;&lt;br&gt;It seems that what really tripped up people here was the “AI” part of it, and the fear that this was just another a VC funded “tech bro” exercise of building something to get rich by using the works of creatives. Except… none of that is accurate. As Smith explained in his blog post:&lt;br&gt;&lt;br&gt;For what it’s worth, the prosecraft website has never generated any income. The Shaxpir desktop app is a labor of love, and during most of its lifetime, I’ve worked other jobs to pay the bills while trying to get the company off the ground and solve the technical challenges of scaling a startup with limited resources. We’ve never taken any VC money, and the whole company is a two-person operation just working our hardest to serve our small community of authors.&lt;br&gt;&lt;br&gt;He also recognizes that the concerns about it being some “AI” thing are probably what upset people, but plenty of authors have found the tool super useful, and even added their own books:&lt;br&gt;&lt;br&gt;I launched the prosecraft website in the summer of 2017, and I started showing it off to authors at writers conferences. The response was universally positive, and I incorporated the prosecraft analytic tools into the Shaxpir desktop application so that authors could privately run these analytics on their own works-in-progress (without ever sharing those analyses publicly, or even privately with us in our cloud).&lt;br&gt;&lt;br&gt;I’ve spent thousands of hours working on this project, cleaning up and annotating text, organizing and tweaking things. A small handful of authors have even reached out to me, asking to have their books added to the website. I was grateful for their enthusiasm.&lt;br&gt;&lt;br&gt;But in the meantime, “AI” became a thing.&lt;br&gt;&lt;br&gt;And the arrival of AI on the scene has been tainted by early use-cases that allow anyone to create zero-effort impersonations of artists, cutting those creators out of their own creative process.&lt;br&gt;&lt;br&gt;That’s not something I ever wanted to participate in.&lt;br&gt;&lt;br&gt;Smith took the project down entirely because of that. He doesn’t want to get lumped in with other projects, and even though his project is almost certainly legal, he recognized that this was becoming an issue:&lt;br&gt;&lt;br&gt;Today the community of authors has spoken out, and I’m listening. I care about you, and I hear your objections.&lt;br&gt;&lt;br&gt;Your feelings are legitimate, and I hope you’ll accept my sincerest apologies. I care about stories. I care about publishing. I care about authors. I never meant to hurt anyone. I only hoped to make something that would be fun and useful and beautiful, for people like me out there struggling to tell their own stories.&lt;br&gt;&lt;br&gt;I find all of this really unfortunate. Smith built something really cool, really amazing, that does not, in any way, infringe on anyone’s rights. I get the kneejerk reaction from some authors, who feared that this was some obnoxious project, but couldn’t they have taken 10 minutes to look at the details of what it was they were killing?&lt;br&gt;&lt;br&gt;I know we live in an outrage era, where the immediate reaction is to turn the outrage meter up to 11. I’m certainly guilty of that at times myself. But this whole incident is just sad. It was an overreaction from the start, destroying what had been a clear labor of love and a useful project, through misleading and misguided attacks from authors.&lt;br&gt;&lt;br&gt;If you liked this post, you may also be interested in...&lt;br&gt;&lt;br&gt;The latest chatter on the Techdirt Insider Discord channel...&lt;br&gt;&lt;br&gt;This feature is only available to registered users. You can register here or sign in to use it.&lt;br&gt;&lt;br&gt;This site, like most other sites on the web, uses cookies. For more information, see our privacy policy&lt;br&gt;&lt;br&gt;Wednesday&lt;br&gt;&lt;br&gt;Tuesday&lt;br&gt;&lt;br&gt;Monday&lt;br&gt;&lt;br&gt;   </description><link>https://www.techdirt.com/2023/08/08/the-fear-of-ai-just-killed-a-very-useful-tool</link><guid isPermaLink="false">curius:yuu-yuu:73294</guid><pubDate>Wed, 09 Aug 2023 14:00:54 GMT</pubDate></item><item><title>我们的库房被淹了</title><description></description><link>https://mp.weixin.qq.com/s/78e5qbMzk1vHLw5q4RV0nA</link><guid isPermaLink="false">curius:yuu-yuu:72437</guid><pubDate>Tue, 01 Aug 2023 13:26:45 GMT</pubDate></item><item><title>【新字发布】京華老宋体</title><description></description><link>https://mp.weixin.qq.com/s/JWyx3mXpgsEacZ4ADTOd-Q</link><guid isPermaLink="false">curius:yuu-yuu:70575</guid><pubDate>Tue, 11 Jul 2023 16:10:24 GMT</pubDate></item></channel></rss>