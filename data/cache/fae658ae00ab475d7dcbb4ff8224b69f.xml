<?xml version="1.0" encoding="UTF-8"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Matters | robertu</title><link>https://matters.town/@robertu</link><atom:link href="http://rsshub.speednet.icu/matters/author/robertu" rel="self" type="application/rss+xml"></atom:link><description>fork the world a better place. - Powered by RSSHub</description><generator>RSSHub</generator><webMaster>contact@rsshub.app (RSSHub)</webMaster><language>en</language><image><url>https://imagedelivery.net/kDRCweMmqLnTPNlbum-pYA/prod/avatar/ebfd6773-6eae-4844-ac7f-a6295b88d014/public</url><title>Matters | robertu</title><link>https://matters.town/@robertu</link></image><lastBuildDate>Wed, 19 Mar 2025 21:25:19 GMT</lastBuildDate><ttl>5</ttl><item><title>What happens when you type matters.news?</title><description>&lt;blockquote&gt;This article was first published on &lt;a href=&quot;https://www.notion.so/matterslab/What-happens-when-you-type-matters-news-3a72c23e280243a88b66d792902e7bed&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Matters Engineering Wiki&lt;/a&gt;.&lt;/blockquote&gt;&lt;p&gt;In a prior &lt;a href=&quot;https://matters.news/@guo/61788-matters-%E7%9A%84%E6%9E%B6%E6%A7%8B%E8%88%87%E6%8A%80%E8%A1%93%E6%A3%A7-bafyreigb44cksgptezibqxgop6sqqlw7flg2tjgcuzd3slmqujj2fi3oke&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;article&lt;/a&gt;, we took a sneak peek at the architecture of matters.news, tech stack we used to build the website &amp;amp; API, and details on how we designed components and made them work smoothly together.&lt;/p&gt;&lt;p&gt;In this article, we take another angle, starting with a network request. First, we have a brief overview of how servers respond to users&#39; requests, and then, we dive a little deeper into performance optimization.&lt;/p&gt;&lt;h2&gt;An Overview of Network Request&lt;/h2&gt;&lt;figure class=&quot;image&quot;&gt;&lt;img src=&quot;https://assets.matters.news/embed/aa42978f-eb94-4675-8513-c2b2ff5702c5.png&quot; data-asset-id=&quot;aa42978f-eb94-4675-8513-c2b2ff5702c5&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;figcaption&gt;&lt;span&gt;Life of Network Request&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Client&lt;/h3&gt;&lt;p&gt;Clients, usually web browsers, communicate to servers with HTTP requests.&lt;/p&gt;&lt;p&gt;When a user enters &lt;code&gt;matters.news&lt;/code&gt; into the address bar, the browser first reaches out to the DNS resolver and gets the IP address behind this domain, then sends a request to that IP address, waits for a response, and renders the result in the browser.&lt;/p&gt;&lt;h3&gt;Edge&lt;/h3&gt;&lt;p&gt;At the network edge, we use Cloudflare to accelerate network requests and protect our origin servers, all DNS lookups and requests are first processed by Cloudflare.&lt;/p&gt;&lt;p&gt;DNS lookup will resolve to the nearest Cloudflare reverse proxy instead of our origin servers. The reverse proxy can filter out malicious requests, and provides performance benefits by caching and smart routing.&lt;/p&gt;&lt;h3&gt;Origin Servers&lt;/h3&gt;&lt;p&gt;SSR (Server-side rendering) servers send pre-rendered HTML to the client. Internally, lots of API calls are sent to API servers on behalf of the client.&lt;/p&gt;&lt;p&gt;Once an API request (&lt;code&gt;server.matters.news&lt;/code&gt;) hits the origin API server, it’s served by the cache server if the same request was previously cached, otherwise, the database.&lt;/p&gt;&lt;h3&gt;End-to-end&lt;/h3&gt;&lt;p&gt;Let’s wrap them up.&lt;/p&gt;&lt;ol&gt;&lt;li&gt;A user opens a URL starts with &lt;a href=&quot;https://matters.news/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;matters.news&lt;/a&gt; domain;&lt;/li&gt;&lt;li&gt;The browser makes an HTTP request, which through Cloudflare edge network to our &lt;strong&gt;SSR servers&lt;/strong&gt;;&lt;/li&gt;&lt;li&gt;SSR servers send HTML and it’s rendered by the browser;&lt;/li&gt;&lt;li&gt;The user starts browsing other pages or interacting with the website;&lt;/li&gt;&lt;li&gt;The browser makes subsequent API calls, which through Cloudflare edge network to our &lt;strong&gt;API servers&lt;/strong&gt;;&lt;/li&gt;&lt;/ol&gt;&lt;h2&gt;Network Profiling&lt;/h2&gt;&lt;p&gt;Network performance is the core of website performance. To optimize, we first need to understand the network traffic. How many requests are sent? How fast can servers respond?…&lt;/p&gt;&lt;p&gt;We will cover some key metrics that keep monitoring and improving over time.&lt;/p&gt;&lt;h3&gt;Total Request&lt;/h3&gt;&lt;p&gt;The total request over time is the most basic and intuitive metric to understand the network status.&lt;/p&gt;&lt;p&gt;Cloudflare Analytics shows how many requests to the edge, while AWS Elastic Beanstalk and Apollo Studio show how many hit the origin servers.&lt;/p&gt;&lt;figure class=&quot;image&quot;&gt;&lt;img src=&quot;https://assets.matters.news/embed/13f9dcbc-aa25-4935-8ae5-ccc6483b00a6.png&quot; data-asset-id=&quot;13f9dcbc-aa25-4935-8ae5-ccc6483b00a6&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Response Time&lt;/h3&gt;&lt;p&gt;Response Time is the amount of time the server takes for an API to process a request and respond back to the client.&lt;/p&gt;&lt;p&gt;We can know the percentiles of response time (e.g. P50, P95) for all requests or for a single request type (GraphQL operation). This is very helpful to identify which GraphQL operation is the “victim” of slow response time.&lt;/p&gt;&lt;figure class=&quot;image&quot;&gt;&lt;img src=&quot;https://assets.matters.news/embed/a0831db0-6027-4bf2-8223-136b0edff93a.png&quot; data-asset-id=&quot;a0831db0-6027-4bf2-8223-136b0edff93a&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Cache Hit Ratio&lt;/h3&gt;&lt;p&gt;Cache Hit Ratio tells us what percentage of requests are served without hitting the origin API servers or database. The higher, the faster response.&lt;/p&gt;&lt;figure class=&quot;image&quot;&gt;&lt;img src=&quot;https://assets.matters.news/embed/d4acf045-0013-4ea7-88f3-22cb4ed665aa.png&quot; data-asset-id=&quot;d4acf045-0013-4ea7-88f3-22cb4ed665aa&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;Resource Utilization&lt;/h3&gt;&lt;p&gt;Our origin servers and databases aren’t unlimited auto-scale, so the CPU and memory utilization matter to the performance and reliability.&lt;/p&gt;&lt;figure class=&quot;image&quot;&gt;&lt;img src=&quot;https://assets.matters.news/embed/d3b2e13c-23a9-4e5a-baf0-3ca7d7730373.png&quot; data-asset-id=&quot;d3b2e13c-23a9-4e5a-baf0-3ca7d7730373&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2&gt;Performance Optimization&lt;/h2&gt;&lt;p&gt;Many tools and services can help us improve the network performance, especially at the application layer, and here are some of the actions we have taken.&lt;/p&gt;&lt;h3&gt;Firewall &amp;amp; Smart Routing&lt;/h3&gt;&lt;p&gt;At the network edge, we use &lt;a href=&quot;https://www.cloudflare.com/waf/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Cloudflare WAF&lt;/a&gt; to filter out malicious traffic and protect our origin servers. Firewall rules can control incoming traffic by filtering requests based on geolocation, IP address, HTTP headers. And rate limiting to cap the maximum frequency.&lt;/p&gt;&lt;figure class=&quot;image&quot;&gt;&lt;img src=&quot;https://assets.matters.news/embed/cb18647a-3d6d-4e4c-a99e-ad8808331a35.png&quot; data-asset-id=&quot;cb18647a-3d6d-4e4c-a99e-ad8808331a35&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Since API response is dynamic real-time data and hard to cached by Cloudflare CDN, we enabled &lt;a href=&quot;https://www.cloudflare.com/products/argo-smart-routing/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Cloudflare Argo&lt;/a&gt; to route traffic based on network conditions, pick the fastest and most reliable network paths to our origin servers.&lt;/p&gt;&lt;figure class=&quot;image&quot;&gt;&lt;img src=&quot;https://assets.matters.news/embed/0154d664-f89d-4d9b-b337-479722406d43.png&quot; data-asset-id=&quot;0154d664-f89d-4d9b-b337-479722406d43&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;CDN&lt;/h3&gt;&lt;p&gt;Unlike API, many user-generated contents (UGC) are static, such as images, these contents won’t be changed once created. Our static contents are distributed to AWS CloudFront’s global network, cached and served to user based on geolocation.&lt;/p&gt;&lt;h3&gt;In-Memory Caching&lt;/h3&gt;&lt;p&gt;API request hits the origin servers, the response data will be cached to the cache (Redis) server, before send back to the client.&lt;/p&gt;&lt;p&gt;We use &lt;a href=&quot;https://aws.amazon.com/elasticache/redis/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;AWS ElastiCache for Redis&lt;/a&gt; as in-memory caching for the best IOPS and throughput performance.&lt;/p&gt;&lt;p&gt;On top of Apollo’s GraphQL plugin, we also built &lt;a href=&quot;https://github.com/thematters/apollo-response-cache&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;a set of tools&lt;/a&gt; to control caching and invalidation. We made an effort on one of the &lt;a href=&quot;https://martinfowler.com/bliki/TwoHardThings.html&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;two hard things&lt;/a&gt; in computer science.&lt;/p&gt;&lt;h3&gt;Public/Private Splitting&lt;/h3&gt;&lt;p&gt;API requests (GraphQL operations) are sent by visitors or logged-in users. Requests from visitors are cached publicly, while logged-in users are cached privately. Since private data are accessible by only a single logged-in user, we are caching the API responses by a &lt;a href=&quot;https://github.com/thematters/matters-server/blob/dd8204fd35e03769b8f6118a5946984739b56dc0/src/routes/graphql.ts#L130-L134&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;custom cache key&lt;/a&gt; with the user’s ID.&lt;/p&gt;&lt;p&gt;Further, since &lt;a href=&quot;https://matters.news/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;matters.news&lt;/a&gt; is a public platform, most users are landed on public pages, such as the homepage and article page, which are made up of public data and a little private data (e.g. whether I followed the author). We split the API request into two, one &lt;a href=&quot;https://github.com/thematters/matters-web/blob/a596a203bd1ca2fa3f809006491b4a49e5d75852/src/views/ArticleDetail/gql.ts#L83&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;to query the public&lt;/a&gt; and the other &lt;a href=&quot;https://github.com/thematters/matters-web/blob/a596a203bd1ca2fa3f809006491b4a49e5d75852/src/views/ArticleDetail/gql.ts#L113&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;to query the private&lt;/a&gt; data.&lt;/p&gt;&lt;p&gt;Now, the cache hit ratio of public queries is increased and the load of origin servers to process private queries is reduced.&lt;/p&gt;&lt;h3&gt;Depth Limiting&lt;/h3&gt;&lt;p&gt;Depending on the complexity, different request requires different processing time. We limit the complexity of a GraphQL query by &lt;a href=&quot;https://github.com/thematters/matters-server/blob/dd8204fd35e03769b8f6118a5946984739b56dc0/src/routes/graphql.ts#L113&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;its depth&lt;/a&gt;, it also secures our API server.&lt;/p&gt;&lt;h3&gt;Indexing&lt;/h3&gt;&lt;p&gt;Finally, if a request is cache miss, it requires querying data from the database. We keep monitoring the top load queries and adding indexes for performance and to ease the load.&lt;/p&gt;&lt;figure class=&quot;image&quot;&gt;&lt;img src=&quot;https://assets.matters.news/embed/9e2cd50a-025a-47f3-90ec-c6f2c2402ae5.png&quot; data-asset-id=&quot;9e2cd50a-025a-47f3-90ec-c6f2c2402ae5&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h3&gt;&lt;strong&gt;Summary&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;There are still many ways to optimize network performance, though we won’t cover them here. And ultimately, it all comes down to goals to achieve: minimize request count and complexity, maximize cache hit ratio, and minimize processing time.&lt;/p&gt;</description><link>https://matters.town/a/btx1llehoht2</link><guid isPermaLink="false">https://matters.town/a/btx1llehoht2</guid><pubDate>Thu, 06 Oct 2022 04:35:34 GMT</pubDate><author>robertu</author><category>Matters</category><category>Open Source Matters</category><category>Matters工程日誌</category><category>開源 Matters</category></item><item><title>A Deep Dive Into Logbook Smart Contract</title><description>&lt;p&gt;On experimenting with digital ownership, &lt;a href=&quot;https://matters-lab.io/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Matters Lab&lt;/a&gt; is blurring the line between private and public ownership with three Web3 projects: &lt;a href=&quot;https://traveloggers.matters.news/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Traveloggers&lt;/a&gt;, a profile picture (pfp) NFT on private ownership; &lt;a href=&quot;https://twitter.com/thespace2022&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;The Space&lt;/a&gt;, a draw-to-earn pixel canvas with Universal Basic Income (UBI) and Harberger Tax on common ownership; And, &lt;a href=&quot;https://logbook.matters.news/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Logbook&lt;/a&gt;, a co-creation writing dApp on collective ownership.&lt;/p&gt;&lt;p&gt;Logbook originated as a feature of Traveloggers, allowing NFT owners to write down thoughts on Ethereum blockchain. As the pain of gas fees and new ideas on collaborative content arise, we redesigned the Logbook smart contract with many new features: lower gas fee, fork and donation, royalty-splitting, decentralized frontend, and on-chain NFT.&amp;nbsp;&lt;/p&gt;&lt;p&gt;You don&#39;t completely own your NFTs. Each logbook is an NFT, you have rights to transfer and benefit from your writing. But it&#39;s open to fork, like open-source software, once public, never stop. Anyone can use or fork your code, live and rebirth in other projects, your code commits remain. Logbook is the same, your content is still yours, but it can be in any logbook.&lt;/p&gt;&lt;h2&gt;Overview&lt;/h2&gt;&lt;p&gt;We have three GitHub repositories about Logbook:&lt;/p&gt;&lt;ul&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/thematters/logbook&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;thematters/logbook&lt;/a&gt;: Logbook web app, hosting on &lt;a href=&quot;https://logbook.matters.news/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;logbook.matters.news&lt;/a&gt;;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/thematters/subgraphs&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;thematters/subgraph&lt;/a&gt;: The Graph subgraph;&lt;/li&gt;&lt;li&gt;&lt;a href=&quot;https://github.com/thematters/contracts&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;thematters/contracts&lt;/a&gt;: Logbook smart contract, deployed on &lt;a href=&quot;https://polygonscan.com/address/0xcdf8d568ec808de5fcbb35849b5bafb5d444d4c0&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;PolygonScan&lt;/a&gt;;&lt;/li&gt;&lt;/ul&gt;&lt;p&gt;Writing a secure, gas-efficient, and easy-to-read smart contract is hard, especially in this fast-growing and highly uncertain industry. We would love to share more details on how we design and implement the Logbook smart contract.&amp;nbsp;&lt;/p&gt;&lt;p&gt;&lt;a href=&quot;https://hardhat.org/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Hardhat&lt;/a&gt;, the most popular Solidity development environment, provides a smooth experience for JavaScript developers and excellent extensibility through plugins, but context switching hurts productivity. We write contracts in Solidity but tests in JavaScript. Even worse, we have to deal with the large package dependencies. Thanks to &lt;a href=&quot;https://github.com/gakonst/foundry/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;Foundry&lt;/a&gt;, we can build faster, test better, all in Solidity.&lt;/p&gt;&lt;p&gt;Diving into the &lt;code&gt;src/Logbook/Logbook.sol&lt;/code&gt;, we can see the dependencies of the Logbook contract:&lt;/p&gt;&lt;pre class=&quot;ql-syntax&quot; spellcheck=&quot;false&quot;&gt;Logbook
&amp;nbsp;↖ ERC721
&amp;nbsp;↖ Ownable
&amp;nbsp;↖ Royalty
&lt;/pre&gt;&lt;p&gt;&lt;code&gt;ERC721&lt;/code&gt; is the implementation of &lt;a href=&quot;https://eips.ethereum.org/EIPS/eip-721&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;ERC-721 standard&lt;/a&gt; from OpenZeppelin, &lt;code&gt;Ownable&lt;/code&gt; allows an address to call claim logbook function and change public sale status (Traveloggers can claim logbook for free, after that, they can be minted from public sale).&lt;/p&gt;&lt;p&gt;At the core, &lt;code&gt;Logbook&lt;/code&gt; inherits from &lt;code&gt;Royalty&lt;/code&gt;, contains business logic on how a logbook can be minted, how the owner can interact with the logbook, and how to split royalty from fork and donation.&lt;/p&gt;&lt;p&gt;For blockchain platform, we chose Polygon, mainly because of the low gas fee and the mature ecosystem. As developers, we can use services like Alchemy and The Graph. As creators, we can buy/sell Logbook NFT on OpenSea, swap the incomes to stablecoins on Uniswap, etc.&lt;/p&gt;&lt;p&gt;Last but not least, to query contract data more accessible, we use &lt;a href=&quot;https://thegraph.com/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;The Graph&lt;/a&gt;, a decentralized indexing service that provides &lt;a href=&quot;https://thegraph.com/hosted-service/subgraph/thematters/logbook&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;GraphQL API&lt;/a&gt; for clients.&lt;/p&gt;&lt;h2&gt;Royalty-Splitting and Decentralized Frontend&lt;/h2&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;figure class=&quot;image&quot;&gt;&lt;img src=&quot;https://assets.matters.news/embed/03bf3151-d46c-4c16-860b-2373fd15d21d.png&quot; data-asset-id=&quot;03bf3151-d46c-4c16-860b-2373fd15d21d&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Let’s take a closer look at external functions:&lt;/p&gt;&lt;pre class=&quot;ql-syntax&quot; spellcheck=&quot;false&quot;&gt;// src/Logbook/ILogbook.sol
ILogbook
  - setTitle
  - setDescription
  - publish
  - getLogbook
  - getLogs
  - setForkPrice
  - fork
  - forkWithCommission
  - donate
  - donateWithCommission
  - ...

// src/Logbook/IRoyalty.sol
IRoyalty
  - withdraw
  - getBalance
&lt;/pre&gt;&lt;p&gt;&lt;code&gt;setTitle&lt;/code&gt;, &lt;code&gt;setDescription&lt;/code&gt; and &lt;code&gt;publish&lt;/code&gt; are for owners to update the logbook. &lt;code&gt;getLogbook&lt;/code&gt; and &lt;code&gt;getLogs&lt;/code&gt; just simple getters to get details of a logbook. With these interfaces, we can already make a nice dApp that creators can publish content on-chain. But there is more than that. Creators can make money from their work.&lt;/p&gt;&lt;p&gt;Anyone can donate $MATIC to a logbook, or the owner can set a fork price (&lt;code&gt;setForkPrice&lt;/code&gt;) allowing others to fork the logbook and continue to write. 80% of these incomes goes to the owner, the rest, up to 20%, are equally divided to contents&#39; authors. If some contents are inherited from the fork, the original authors get this share.&lt;/p&gt;&lt;p&gt;Why up to 20%? It depends on how users call the functions.&amp;nbsp;&lt;/p&gt;&lt;p&gt;Most of the time, users view content or interact with contracts via a website. Although Matters Lab designed and built &lt;a href=&quot;https://logbook.matters.news/&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;logbook.matters.news&lt;/a&gt;, it&#39;s centralized, our taste, our limitation. By leveraging these contract interfaces, developers can make a customized frontend by themselves, for others, and take a commission from &lt;code&gt;forkWithCommission&lt;/code&gt; and &lt;code&gt;donateWithCommission&lt;/code&gt;. Assume a developer created a Logbook web app with great UI/UX, readers and creators love to use it. Since maintaining and hosting it costs time and money, the developer decides to take a 5% cut from every fork and donation. Win-Win!&lt;/p&gt;&lt;p&gt;Function parameters &lt;code&gt;commission_&lt;/code&gt; (the address to receive the commission) and &lt;code&gt;commissionBPS_&lt;/code&gt; (the percentage of the commission in basis points) can be passed into &lt;code&gt;forkWithCommission&lt;/code&gt; and &lt;code&gt;donateWithCommission&lt;/code&gt;. The &lt;code&gt;commissionBPS_&lt;/code&gt; is capped at 2,000 (20%), which means the developer can decide how much an address takes after the logbook owner takes 80% of the fees.&lt;/p&gt;&lt;p&gt;Join to hack the Logbook!&lt;/p&gt;&lt;h2&gt;Gas Optimization&lt;/h2&gt;&lt;figure class=&quot;image&quot;&gt;&lt;img src=&quot;https://assets.matters.news/embed/9153f9ef-8570-4cb4-99d7-37ec649bd5fd.png&quot; data-asset-id=&quot;9153f9ef-8570-4cb4-99d7-37ec649bd5fd&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Blockchain, as its name, is a chain consisting of data blocks. A block contains a limited number of transactions. Transaction fee goes to miners of the blockchain network who confirm the service requests, by providing computation and storage resources. Although Moore&#39;s Law makes these resources abundant, decentralized service is scarce. We are paying for the promise of decentralization, bidding with a gas price.&lt;/p&gt;&lt;p&gt;So what efforts have we made to fight this scarcity of abundance?&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Space.&amp;nbsp;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Different EVM opcode executed in a transaction costs different units of gas. One of the most expensive opcodes is &lt;code&gt;&lt;a href=&quot;https://www.evm.codes/#55&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;SSTORE&lt;/a&gt;&lt;/code&gt;, to put data into the contract storage, maximum ~20,000 gas per storage slot (32-byte). We should store minimal data on storage.&lt;/p&gt;&lt;p&gt;There are several gas-efficient ways to store data: stateless contract, off-chain storage, and emitting data as an event. For stateless contracts, data is passed to functions that do nothing. For off-chain storage, data is stored on storage services like IPFS or Arweave, then submit the identifier (URL, CID, etc.) on-chain. Both solutions aren&#39;t easy to access the data by the client. We took the last one, data are emitted as events using &lt;code&gt;&lt;a href=&quot;https://www.evm.codes/#a1&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;LOG*&lt;/a&gt;&lt;/code&gt; opcodes, saving ~90% gas compares to &lt;code&gt;SSTORE&lt;/code&gt;, besides, clients can retrieve on-chain data with topic filters directly or using The Graph API.&lt;/p&gt;&lt;p&gt;Another optimization is on the data structure. Logbook supports collaborative content creation, a logbook can be forked by anyone without the owner&#39;s permission, with inherited contents.&lt;/p&gt;&lt;p&gt;Instead of copying data from the parent, we can just link to it with a minimal set of metadata.&lt;/p&gt;&lt;pre class=&quot;ql-syntax&quot; spellcheck=&quot;false&quot;&gt;// https://github.com/thematters/contracts/blob/81246e4/src/Logbook/ILogbook.sol#L26-L41

struct Book {
    // end position of a range of logs
    uint32 endAt;
    // parent book
    uint256 parent;
    // all logs hashes in the book
    bytes32[] contentHashes;
    ...
}
&lt;/pre&gt;&lt;p&gt;Finally, the gas of content publishing is dropped up to 90%. With Polygon, the cost in USD dropped up to 99.99%!&lt;/p&gt;&lt;figure class=&quot;image&quot;&gt;&lt;img src=&quot;https://assets.matters.news/embed/9883b543-fff2-4b06-8aa7-89ceaa40faca.png&quot; data-asset-id=&quot;9883b543-fff2-4b06-8aa7-89ceaa40faca&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;figcaption&gt;&lt;span&gt;Gas Price = 30 Gwei, 1 MATIC ≈ 1.5 USD, 1 ETH ≈ 3000 USD&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;Time.&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Block has a gas limit, of &lt;a href=&quot;https://polygonscan.com/blocks&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;30M&lt;/a&gt; on Polygon, so a transaction may run out of gas. Royalty-splitting iterates contents and updates the author&#39;s balance. &lt;code&gt;SSTORE&lt;/code&gt; costs ~20,000 gas if the slot is a zero value, but only ~5,000 if it&#39;s non-zero, a vast difference!&lt;/p&gt;&lt;pre class=&quot;ql-syntax&quot; spellcheck=&quot;false&quot;&gt;// https://github.com/thematters/contracts/blob/81246e4/src/Logbook/Logbook.sol#L387-L397

for (uint32 i = 0; i &amp;lt; logCount; i++) {
&amp;nbsp;&amp;nbsp;Log memory log = logs[contentHashes[i]];
&amp;nbsp;&amp;nbsp;_balances[log.author] += fees.perLogAuthor;
&amp;nbsp;&amp;nbsp;...
}
&lt;/pre&gt;&lt;p&gt;We did a little trick to maximize the number of iterations that can be run. The balance of an address will always be a non-zero value once it owns a token. In the long run, the bottleneck on gas limit is mitigated by distributing to specific transactions in different blocks.&amp;nbsp;&lt;/p&gt;&lt;pre class=&quot;ql-syntax&quot; spellcheck=&quot;false&quot;&gt;// https://github.com/thematters/contracts/blob/81246e4/src/Logbook/Logbook.sol#L401-L414

function _afterTokenTransfer(
&amp;nbsp;&amp;nbsp;address from_,
&amp;nbsp;&amp;nbsp;address to_,
&amp;nbsp;&amp;nbsp;uint256 tokenId_
) internal virtual override {
&amp;nbsp;&amp;nbsp;...
&amp;nbsp;&amp;nbsp;if (_balances[to_] == 0) {
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;_balances[to_] = 1 wei;
&amp;nbsp;&amp;nbsp;}
}

// https://github.com/thematters/contracts/blob/81246e4/src/Logbook/Royalty.sol#L12-L24

function withdraw() public {
&amp;nbsp;&amp;nbsp;...
&amp;nbsp;&amp;nbsp;_balances[msg.sender] = 1 wei;
&amp;nbsp;&amp;nbsp;...
}
&lt;/pre&gt;&lt;h2&gt;On-chain NFT&lt;/h2&gt;&lt;figure class=&quot;image&quot;&gt;&lt;img src=&quot;https://assets.matters.news/embed/69094df5-8447-443f-a4b6-3ecc760cfeb6.gif&quot; data-asset-id=&quot;69094df5-8447-443f-a4b6-3ecc760cfeb6&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Logbook is not only an on-chain writing dApp but also a &lt;a href=&quot;https://opensea.io/collection/traveloggers-logbook&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;generative NFT collection&lt;/a&gt;. Every publishing or transfer will change the colors of the image. Under the &lt;a href=&quot;https://eips.ethereum.org/EIPS/eip-170&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;24KB&lt;/a&gt; contract code size limit, SVG is light and flexible, an ideal format to generate images on-chain.&lt;/p&gt;&lt;p&gt;Another limit is when concatenating a large string. It&#39;s pretty easy to see the &lt;a href=&quot;https://soliditydeveloper.com/stacktoodeep&quot; rel=&quot;noopener noreferrer&quot; target=&quot;_blank&quot;&gt;&quot;Stack Too Deep&quot;&lt;/a&gt; error. To solve it, we can pack the parameters with &lt;code&gt;struct&lt;/code&gt; and split &lt;code&gt;generateSVG&lt;/code&gt; into four functions:&lt;/p&gt;&lt;pre class=&quot;ql-syntax&quot; spellcheck=&quot;false&quot;&gt;// https://github.com/thematters/contracts/blob/81246e487008740f3515b7a6c91c7c43b58262dd/src/Logbook/NFTSVG.sol

struct SVGParams {
&amp;nbsp;&amp;nbsp;uint32 logCount;
&amp;nbsp;&amp;nbsp;uint32 transferCount;
&amp;nbsp;&amp;nbsp;uint160 createdAt;
&amp;nbsp;&amp;nbsp;uint256 tokenId;
}

function generateSVG(SVGParams memory params) internal pure returns (string memory svg) {
&amp;nbsp;&amp;nbsp;svg = string(
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;abi.encodePacked(
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &#39;&amp;lt;svg width=&quot;800&quot; height=&quot;800&quot; xmlns=&quot;http://www.w3.org/2000/svg&quot;&amp;gt;&amp;lt;g fill=&quot;none&quot; fill-rule=&quot;evenodd&quot;&amp;gt;&#39;,
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;generateSVGBackground(params),
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;generateSVGPathsA(params),
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;generateSVGPathsB(params),
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;generateSVGTexts(params),
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&quot;&amp;lt;/g&amp;gt;&amp;lt;/svg&amp;gt;&quot;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;)
&amp;nbsp;&amp;nbsp;);
}

function generateSVGBackground() {}
function generateSVGPathsA() {}
function generateSVGPathsB() {}
function generateSVGTexts() {}
&lt;/pre&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;blockquote&gt;&lt;em&gt;Art is never finished, only abandoned.&lt;/em&gt;&lt;/blockquote&gt;&lt;p&gt;Logbook, though its contract code is static on the blockchain, when we write, transfer, fork, donate…every interaction makes it comes to life. We can co-create our story, in this untold digital space.&lt;/p&gt;</description><link>https://matters.town/a/waedgzyyobqr</link><guid isPermaLink="false">https://matters.town/a/waedgzyyobqr</guid><pubDate>Fri, 25 Mar 2022 09:58:09 GMT</pubDate><author>robertu</author><category>logbook</category><category>logbook 2.0</category><category>開源 Matters</category><category>Open Source Matters</category></item><item><title>Matters 編輯器是如何運作的？</title><description>&lt;p&gt;編輯器是 Matters 的核心，承載著數萬創作者的創作心血。產品開發團隊意在打造一個易用、可靠的編輯器。&lt;/p&gt;&lt;p&gt;本文將從技術的角度，向大家介紹 Matters 編輯器的運作原理，以及面臨的挑戰。&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;核心&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;目前 Matters 的所見即所得（WYSIWYG）編輯器應用在文章草稿和評論兩個地方，核心基於 &lt;a href=&quot;https://github.com/quilljs/quill/&quot; target=&quot;_blank&quot;&gt;Quill&lt;/a&gt; 實現。Quill 的數據結構是 &lt;a href=&quot;https://github.com/quilljs/delta/&quot; target=&quot;_blank&quot;&gt;Delta&lt;/a&gt;，以約定的規範記錄著每句話所包含的文本和格式，從而構成一個段落、一篇文章。&lt;/p&gt;&lt;p&gt;如上一句話以 Deltas 描述會是：&lt;/p&gt;&lt;pre class=&quot;ql-syntax&quot;&gt;contents = {
&amp;nbsp; &quot;ops&quot;: [
&amp;nbsp; &amp;nbsp; {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;insert&quot;: &quot;Quill 的數據結構是 &quot;
&amp;nbsp; &amp;nbsp; },
&amp;nbsp; &amp;nbsp; {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;insert&quot;: &quot;Delta&quot;,
&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;attributes&quot;: {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;link&quot;: &quot;https://github.com/quilljs/delta/&quot;
&amp;nbsp; &amp;nbsp; &amp;nbsp; }
&amp;nbsp; &amp;nbsp; },
&amp;nbsp; &amp;nbsp; {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;insert&quot;: &quot;，以約定的規範記錄著每句話所包含的文本和格式，從而構成一個段落、一篇文章。\n&quot;
&amp;nbsp; &amp;nbsp; }
&amp;nbsp; ]
}
&lt;/pre&gt;&lt;p&gt;每次輸入和修改同樣以 Delta 記錄，為&lt;a href=&quot;https://github.com/quilljs/delta/#operational-transform-1&quot; target=&quot;_blank&quot;&gt;多人協作&lt;/a&gt;的支持留了想像空間。假如我們對「Quill」一詞進行加粗：&lt;/p&gt;&lt;pre class=&quot;ql-syntax&quot;&gt;change = {
&amp;nbsp; &quot;ops&quot;: [
&amp;nbsp; &amp;nbsp; {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;retain&quot;: 5,
&amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;attributes&quot;: {
&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &quot;bold&quot;: true
&amp;nbsp; &amp;nbsp; &amp;nbsp; }
&amp;nbsp; &amp;nbsp; }
&amp;nbsp; ]
}
&lt;/pre&gt;&lt;p&gt;為避免直接操作 DOM 所帶來的性能問題和複雜性，Quill 有平行於 DOM 的模型 &lt;a href=&quot;https://github.com/quilljs/parchment/&quot; target=&quot;_blank&quot;&gt;Parchment&lt;/a&gt;，由類似 DOM Node 的 Blot 構成，提供 API 和對生命週期（lifecycle）進行管理。&lt;/p&gt;&lt;p&gt;在此基礎上，Quill 有一套完整的 Module 系統，內建的 &lt;a href=&quot;https://quilljs.com/docs/modules/toolbar/&quot; target=&quot;_blank&quot;&gt;Toolbar&lt;/a&gt; 提供諸如&lt;strong&gt;加粗&lt;/strong&gt;、&lt;em&gt;斜體&lt;/em&gt;、&lt;u&gt;下劃線&lt;/u&gt;等格式的支持、&lt;a href=&quot;https://quilljs.com/docs/modules/history/&quot; target=&quot;_blank&quot;&gt;History&lt;/a&gt; 管理撤回（Undo）和重做（Redo），同時也允許開發者對編輯器進行客製化。&lt;/p&gt;&lt;p&gt;如 Matters 的文章編輯器在 Quill 基礎上加入了&lt;a href=&quot;https://github.com/thematters/matters-editor/blob/develop/src/modules/imageDrop.ts&quot; target=&quot;_blank&quot;&gt;圖片拖拽上傳&lt;/a&gt;、&lt;a href=&quot;https://github.com/thematters/matters-editor/blob/develop/src/blots/SmartBreak.ts&quot; target=&quot;_blank&quot;&gt;軟換行&lt;/a&gt;（Soft Line Break，Shift + Enter）、&lt;a href=&quot;https://github.com/thematters/matters-editor/blob/develop/src/matchers/url.ts&quot; target=&quot;_blank&quot;&gt;連結自動轉換&lt;/a&gt;、圖片音頻上傳、嵌入 YouTube 等功能。&lt;/p&gt;&lt;figure class=&quot;image&quot;&gt;&lt;img src=&quot;https://assets.matters.news/embed/16db277e-9085-49c6-a73e-abd6a375756e.jpeg&quot; data-asset-id=&quot;16db277e-9085-49c6-a73e-abd6a375756e&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;figcaption&gt;&lt;span&gt;thematters/matters-editor&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;相比後輩 &lt;a href=&quot;https://github.com/facebook/draft-js&quot; target=&quot;_blank&quot;&gt;Draft.js&lt;/a&gt; 和 &lt;a href=&quot;https://github.com/ianstormtaylor/slate&quot; target=&quot;_blank&quot;&gt;Slate&lt;/a&gt; ，Quill 更穩定和扁平的底層結構，對性能有極大的好處，也給開發者留足了客製化的空間。但不依附 React、Vue 等主流框架所構建的獨立生態，對社區活躍度的維持也充滿挑戰。&lt;/p&gt;&lt;p&gt;考慮到未來的可維護性，我們已將編輯器核心抽離出單獨的 React 組件並在 GitHub 開源，可到 &lt;a href=&quot;https://github.com/thematters/matters-editor&quot; target=&quot;_blank&quot;&gt;thematters/matters-editor&lt;/a&gt; 查看。&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;一致性&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;打造一個所見即所得（WYSIWYG）的編輯器，不僅在於創作者的直觀和易用，也在於與閱讀者、乃至代碼層面保持的一致性。&lt;/p&gt;&lt;p&gt;創作者在編輯器編寫的文章，在排版上與閱讀者所看到的會保持一致。&lt;/p&gt;&lt;figure class=&quot;image&quot;&gt;&lt;img src=&quot;https://assets.matters.news/embed/c846c1c8-63d6-4dc3-9486-9776cda4eb6a.jpeg&quot; data-asset-id=&quot;c846c1c8-63d6-4dc3-9486-9776cda4eb6a&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;而在代碼層面，無論是在編輯器和文章頁的渲染層，還是數據庫存儲和 API 傳輸的數據層，也都保持了一致。&lt;/p&gt;&lt;figure class=&quot;image&quot;&gt;&lt;img src=&quot;https://assets.matters.news/embed/5a2e28d1-a00f-4553-a202-be966ead3429.jpeg&quot; data-asset-id=&quot;5a2e28d1-a00f-4553-a202-be966ead3429&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;同時，輸出的語意化 HTML 標籤（Semantic HTML），對無障礙性（A11Y, Accessibility）也極有好處，讓使用了 VoiceOver 等閱讀器（Screen Reader）的用戶也有相似的體驗。&lt;/p&gt;&lt;p&gt;編輯器的簡單和一致性，也影響了我們對草稿保存的機制對設計。&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;生命週期&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;輸入、同步和發佈，是一篇文章從編輯器到出現在 Matters 和 IPFS 所經歷的主要過程。而文章草稿的同步功能，讓創作者可以隨時隨地、在任意設備上，保持創作的連續性。&lt;/p&gt;&lt;p&gt;Matters 上年&lt;a href=&quot;https://matters.news/@hi176/%E7%99%BC%E7%8F%BE%E8%AE%8A%E6%A8%A3%E4%BA%86-%E6%96%B0%E7%89%88-matters-%E4%BB%8A%E6%97%A5%E8%AA%A0%E6%84%8F%E4%B8%8A%E7%B7%9A-zdpuAnxNBQad324XXCmi4VF7HtPCuGyfjLjXLsTEnhQrvbytm&quot; target=&quot;_blank&quot;&gt;改版&lt;/a&gt;時設計的草稿同步機制沿用至今——每當編輯器監測到有任何改動，都會調用傳入到編輯器的 &lt;a href=&quot;https://github.com/thematters/matters-editor/blob/develop/src/article.tsx#L19&quot; target=&quot;_blank&quot;&gt;editorUpdate&lt;/a&gt; ，將草稿保存到遠端的數據庫；當重新打開草稿時，便從遠端讀取到編輯器裡。而同步到數據庫的正文，並非 Quill 的 Delta 結構，而是上文提到 HTML 字串。&lt;/p&gt;&lt;figure class=&quot;image&quot;&gt;&lt;img src=&quot;https://assets.matters.news/embed/ead6d2a7-567e-48c0-a738-52d7bae234fb.jpeg&quot; data-asset-id=&quot;ead6d2a7-567e-48c0-a738-52d7bae234fb&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;版本管理的缺失、編輯器崩潰導致草稿丟失……是目前設計下會遇到的問題。&lt;/p&gt;&lt;p&gt;七月，Matters &lt;a href=&quot;https://matters.news/@hi176/matters%E9%96%8B%E6%BA%90%E8%A8%88%E7%95%AB%E5%95%9F%E5%8B%95-%E9%82%80%E8%AB%8B%E4%BD%A0%E4%BE%86%E5%85%B1%E5%BB%BA%E9%A6%AC%E7%89%B9%E5%B8%82-bafyreiadaxjjwxk6mhsx4u6ognhxw3atlwiloscyn7r2iff6tsz4rrc4by&quot; target=&quot;_blank&quot;&gt;開源計畫&lt;/a&gt;正式啟動，目前在與部分開發者進行小範圍磨合測試，對協作流程和文檔進行完善，為接下來全面開放做準備。同時，我們也計畫推出獎賞計畫，對開源社區貢獻者進行激勵，讓大家參與進來，一起討論、解決馬特市發展中遇到的問題，敬請期待！&lt;/p&gt;</description><link>https://matters.town/a/tecxula2d4wa</link><guid isPermaLink="false">https://matters.town/a/tecxula2d4wa</guid><pubDate>Sat, 12 Sep 2020 01:23:46 GMT</pubDate><author>robertu</author><category>Matters工程日誌</category><category>Quilljs</category><category>開源 Matters</category></item><item><title>​​社區開放一小步：Matters API</title><description>&lt;figure class=&quot;image&quot;&gt;&lt;img src=&quot;https://assets.matters.news/embed/e2b804e0-21b2-4e5e-8789-ab579b24f2ce.png&quot; data-asset-id=&quot;e2b804e0-21b2-4e5e-8789-ab579b24f2ce&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;三月&lt;a href=&quot;https://matters.news/@hi176/%E7%99%BC%E7%8F%BE%E8%AE%8A%E6%A8%A3%E4%BA%86-%E6%96%B0%E7%89%88-matters-%E4%BB%8A%E6%97%A5%E8%AA%A0%E6%84%8F%E4%B8%8A%E7%B7%9A-zdpuAnxNBQad324XXCmi4VF7HtPCuGyfjLjXLsTEnhQrvbytm&quot; target=&quot;_blank&quot;&gt;網站改版&lt;/a&gt;時，我們對技術架構進行了&lt;a href=&quot;https://matters.news/@guo/%E5%B7%A5%E7%A8%8B%E6%97%A5%E8%AA%8C-3-19-%E5%A6%82%E4%BD%95%E5%BB%BA%E7%AB%8B%E5%88%86%E5%B8%83%E5%BC%8F%E7%9A%84%E7%89%88%E6%AC%8A%E7%94%9F%E6%85%8B-zdpuB3c76Te7qwTzvmoNSNHCiDSrcQq4QB4rcKSN5hewExKto&quot; target=&quot;_blank&quot;&gt;調整&lt;/a&gt;，其中前後端通信的 API 從 REST 改為 GraphQL。在經過幾個月的&lt;a href=&quot;https://matters.news/@yt/%E7%94%A2%E5%93%81%E6%97%A5%E8%AA%8C-6-2-%E7%99%BC%E8%87%AA%E5%8F%B0%E5%8C%97%E7%AF%80%E9%BB%9E-zdpuAoGQY8KkJNyAtEo1QS3MeAieySZSzAirKi3CcXwJjVxgh&quot; target=&quot;_blank&quot;&gt;產品迭代&lt;/a&gt;、&lt;a href=&quot;https://matters.news/@hi176/%E5%8D%B3%E6%97%A5%E8%B5%B7-matters%E5%90%91%E6%89%80%E6%9C%89%E5%89%B5%E4%BD%9C%E8%80%85%E9%96%8B%E6%94%BE-zdpuAxjxMmPSu3yPAsjnbjw3A8yhHBecnQerdTZjtSxaXuYZD&quot; target=&quot;_blank&quot;&gt;開放註冊&lt;/a&gt;帶來的流量攀升考驗後，&lt;/p&gt;&lt;p&gt;Matters API 正式對社區開放！&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;為什麼選擇 GraphQL？&lt;/h2&gt;&lt;p&gt;雖然 GraphQL 與 REST 都能透過 HTTP 進行前後端的通信，但有幾個主要差異點：&lt;/p&gt;&lt;p&gt;&lt;strong&gt;請求（request）&lt;/strong&gt;：REST 使用 HTTP verbs (POST, PUT, GET, DELETE 等) 對資源進行操作，而 GraphQL 只有 query 和 mutation 兩種操作，且都可通過 POST 進行。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;資源（resource）&lt;/strong&gt;：REST 用不同的 URI/endpoint 代表不同的資源，如 /users 為用戶， /articles 為文章，而 GraphQL 只有一個 URI/endpoint（通常為 /graphql），server 根據 client 需要返回相應的資源。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;緩存（caching）&lt;/strong&gt;：市面上流行的 GraphQL 工具（如 &lt;a href=&quot;https://www.apollographql.com/&quot; target=&quot;_blank&quot;&gt;Apollo&lt;/a&gt;）都默認將 query 操作用 POST 非 GET 發出請求，而 REST 則可利用 HTTP 的緩存機制，對 Network Caching（CDN）和 Client Caching（瀏覽器）都更為友好。&lt;/p&gt;&lt;p&gt;&lt;strong&gt;錯誤處理（error handling）&lt;/strong&gt;：REST 可利用 HTTP Status Code，配合 response body 返回錯誤響應，而 GraphQL 則返回 200 OK，需從 response body 解析。&lt;/p&gt;&lt;p&gt;可以看到，相比 GraphQL，REST 與 HTTP、URI 等 Web 技術有更強的耦合。產品開發時，資源導向（&lt;a href=&quot;https://en.wikipedia.org/wiki/Resource-oriented_architecture?oldformat=true&quot; target=&quot;_blank&quot;&gt;ROA&lt;/a&gt;）的 REST 在前後端協助時為後端驅動（server-driven），後端決定前端從哪裡獲取數據、能獲取什麼數據。這在過去十幾年裡已事實上成為 Web API 的標準，植根於 Web 的 REST ，也反哺於 Web 生態。&lt;/p&gt;&lt;figure class=&quot;image&quot;&gt;&lt;img src=&quot;https://assets.matters.news/embed/96cd2f0c-32f8-42e5-84d3-32359de51cb0.png&quot; data-asset-id=&quot;96cd2f0c-32f8-42e5-84d3-32359de51cb0&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;figcaption&gt;&lt;span&gt;Credit: https://www.apollographql.com/why-graphql&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;但隨著移動互聯網、物聯網的崛起，多平台應用、快速迭代的產品開發模式下，GraphQL 顯然更為合適。GraphQL 位於中間層，用約定的 schema 保證前後端的一致性，也讓不同平台各取所需，而日趨成熟的前端技術，也能接受更多來自後端的權力下放。&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;figure class=&quot;image&quot;&gt;&lt;img src=&quot;https://assets.matters.news/embed/77262320-11bc-4856-81b3-02a12531f58c.png&quot; data-asset-id=&quot;77262320-11bc-4856-81b3-02a12531f58c&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;figcaption&gt;&lt;span&gt;Credit: https://www.apollographql.com/why-graphql&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;h2&gt;&lt;br&gt;&lt;/h2&gt;&lt;h2&gt;&lt;strong&gt;如何使用 Matters API？&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;在使用 Matters API 前，可先對 GraphQL 有基本的&lt;a href=&quot;https://graphql.org/&quot; target=&quot;_blank&quot;&gt;了解&lt;/a&gt;。當然，你也可通過下文動手實作來快速了解 GraphQL 和 Matters API。&lt;/p&gt;&lt;p&gt;&lt;br class=&quot;smart&quot;&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Endpoints&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;Matters API 只有單一 endpoint：&lt;/p&gt;&lt;pre class=&quot;ql-syntax&quot;&gt;https://server.matters.news/graphql
&lt;/pre&gt;&lt;p&gt;你可使用 &lt;a href=&quot;https://github.com/apollographql/apollo-client&quot; target=&quot;_blank&quot;&gt;Apollo Client&lt;/a&gt;、&lt;a href=&quot;https://github.com/facebook/relay&quot; target=&quot;_blank&quot;&gt;Relay&lt;/a&gt; 等框架進行前端開發，但為了方便上手，亦可通過 Playground 調用 Matters API：&lt;/p&gt;&lt;pre class=&quot;ql-syntax&quot;&gt;https://server.matters.news/playground
&lt;/pre&gt;&lt;figure class=&quot;image&quot;&gt;&lt;img src=&quot;https://assets.matters.news/embed/b3eca9ae-93c1-458b-8a3b-7e913afc2a70.png&quot; data-asset-id=&quot;b3eca9ae-93c1-458b-8a3b-7e913afc2a70&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;figcaption&gt;&lt;span&gt;Playground&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;strong&gt;API 文檔&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;點擊 Playground 右側欄「&lt;strong&gt;DOCS&lt;/strong&gt;」，即可查看 Matters API 的文檔：&lt;/p&gt;&lt;figure class=&quot;image&quot;&gt;&lt;img src=&quot;https://assets.matters.news/embed/19c85d21-3070-474c-ae40-15346ad398b9.png&quot; data-asset-id=&quot;19c85d21-3070-474c-ae40-15346ad398b9&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;figcaption&gt;&lt;span&gt;文檔分成 Queries, Mutations 和 Subscriptions 三部分&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Queries 部分，我們把&amp;nbsp;&lt;code&gt;viewer&lt;/code&gt; 設計為主入口，用於查詢當前訪客（User 對象，下圖）的相關數據，如 &lt;code&gt;viewer.recommendation.hottest&lt;/code&gt; 對應 matters.news 的「熱門作品」；而次入口 article 則可通過 &lt;code&gt;mediaHash&lt;/code&gt; 查詢 Article 對象（下例）。&lt;/p&gt;&lt;figure class=&quot;image&quot;&gt;&lt;img src=&quot;https://assets.matters.news/embed/2ab72100-f3a6-4532-a835-04c78ab0383b.jpeg&quot; data-asset-id=&quot;2ab72100-f3a6-4532-a835-04c78ab0383b&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;figcaption&gt;&lt;span&gt;viewer 作為查詢（Query）主入口&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;Mutations 部分，則包含了登入（&lt;code&gt;userLogin&lt;/code&gt;）、發佈文章（&lt;code&gt;publishArticle&lt;/code&gt;）、追蹤作者（&lt;code&gt;followUser&lt;/code&gt;）等操作。&lt;/p&gt;&lt;p&gt;而 Subscriptions 部分，則可通過 &lt;code&gt;nodeEdited&lt;/code&gt; &lt;a href=&quot;https://www.apollographql.com/docs/react/advanced/subscriptions/&quot; target=&quot;_blank&quot;&gt;訂閱&lt;/a&gt;某個對象的實時更新。&lt;/p&gt;&lt;p&gt;文檔沒看明白？沒關係，我們一起通過實作來快速上手！&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;查詢 Query&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;在左側代碼編輯面板輸入 GraphQL 查詢語句，比如要獲取作品&lt;a href=&quot;https://matters.news/@hi176/%E6%8C%89%E4%B8%8B%E4%B8%80%E5%80%8B%E8%AE%9A-%E4%B8%80%E8%B5%B7%E8%AE%93%E5%A5%BD%E5%85%A7%E5%AE%B9%E6%B4%BB%E4%B8%8B%E5%8E%BB-matters%E5%92%8Clike-coin%E7%9A%84%E5%90%88%E4%BD%9C%E6%AD%A3%E5%BC%8F%E4%B8%8A%E7%B7%9A-zdpuAxP6uSfum74VS3pYmzBR9xvPbrBcX3J8BPpB3xdRGjVsX&quot; target=&quot;_blank&quot;&gt;《按下一個讚，一起讓好內容活下去 | Matters和LikeCoin的合作正式上線！》&lt;/a&gt; [1] 的標題和摘要：&lt;/p&gt;&lt;pre class=&quot;ql-syntax&quot;&gt;query {
&amp;nbsp; article(
&amp;nbsp; &amp;nbsp; input: { mediaHash: &quot;zdpuAxP6uSfum74VS3pYmzBR9xvPbrBcX3J8BPpB3xdRGjVsX&quot; }
&amp;nbsp; ) {
&amp;nbsp; &amp;nbsp; id
&amp;nbsp; &amp;nbsp; title
&amp;nbsp; &amp;nbsp; summary
&amp;nbsp; }
}
&lt;/pre&gt;&lt;p&gt;然後點擊中間「▶️」按鈕發出請求，即可於右側面板看到 API 返回的數據：&lt;/p&gt;&lt;figure class=&quot;image&quot;&gt;&lt;img src=&quot;https://assets.matters.news/embed/f1120be1-65a1-46f0-a227-778d9f0f04f9.png&quot; data-asset-id=&quot;f1120be1-65a1-46f0-a227-778d9f0f04f9&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;figcaption&gt;&lt;span&gt;返回 id, title 和 summary 欄位&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;當然，也可通過點擊頂部右側的「&lt;strong&gt;COPY CURL&lt;/strong&gt;」獲取 cURL 命令，在命令行工具中請求：&lt;/p&gt;&lt;pre class=&quot;ql-syntax&quot;&gt;curl &#39;https://server.matters.news/graphql&#39; -H &#39;Accept-Encoding: gzip, deflate, br&#39; -H &#39;Content-Type: application/json&#39; -H &#39;Accept: application/json&#39; -H &#39;Connection: keep-alive&#39; -H &#39;DNT: 1&#39; -H &#39;Origin: https://server.matters.news&#39; --data-binary &#39;{&quot;query&quot;:&quot;\nquery {\n &amp;nbsp;article(\n &amp;nbsp; &amp;nbsp;input: { mediaHash: \&quot;zdpuAxP6uSfum74VS3pYmzBR9xvPbrBcX3J8BPpB3xdRGjVsX\&quot; }\n &amp;nbsp;) {\n &amp;nbsp; &amp;nbsp;id\n &amp;nbsp; &amp;nbsp;title\n &amp;nbsp; &amp;nbsp;summary\n &amp;nbsp;}\n}&quot;}&#39; --compressed
&lt;/pre&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;變更 Mutation&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;剛剛例子中，我們用匿名身份進行查詢，但如果要查看自己的收藏列表、發布作品、評論等等，都需登入後才可進行。如要收藏上例作品：&lt;/p&gt;&lt;p&gt;1. 登入以獲取 access token：&lt;/p&gt;&lt;pre class=&quot;ql-syntax&quot;&gt;mutation {
&amp;nbsp;userLogin(input: { email: &quot;test@example.com&quot;, password: &quot;12345678&quot; }) {
&amp;nbsp;&amp;nbsp;token
&amp;nbsp;}
}
&lt;/pre&gt;&lt;p&gt;（還沒有帳號？可先通過 &lt;code&gt;sendVerificationCode&lt;/code&gt;, &lt;code&gt;confirmVerificationCode&lt;/code&gt; 和 &lt;code&gt;registerUser&lt;/code&gt; mutations 進行註冊。）&lt;/p&gt;&lt;p&gt;2. 在 Playground 左下角 &lt;strong&gt;HTTP HEADER &lt;/strong&gt;裡填上 &lt;code&gt;x-access-token&lt;/code&gt;，此後的請求都將以該登入用戶的身份進行：&lt;/p&gt;&lt;figure class=&quot;image&quot;&gt;&lt;img src=&quot;https://assets.matters.news/embed/fcb6fb43-1b95-4e59-803a-e23f13350629.png&quot; data-asset-id=&quot;fcb6fb43-1b95-4e59-803a-e23f13350629&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;3. 收藏作品&amp;nbsp;&lt;/p&gt;&lt;pre class=&quot;ql-syntax&quot;&gt;mutation {
&amp;nbsp;subscribeArticle(input: { id: &quot;QXJ0aWNsZToxMDc4Mg&quot; }) {
&amp;nbsp;&amp;nbsp;id
&amp;nbsp;&amp;nbsp;subscribed
&amp;nbsp;}
}
&lt;/pre&gt;&lt;figure class=&quot;image&quot;&gt;&lt;img src=&quot;https://assets.matters.news/embed/f388070a-63d5-4af6-9c7c-9438421d21d9.png&quot; data-asset-id=&quot;f388070a-63d5-4af6-9c7c-9438421d21d9&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;在網站查看&lt;a href=&quot;https://matters.news/@hi176/%E6%8C%89%E4%B8%8B%E4%B8%80%E5%80%8B%E8%AE%9A-%E4%B8%80%E8%B5%B7%E8%AE%93%E5%A5%BD%E5%85%A7%E5%AE%B9%E6%B4%BB%E4%B8%8B%E5%8E%BB-matters%E5%92%8Clike-coin%E7%9A%84%E5%90%88%E4%BD%9C%E6%AD%A3%E5%BC%8F%E4%B8%8A%E7%B7%9A-zdpuAxP6uSfum74VS3pYmzBR9xvPbrBcX3J8BPpB3xdRGjVsX&quot; target=&quot;_blank&quot;&gt;作品&lt;/a&gt;是否「已收藏」：&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;figure class=&quot;image&quot;&gt;&lt;img src=&quot;https://assets.matters.news/embed/761b19d7-7ab1-47fe-ae2e-dc1f36956c68.jpeg&quot; data-asset-id=&quot;761b19d7-7ab1-47fe-ae2e-dc1f36956c68&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;figcaption&gt;&lt;span&gt;&lt;/span&gt;&lt;/figcaption&gt;&lt;/figure&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;訂閱 Subscription&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;目前 Matters API 支持訂閱文章（Article 對象），每當文章有新評論、讚賞，都會實時通知你。&lt;/p&gt;&lt;p&gt;比如要實時接收某篇文章的新評論更新：&lt;/p&gt;&lt;pre class=&quot;ql-syntax&quot;&gt;subscription {
&amp;nbsp;nodeEdited(input: { id: &quot;QXJ0aWNsZToxMDc4Mg&quot; }) {
&amp;nbsp;&amp;nbsp;id
&amp;nbsp;&amp;nbsp;... on Article {
&amp;nbsp;&amp;nbsp;&amp;nbsp;id
&amp;nbsp;&amp;nbsp;&amp;nbsp;comments(input: { first: 1 }) {
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;edges {
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;node {
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;id
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;content
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;&amp;nbsp;}
&amp;nbsp;&amp;nbsp;}
&amp;nbsp;}
}
&lt;/pre&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;h2&gt;&lt;strong&gt;What’s Next?&lt;/strong&gt;&lt;/h2&gt;&lt;p&gt;在開放 API 前，已有社區用戶通過逆向工程做了一些小項目，&lt;a class=&quot;mention&quot; href=&quot;https://matters.town/@vibertthio&quot; target=&quot;_blank&quot; data-display-name=&quot;Vibert Thio&quot; data-user-name=&quot;vibertthio&quot; data-id=&quot;VXNlcjoyNTgw&quot;&gt;﻿&lt;span&gt;@Vibert Thio&lt;/span&gt;﻿&lt;/a&gt;&amp;nbsp;和 &lt;a class=&quot;mention&quot; href=&quot;https://matters.town/@Andy&quot; target=&quot;_blank&quot; data-display-name=&quot;Andy&quot; data-user-name=&quot;Andy&quot; data-id=&quot;VXNlcjox&quot;&gt;﻿&lt;span&gt;@Andy&lt;/span&gt;﻿&lt;/a&gt; 寫了 Matters 第三方&lt;a href=&quot;https://matters.news/@vibertthio/%E7%9C%9F%E6%AD%A3%E5%8E%BB%E4%B8%AD%E5%BF%83%E5%AA%92%E9%AB%94%E7%9A%84%E7%AC%AC%E4%B8%80%E6%AD%A5-%E5%81%9A%E4%B8%80%E5%80%8B-matters-%E7%9A%84%E7%AC%AC%E4%B8%89%E6%96%B9%E7%B6%B2%E7%AB%99-zdpuArgJXADPgWJ8TfvRWWStTvkYC1vqCTV6fHayisbrABkBp&quot; target=&quot;_blank&quot;&gt;網站&lt;/a&gt; 和 &lt;a href=&quot;https://matters.news/@Andy/%E7%B7%A8%E7%A8%8B%E8%87%AA%E5%AD%B8%E6%8C%87%E5%8D%97%E7%95%AA%E5%A4%96-%E7%B5%A6matters%E5%AF%AB%E5%80%8Bapp%E5%90%A7-zdpuApuD7VrHWffQciZywVLNcy8TRzBjcEXer7CMA2pP2Yuyy&quot; target=&quot;_blank&quot;&gt;App&lt;/a&gt;，&lt;a class=&quot;mention&quot; href=&quot;https://matters.town/@terminus2049&quot; target=&quot;_blank&quot; data-display-name=&quot;2049bbs&quot; data-user-name=&quot;terminus2049&quot; data-id=&quot;VXNlcjo3MDMx&quot;&gt;﻿&lt;span&gt;@2049bbs&lt;/span&gt;﻿&lt;/a&gt; 和 &lt;a class=&quot;mention&quot; href=&quot;https://matters.town/@deserve&quot; target=&quot;_blank&quot; data-display-name=&quot;Deserve&quot; data-user-name=&quot;deserve&quot; data-id=&quot;VXNlcjo1MTIx&quot;&gt;﻿&lt;span&gt;@Deserve&lt;/span&gt;﻿&lt;/a&gt; 實現了工具讓你&lt;a href=&quot;https://matters.news/@terminus2049/%E4%BD%A0%E6%83%B3%E8%A6%81%E7%9A%84-matters-%E6%96%87%E7%AB%A0-ipfs-%E5%9C%B0%E5%9D%80-zdpuAqs3o9voVTYnXASUj2QLKa9wyi2iBATCvB3j18B3eYm4s&quot; target=&quot;_blank&quot;&gt;獲取&lt;/a&gt;文章的 IPFS 地址 ，方便&lt;a href=&quot;https://matters.news/@deserve/matters%E6%96%87%E7%AB%A0%E7%8E%B0%E5%9C%A8%E5%8F%AF%E4%BB%A5%E4%B8%80%E9%94%AE%E5%9C%A8%E7%BA%BF%E8%BD%AC%E4%B8%BA%E5%A2%99%E5%86%85%E9%93%BE%E6%8E%A5%E4%BA%86-zdpuB1bvMnsAr4APk12FmdRxcqMaEsRo46vKE7p6Arvsg4YiF&quot; target=&quot;_blank&quot;&gt;牆內分享&lt;/a&gt;……，如果你有奇思妙想、實作了有趣的東西、使用 API 中遇到問題、發現 bug，歡迎發文分享、留言討論。&lt;/p&gt;&lt;p&gt;Matters API 只是社區開放的一小步，分布式的桌面版本、 matters.news 網站開源、Matters OAuth 都將在合適的時間節點向社區開放，歡迎大家和 Matters 一起探索！&lt;/p&gt;&lt;p&gt;創作有價，&lt;br class=&quot;smart&quot;&gt;Happy Coding ❤️&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;&lt;p&gt;[1] matters.news 的作品 URL Pattern 為 ：&lt;/p&gt;&lt;pre class=&quot;ql-syntax&quot;&gt;https://matters.news/@${username}/${slug}-${mediaHash}
&lt;/pre&gt;</description><link>https://matters.town/a/7w2lfvs20uxm</link><guid isPermaLink="false">https://matters.town/a/7w2lfvs20uxm</guid><pubDate>Mon, 28 Oct 2019 15:25:55 GMT</pubDate><author>robertu</author><category>開源 Matters</category><category>Matters</category><category>Matters工程日誌</category></item></channel></rss>