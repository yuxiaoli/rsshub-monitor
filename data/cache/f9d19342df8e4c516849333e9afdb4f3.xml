<?xml version="1.0" encoding="UTF-8"?><rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>酷安看看号-好想学Python</title><link>https://www.coolapk.com/dyh/1524</link><atom:link href="http://rsshub.email-once.com/coolapk/dyh/1524" rel="self" type="application/rss+xml"></atom:link><description>人生苦短，我用Python！(&gt;ω - Powered by RSSHub</description><generator>RSSHub</generator><webMaster>contact@rsshub.app (RSSHub)</webMaster><language>en</language><lastBuildDate>Tue, 25 Mar 2025 00:28:09 GMT</lastBuildDate><ttl>5</ttl><item><title>简单回顾一下2022年</title><description>&lt;img src=&quot;http://image.coolapk.com/feed_cover/2023/0119/13/44029_1addf80b_6550_9666_422@687x309.jpeg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;hr&gt;&lt;p&gt;2022年中，我在知乎上换了头像、改了签名写着『软件工程全栈魔法师』。当时是七夕收到老婆送的『狗牌』礼物（也就是头像那副牌，也是现在的微信头像），即兴给自己起了这个『名号』。&lt;/p&gt;&lt;p&gt;过后想想，既然想到这么起，也必定不是随随便便编一个出来的呀。毕竟『软件工程』就是我的专业嘛&lt;!--break--&gt;，『全栈』显示我已掌握了一定程度的前后端知识技能，那『魔法师』呢？『魔法师』我的定义是，他擅长采用尽自己舒服的方式，做力所能及高质量的软件项目。&lt;/p&gt;&lt;p&gt;现在觉得，蛮力钻研技术、所谓努力拼搏，并不是做好软件项目的必须手段。当领会到了乔布斯为什么喜欢做冥想，觉察到了自己当下的技能水平到什么程度、在什么方面更为擅长、可以往擅长的方向发展，以及接纳并能灵活多用『Dirty Hack』来解决实际痛点难点时，人人都是可以成为『软件工程全栈魔法师』的。&lt;/p&gt;&lt;p&gt;说回来感觉自己近两年来变化挺大的，整个人的内在至少变了80%吧，可能？我近10年都在同一个岗位工作，直到2022年初偶遇机会变动到一个新的岗位。当完全投入到岗位中，用心去感受在工作当下的真实内在感受时，才猛地发觉，以前同样的工作做久了，有些感受麻木了，有些情绪压抑太久太久了，所有的这些，自己却始终没有察觉到。并不是工作内容不合适，更不是不喜欢原岗位的工作，而是自己一昧死磕工作内容本身，或者死磕所用技术本身，却一直忽略嘶吼已久的自己内在的声音。&lt;/p&gt;&lt;p&gt;有些朋友可能会误以为说的是简单的『我看开了』，但它不是，因为完全是发生在内在的，不是描述『往外看』的『看开』。我喜欢我的专业『软件工程』，喜欢程序代码，也认同科技改变生活，但过去那些年里，却逐渐记不清自己选择IT行业的背后根源是与自己喜欢的事物『同频共振』。网络上鲜少有不嘲讽IT行业小年轻做不过35岁的朋友，而且，我自己也说过搞IT需要『与时俱进』不能落下对新技术的学习、对新技术趋势的追求。可是，不断同步新的技术给自己真的能解救自己、让自己顺利跨过『35岁』那道坎吗？方向错了，因为人生里的任何看得见摸得着的事物，都是有『保质期』的。如果一定非要区分什么是『新』技术、什么是『旧』技术，这种观点必定是割裂的，当把它内化时，也必定会造成自己的『割裂』，这种割裂会出现在与自己相关的方方面面上，无处不在。&lt;/p&gt;&lt;p&gt;唯有那种与喜欢的事物『同频共振』是永远不会变的，只要它产生，就一直在自己心中，更不会有『保质期』。IT行业的『卷』，不过都是『自愿』自己卷自己罢了。&lt;/p&gt;&lt;p&gt;感谢老婆愿意与我『互为功课』，从大众心理学出发，一起相互扶持往内心最深处前行。&lt;/p&gt;&lt;p&gt;2022年对自己来说，或许只是一个小小的里程碑。2023新的一年，与大家共勉，愿大家健健康康，开开心心，时刻察觉内心情绪，做自己。&lt;/p&gt;&lt;p&gt;DJun，2023-1-18&lt;/p&gt;&lt;p&gt; &lt;a class=&quot;feed-link-tag&quot; href=&quot;https://www.coolapk.com/t/%E9%85%B7%E5%AE%89%E5%A4%9C%E8%AF%9D?type=12&quot;&gt;#酷安夜话#&lt;/a&gt;&lt;/p&gt;</description><link>https://www.coolapk.com/feed/42633785?shareKey=ZWU0MjAyNzg3YmFlNjdlMWY4OTc~</link><guid isPermaLink="false">https://www.coolapk.com/feed/42633785</guid><pubDate>Thu, 19 Jan 2023 05:35:51 GMT</pubDate><author>djunxp</author></item><item><title>《Python 3.11 发布，比 3.10 版本快10-60%！！！》Summary -- Release highlightsPython 3.11 is between 10-60% faster than Python 3.10. On average, we mea...</title><description>&lt;p&gt;《Python 3.11 发布，比 3.10 版本快10-60%！！！》&lt;br&gt;&lt;br&gt;Summary -- Release highlights&lt;br&gt;&lt;br&gt;Python 3.11 is between 10-60% faster than Python 3.10. On average&lt;!--break--&gt;, we measured a 1.25x speedup on the standard benchmark suite. See&amp;nbsp;Faster CPython&amp;nbsp;for details.&lt;br&gt;&lt;br&gt;ref: &lt;a class=&quot;feed-link-url&quot; href=&quot;https://docs.python.org/zh-cn/3.11/whatsnew/3.11.html&quot; title=&quot;https://docs.python.org/zh-cn/3.11/whatsnew/3.11.html&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接&lt;/a&gt;&lt;/p&gt;&lt;img src=&quot;http://image.coolapk.com/feed/2022/1212/23/44029_4a640e41_9203_0777_630@880x2393.jpeg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;</description><link>https://www.coolapk.com/feed/41719890?shareKey=MjBkNDc0NTIyOTdiNjdlMWY4OTc~</link><guid isPermaLink="false">https://www.coolapk.com/feed/41719890</guid><pubDate>Mon, 12 Dec 2022 15:33:23 GMT</pubDate><author>djunxp</author></item><item><title>分享阅读：《已经14年的Scikit-Learn终于1.0了，发布第一个主要版本的意义是什么？》 查看链接</title><description>&lt;p&gt;分享阅读：《已经14年的Scikit-Learn终于1.0了，发布第一个主要版本的意义是什么？》

&lt;a class=&quot;feed-link-url&quot; href=&quot;https://zhuanlan.zhihu.com/p/421690799&quot; title=&quot;https://zhuanlan.zhihu.com/p/421690799&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接&lt;/a&gt;&lt;/p&gt;&lt;img src=&quot;http://image.coolapk.com/feed/2021/1018/08/44029_fe3b0590_6558_9469@629x384.jpeg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;</description><link>https://www.coolapk.com/feed/30763856?shareKey=ZTI4MWE0Mzc0NjAxNjdlMWY4OTc~</link><guid isPermaLink="false">https://www.coolapk.com/feed/30763856</guid><pubDate>Mon, 18 Oct 2021 00:22:40 GMT</pubDate><author>djunxp</author></item><item><title>[doge][doge]最近时不时看下Medium（国外版『简书』）上的文章，感觉可真实用呢！[cos滑稽][cos滑稽][cos滑稽] 图1：《编程是个陷阱，快跳坑》 图2：《程序员的...</title><description>&lt;p&gt;[doge][doge]最近时不时看下Medium（国外版『简书』）上的文章，感觉可真实用呢！[cos滑稽][cos滑稽][cos滑稽]

图1：《编程是个陷阱，快跳坑》
图2：《程序员的黑暗面》
图3：《别给新手写代码》&lt;/p&gt;&lt;img src=&quot;http://image.coolapk.com/feed/2021/1014/22/44029_6ef6fbe1_0500_4204@1080x1727.jpeg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;img src=&quot;http://image.coolapk.com/feed/2021/1014/22/44029_e2efaa0b_0500_4208@1080x1775.jpeg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;img src=&quot;http://image.coolapk.com/feed/2021/1014/22/44029_1e1b5054_0500_421@1080x1914.jpeg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;</description><link>https://www.coolapk.com/feed/30692413?shareKey=NGI0YTg1NjA3M2I4NjdlMWY4OTc~</link><guid isPermaLink="false">https://www.coolapk.com/feed/30692413</guid><pubDate>Thu, 14 Oct 2021 14:08:22 GMT</pubDate><author>djunxp</author></item><item><title>丁同学的Go语言笔记：入坑Go的正确打开方式</title><description>&lt;img src=&quot;http://image.coolapk.com/feed_cover/2021/1008/22/44029_060a4cb5_1938_7997@944x424.jpeg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;hr&gt;&lt;p&gt;&amp;gt;&amp;gt;&amp;gt; 请留意 &amp;gt;&amp;gt;&amp;gt; “太长不看”的朋友请浏览文末的总结，快速了解本篇内容哦～ &amp;lt;&amp;lt;&amp;lt; 请留意 &amp;lt;&amp;lt;&amp;lt;&lt;/p&gt;&lt;p&gt;这是一篇想写但一直鸽，鸽了好久的学习笔记～工作忙鸭，实在抱歉～我是大家的小丁，还记得我吗？&lt;!--break--&gt;&lt;/p&gt;&lt;p&gt;本篇主要是讲一些非常个人的Go语言的学习使用经验哈。目前感觉最熟悉的还是Python，而且熟悉的轮子还挺多的；其他的还有浅尝前端相关的JavaScript/TypeScript、Swift等，接下来提到的内容稍有涉及到它们，不准确的地方还请不吝指出哈～&lt;/p&gt;&lt;p&gt;零、写在前面的话&lt;/p&gt;&lt;p&gt;熟悉Python的你们肯定了解到，它现成的轮子特别多，花较少的时间精力就可以撸出一套相当完整的程序项目。而代价也很明显，就是“慢”，因为语言本身塞了太（令）多（人）方（偷）便（懒）的组件，一跑起大块头的东西来，性能问题立马显现出来了。&lt;/p&gt;&lt;p&gt;优化Python程序项目的路子有很多条，有一条可能会特别吸引你注意的，就是：用Go语言重构项目。&lt;/p&gt;&lt;p&gt;不少Pythoner转向Go语言开发时都说，Go既相对容易上手，写出来的程序又可以比原先用Python写的效率提升很多倍。那Go语言它具体是怎样的呢？真的是Pythoner转型的一道明亮的曙光吗？&lt;/p&gt;&lt;p&gt;一，对Go的第一印象：“天然严格”的程序语言&lt;/p&gt;&lt;p&gt;Go（又称Golang），是一款静态强类型的编译型语言。风格像C语言。语法级别支持并发任务。是Google的开源项目。&lt;/p&gt;&lt;p&gt;那么好奇的你肯定会问，既然像C，为什么还要再造轮子开发新的编程语言呢？&lt;/p&gt;&lt;p&gt;Go最直观的差别是，它是一款“天然严格”的程序语言，对程序员用户有着近乎洁癖的要求（比如用首字母大小写控制是否可见，比如不允许出现没用过的变量名，比如编译时完全没机会见到warning只有必须修好的errors），而这样的要求，的确可以很大程度避免潜在问题，直接“大力出奇迹”提升写出来的程序的健壮性。&lt;/p&gt;&lt;p&gt;跟Python类似的，Go也准备了功能强大的标准库，而与解释型语言Python截然不同的是，作为一款编译型语言，跟C一样当然需要编译运行，不过得益于自身的神优化（可能是自举编译器优化，也可能是根据多种平台指令集编译优化），编译速度飞快。目前Go的标准库可能还不及Python的一半，但提供的标准库每一个都设计得很精湛，很恰到好处，正如语言它本身提供给我们的特性，也是不多不少，恰到好处。&lt;/p&gt;&lt;p&gt;相比给足十分灵活性的Python，Go永远都是优先考虑“简洁”和“健壮”，而宁可损失一部分的灵活性（比如呼声非常高的提案至少10年的终于要在今年发布1.18版本加入的泛型）。毕竟，复杂度越高，自由度越高，不可控的因素会更多，你说是吧？&lt;/p&gt;&lt;div class=&quot;img-container&quot; style=&quot;text-align: center;&quot;&gt;
                &lt;img src=&quot;http://image.coolapk.com/feed/2021/1008/22/44029_dc144ff4_1940_039@1200x630.jpeg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
                &lt;p class=&quot;image-caption&quot; style=&quot;text-align: center;&quot;&gt;&lt;/p&gt;&lt;/div&gt;&lt;p&gt;二，对Go的第二印象：不像Python，而像TypeScript，又像Swift&lt;/p&gt;&lt;p&gt;Go语言的设计理念和优势使它的定位非常明确，它适合做：网络编程，服务器编程，分布式系统，数据库系统，云平台。&lt;/p&gt;&lt;p&gt;Go在语法上具备如今大多数主流语言的特点，但又有其独特之处&lt;!--break--&gt;。比如struct、interface、slice、map、channel的设计特点，比如保留指针但弱化指针的概念并简化用法，比如“零值”的设定，比如switch case不需要break改提供通常不用的fallthough，比如语法级别支持并发任务编程的Goroutine，等等。有变方便的地方，也有变更麻烦的地方，很多具体细节是需要在实际使用中才能深切体会到的。&lt;/p&gt;&lt;p&gt;有句“大实话”：Go代码里有一半的代码量是用来写“if err != nil {}”的！如果你第一次接触到这样的错误处理方式，没有try/catch(except)，只有“if err != nil {}”和defer/panic/recover，你可能会感到很抓狂！其实Swift方式的“guard ... else {}”与Go方式的“if err != nil {}”有异曲同工之妙，同样都是“获取某值，值异常则立即做异常处理，否则正常继续”的思路，不同的是Swift方式含义更明确一些，通用性更高一些；而Go这边，通常是函数或者方法设计了多返回值（通常是双返回值），并且约定最后一个值用来返回错误对象，然后才有利用if判断的“if err != nil {}”这种看起来挺蹩脚的写法。&lt;/p&gt;&lt;p&gt;对比之下，Swift方式看起来显然更为优雅，而Go方式这样的设计，觉得可能是为了避免添加太多的语法糖导致增加语言的复杂程度吧，“简洁至上”。&lt;/p&gt;&lt;p&gt;正因如此，当你初入Go语言时，总会有一些特性让你感觉很不理解，或者很不习惯。&lt;/p&gt;&lt;p&gt;如果你原本的编程基础是零，即完全没有基础，那么Go并不会是你的入坑首选。因为Go不像Python能隐藏绝大部分初学者需要花时间理解的枯燥的基础知识，而且在第三方模块上，对比丰富的Python PyPI模块仓库，Go第三方包数量目前还比较有限，光这两点就已经无法做到完完全全的“开箱即用”了，很容易让人劝退；也因为，只有尝尽C、Java等其他你接触过的语言的“苦”，才能体会到Go语言带来的“甘”。零基础的你，培养编程兴趣毋庸置疑推荐从Python开始。&lt;/p&gt;&lt;p&gt;如果你原来恰好是一位Pythoner，那上手Go来就会觉得处处受限！明明一两个Python语句可以表达清晰的，为什么需要写这么多呢？Python就算加上“typing/type hints（类型注解）”，也不至于很“啰嗦”的呀。此时面对Go，你需要有足够多的耐心，一点一滴地学习和尝试，逐渐地，逐渐地，会感受到Go强大的代码规范器可以在编译前帮你排查绝大多数的低级错误或者潜在错误，如此一来对比完全允许用户自由发挥的Python开发过程，Go必然使你对自己写出来的程序稳定性信心倍增，不是吗？&lt;/p&gt;&lt;p&gt;如果你原来恰好接触过TypeScript、Swift等其他语言，会发现它们之间既有共同之处，又有大不同。比如TS的interface概念（官方文档传送门： &lt;a class=&quot;feed-link-url&quot; href=&quot;https://www.typescriptlang.org/docs/handbook/interfaces.html&quot; title=&quot;https://www.typescriptlang.org/docs/handbook/interfaces.html&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接&lt;/a&gt; ）就与Go语言相似，都是以“鸭子类型”思想为基础的产物。Go通过定义interface对具体类型的方法行为进行抽象，利用struct结构体标签推断数据对象的内部结构；类似地，TS通过定义interface的结构，就可以用它来推断object的结构及其方法行为，兼容性比Go高，没有Go那么严格的程度（可能这样更适应网页应用开发）。Swift 4.0新增的Codable也有异曲同工之妙，但主要用于推断数据对象的结构，方便数据的序列化和反序列化的操作，它没有推断方法的作用。&lt;/p&gt;&lt;p&gt;上面提到的“相似”只是冰山一角，利用语言间相似之处可以帮助我们快速上手熟悉新接触的语言，毕竟目前各大主流程序语言都会汲取其他语言的优点融入到自身之中，让自己变得更加强大。&lt;/p&gt;&lt;p&gt;尽管Go语言有强类型要求，尽管有着初学者一时半会难理解参透的struct、interface，但个人感觉Go的实现，已经试图在用户体验和鲁棒性之间寻找最佳平衡点。比如“:=”（声明并赋值）可以隐藏掉大部分的变量类型声明，“go func”就可以轻松实现并行任务的需求，以及神奇的struct结构体标签与Unmarshal()，等等。“严格的”Go相比“自由的”Python，编写高质量代码的过程可能会更加艰难，但这种“艰难”只会是暂时的，尤其是在持续型的项目中，不管是前期开发还是后期维护，优势便会逐渐显现出来。&lt;/p&gt;&lt;div class=&quot;img-container&quot; style=&quot;text-align: center;&quot;&gt;
                &lt;img src=&quot;http://image.coolapk.com/feed/2021/1008/22/44029_de82b550_1940_0392@442x512.jpeg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
                &lt;p class=&quot;image-caption&quot; style=&quot;text-align: center;&quot;&gt;&lt;/p&gt;&lt;/div&gt;&lt;p&gt;三、对Go“面向对象”的个人理解：“能力的打包”&lt;/p&gt;&lt;p&gt;如果你阅读过其他开发者朋友的文章经验，可能会读到一些以OOP（俗称“面向对象”）对比学习Go语言的方法。虽然这样的方式并非不可行，但以它深入了解Go语言，我觉得大概率是“方向错了”~&lt;/p&gt;&lt;p&gt;我个人的理解是&lt;!--break--&gt;，Go语言的struct和interface都采用了“Embedding（嵌入）”的方式实现类似“类继承”的特性，但并不是提供一条路让你“换个方式实现类继承”，而是提供一种方式实现“能力的打包”。&lt;/p&gt;&lt;p&gt;Go语言中，“package（包）”才是对事物最合适的抽象封装粒度。同个项目中，包与包之间一般是功能隔离、不会产生联系的，只是在main包里面进行功能接口组装。在同个项目中遵循软件工程的方法，在Go语法规范层面上进行适当拆包，可以更快更好地实现“高内聚，低耦合”，进而提升项目整体代码质量。这种分包方式虽然部分类似于Java，但得益于struct和interface本身的语法限制以及“打包能力”的设计，包的复杂程度下降了，耦合度降低了，灵活度顺势增加了。&lt;/p&gt;&lt;p&gt;Go语言更期望你把struct和interface的声明作为同个包里面更小的抽象单位来使用（它处于同个包中，意味着它是提供同种能力中的成分），而不是作为“class（类）”的替代品。&lt;/p&gt;&lt;div class=&quot;img-container&quot; style=&quot;text-align: center;&quot;&gt;
                &lt;img src=&quot;http://image.coolapk.com/feed/2021/1008/22/44029_475ae0f6_1940_0394@911x537.jpeg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
                &lt;p class=&quot;image-caption&quot; style=&quot;text-align: center;&quot;&gt;&lt;/p&gt;&lt;/div&gt;&lt;p&gt;四，官方提供最佳入门教程&lt;/p&gt;&lt;p&gt;如果你对Go语言开始产生兴趣，已经跃跃欲试了，别着急，这里推荐几个官方提供的最快速入门Go语言的资料入口：&lt;/p&gt;&lt;p&gt;· 《A Tour of Go（Go语言之旅）》 (最新官方英文： &lt;a class=&quot;feed-link-url&quot; href=&quot;https://tour.golang.org/&quot; title=&quot;https://tour.golang.org/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接&lt;/a&gt;  ，第三方中文翻译&lt;!--break--&gt;： &lt;a class=&quot;feed-link-url&quot; href=&quot;https://tour.go-zh.org/&quot; title=&quot;https://tour.go-zh.org/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接&lt;/a&gt; ) &lt;/p&gt;&lt;p&gt;· 《Effective Go（实效Go编程）》 (最新官方英文： &lt;a class=&quot;feed-link-url&quot; href=&quot;https://golang.org/doc/effective_go&quot; title=&quot;https://golang.org/doc/effective_go&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接&lt;/a&gt;  ，第三方中文翻译： &lt;a class=&quot;feed-link-url&quot; href=&quot;https://go-zh.org/doc/effective_go.html&quot; title=&quot;https://go-zh.org/doc/effective_go.html&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接&lt;/a&gt;  )&lt;/p&gt;&lt;p&gt;沉下心一步步走完《Go语言之旅》，再细品《实效Go编程》，相信你已经能掌握Go语言的大部分精髓了！此时便可以搭配其他书籍、视频资料深入了解更多了。&lt;/p&gt;&lt;p&gt;最后，我的一点点总结&lt;/p&gt;&lt;p&gt;Q1：Go语言适合编程语言零基础入门吗？&lt;/p&gt;&lt;p&gt;A1：不推荐，学习理解Go语言最难的不在语法上，而在设计理念上，有其他语言基础能力（编译型语言更佳）再来学习它可以更容易上手。&lt;/p&gt;&lt;p&gt;Q2：Go语言好用吗？实用吗？&lt;/p&gt;&lt;p&gt;A2：刚上手可能需要一些时间熟悉它的使用习惯，有方便之处也有麻烦之处，内置的标准库已经很强大，整体来说利大于弊吧。&lt;/p&gt;&lt;p&gt;Q3：Go语言适合做哪些编程应用？&lt;/p&gt;&lt;p&gt;A3：它适合做网络编程，服务器编程，分布式系统，数据库系统，云平台，等。&lt;/p&gt;&lt;p&gt;Q4：可以用传统的面向对象观念理解Go语言的“面向对象”吗？&lt;/p&gt;&lt;p&gt;A4：可以对照理解，但更要超出传统观念，结合Go的设计理念重新理解。&lt;/p&gt;&lt;p&gt;Q5：有什么方法可以快速入坑Go语言吗？&lt;/p&gt;&lt;p&gt;A5：可以先学习官方提供的《A Tour of Go（Go语言之旅）》《Effective Go（实效Go编程）》，再搭配其他书籍视频资料进行深入。&lt;/p&gt;&lt;p&gt;另外，推荐一篇以前发布的图文《“鸭子类型”，因吹丝挺！ - Python &amp;amp; Go》。&lt;/p&gt;&lt;p&gt;传送门： &lt;a class=&quot;feed-link-url&quot; href=&quot;https://www.coolapk.com/feed/15939836&quot; title=&quot;https://www.coolapk.com/feed/15939836&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接&lt;/a&gt;&lt;/p&gt;&lt;p&gt;以上，希望对你有所帮助～&lt;/p&gt;</description><link>https://www.coolapk.com/feed/30555334?shareKey=NDdjNWY4ZWM2Yjg3NjdlMWY4OTc~</link><guid isPermaLink="false">https://www.coolapk.com/feed/30555334</guid><pubDate>Fri, 08 Oct 2021 14:07:39 GMT</pubDate><author>djunxp</author></item><item><title>【第1期】实录 Python爬虫入门演示操作 轻松爬取网易新闻 标题 正文 封面图片 Jupyter Notebook Anaconda 3操作全过程实机录屏，剪辑掉小部分无关紧要的片段，开...</title><description>&lt;p&gt;【第1期】实录 Python爬虫入门演示操作 轻松爬取网易新闻 标题 正文 封面图片 Jupyter Notebook Anaconda 3&lt;br&gt;&lt;br&gt;操作全过程实机录屏，剪辑掉小部分无关紧要的片段，开了1.8倍速哈~&lt;br&gt;看不清楚的地方可以调速，或暂停再看~&lt;br&gt;觉得视频不错，请多多给赞呀哈！&lt;!--break--&gt;&lt;br&gt;&lt;br&gt;【笔记】&lt;br&gt;视频中涉及到的都可以在这里找到哈！&lt;br&gt;&lt;a class=&quot;feed-link-url&quot; href=&quot;https://github.com/djun/ABC_of_Python&quot; title=&quot;https://github.com/djun/ABC_of_Python&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接&lt;/a&gt;&lt;br&gt;&lt;br&gt;[cos滑稽][cos滑稽]视频传送门在此：&lt;a class=&quot;feed-link-url&quot; href=&quot;https://b23.tv/ag8e3B&quot; title=&quot;https://b23.tv/ag8e3B&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接&lt;/a&gt;&lt;/p&gt;&lt;img src=&quot;http://image.coolapk.com/feed/2021/0817/16/44029_b728fac5_8391_0313@1726x1080.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;</description><link>https://www.coolapk.com/feed/29281340?shareKey=NWUyMzRlZjZlOTI0NjdlMWY4OTc~</link><guid isPermaLink="false">https://www.coolapk.com/feed/29281340</guid><pubDate>Tue, 17 Aug 2021 08:19:52 GMT</pubDate><author>djunxp</author></item><item><title>香炸！Flask 2.0 发布了[cos滑稽][cos滑稽][cos滑稽]好不好用还不知道，总之是越来越像FastAPI了[滑稽]async有了，type hinting也有了，一些小细节诸如方便编写...</title><description>&lt;p&gt;香炸！Flask 2.0 发布了[cos滑稽][cos滑稽][cos滑稽]&lt;br&gt;好不好用还不知道，总之是越来越像FastAPI了[滑稽]async有了，type hinting也有了，一些小细节诸如方便编写的shortcut decorators等等等也都有了，感人。。&lt;!--break--&gt;。[牛啤][喝酒][喝酒][喝酒]&lt;br&gt;&lt;br&gt;发布地址：&lt;br&gt;&lt;a class=&quot;feed-link-url&quot; href=&quot;https://github.com/pallets/flask/releases&quot; title=&quot;https://github.com/pallets/flask/releases&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接&lt;/a&gt;&lt;br&gt;完整的更新日志：&lt;br&gt;&lt;a class=&quot;feed-link-url&quot; href=&quot;https://flask.palletsprojects.com/en/2.0.x/changes/#version-2-0-0&quot; title=&quot;https://flask.palletsprojects.com/en/2.0.x/changes/#version-2-0-0&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接&lt;/a&gt;&lt;/p&gt;&lt;img src=&quot;http://image.coolapk.com/feed/2021/0518/12/44029_0d68cd2e_1167_4894@1080x2086.jpeg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;img src=&quot;http://image.coolapk.com/feed/2021/0518/12/44029_454cae67_1167_4896@1080x2086.jpeg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;</description><link>https://www.coolapk.com/feed/27053594?shareKey=NTA1OGJhYWQxNjM3NjdlMWY4OTc~</link><guid isPermaLink="false">https://www.coolapk.com/feed/27053594</guid><pubDate>Tue, 18 May 2021 04:12:49 GMT</pubDate><author>djunxp</author></item><item><title>『使用feapder开发爬虫是一种怎样的体验』 国人开发的类似scrapy但定制性和功能看起来更丰富的爬虫框架，推荐给有需要的朋友看看。</title><description>&lt;p&gt;『使用feapder开发爬虫是一种怎样的体验』

国人开发的类似scrapy但定制性和功能看起来更丰富的爬虫框架，推荐给有需要的朋友看看。&lt;/p&gt;&lt;img src=&quot;http://image.coolapk.com/feed/2021/0518/12/44029_74cf20b7_0553_1768@1077x2082.jpeg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;</description><link>https://www.coolapk.com/feed/27053397?shareKey=ZDYxYzJjOWRjN2U3NjdlMWY4OTc~</link><guid isPermaLink="false">https://www.coolapk.com/feed/27053397</guid><pubDate>Tue, 18 May 2021 04:02:34 GMT</pubDate><author>djunxp</author></item><item><title>[cos滑稽][cos滑稽][cos滑稽]听说Flask终于把async支持给merge进来了，喜大普奔鸭[doge笑哭][doge笑哭][doge笑哭][doge笑哭]看看隔壁的Django和FastAPI。。。</title><description>&lt;p&gt;[cos滑稽][cos滑稽][cos滑稽]听说Flask终于把async支持给merge进来了，喜大普奔鸭[doge笑哭][doge笑哭][doge笑哭][doge笑哭]看看隔壁的Django和FastAPI。。。&lt;/p&gt;&lt;img src=&quot;http://image.coolapk.com/feed/2021/0409/07/44029_086440a4_3698_2911@1080x3411.jpeg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;</description><link>https://www.coolapk.com/feed/26177917?shareKey=NzRkODE5OWU4Y2JlNjdlMWY4OTc~</link><guid isPermaLink="false">https://www.coolapk.com/feed/26177917</guid><pubDate>Thu, 08 Apr 2021 23:14:59 GMT</pubDate><author>djunxp</author></item><item><title>啊这，生物AI。。。[受虐滑稽][受虐滑稽][受虐滑稽][牛啤][牛啤][牛啤][牛啤]</title><description>&lt;p&gt;啊这，生物AI。。。[受虐滑稽][受虐滑稽][受虐滑稽][牛啤][牛啤][牛啤][牛啤]&lt;/p&gt;&lt;img src=&quot;http://image.coolapk.com/feed/2021/0307/02/44029_8ceee21b_6025_6859@600x928.jpeg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;</description><link>https://www.coolapk.com/feed/25346522?shareKey=MGNiYWE3Y2IzOGU3NjdlMWY4OTc~</link><guid isPermaLink="false">https://www.coolapk.com/feed/25346522</guid><pubDate>Sat, 06 Mar 2021 18:40:26 GMT</pubDate><author>djunxp</author></item><item><title>【Python官方新闻】大家哈皮牛年啊！Python 3.10.0a4 已可用于测试（2021-1-4）来源：查看链接------------------------官方祝大家哈皮牛年啊，希望大家在今年都...</title><description>&lt;p&gt;【Python官方新闻】大家哈皮牛年啊！Python 3.10.0a4&amp;nbsp;已可用于测试（2021-1-4）&lt;br&gt;来源：&lt;a class=&quot;feed-link-url&quot; href=&quot;https://pythoninsider.blogspot.com/2021/01/python-3100a4-is-now-available-for.html&quot; title=&quot;https://pythoninsider.blogspot.com/2021/01/python-3100a4-is-now-available-for.html&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接&lt;/a&gt;&lt;!--break--&gt;&lt;br&gt;------------------------&lt;br&gt;&lt;br&gt;官方祝大家哈皮牛年啊，希望大家在今年都有一个巨好的开端！那以发布一个新的Python&amp;nbsp;alpha发布版来庆祝一下把2020年抛弃在后的欢喜如何？（官方自己是这么写的没骗你哈哈哈）&lt;br&gt;&lt;br&gt;可以从这里获取到Python 3.10.0a4，这是一个3.10版早期的开发者预览版：&lt;br&gt;&lt;a class=&quot;feed-link-url&quot; href=&quot;https://www.python.org/downloads/release/python-3100a4/&quot; title=&quot;https://www.python.org/downloads/release/python-3100a4/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接&lt;/a&gt;&lt;br&gt;&lt;br&gt;每次发同个主版本（3.10），官方都要重新唠嗑一下对比上个主版本（3.9）的新特性有哪些，&lt;br&gt;咱们这里就不再赘述啦。&lt;br&gt;&lt;br&gt;更详细的信息，请参考官方博文原文哈。&lt;/p&gt;&lt;img src=&quot;http://image.coolapk.com/feed/2021/0105/16/44029_bd5505ff_6680_8467@713x155.jpeg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;</description><link>https://www.coolapk.com/feed/24020782?shareKey=ZmJlZmI5NDVhYjYwNjdlMWY4OTc~</link><guid isPermaLink="false">https://www.coolapk.com/feed/24020782</guid><pubDate>Tue, 05 Jan 2021 08:51:21 GMT</pubDate><author>djunxp</author></item><item><title>【Python官方新闻】Python 3.8.7 现在可用！但并非完全支持macOS 11 Big Sur（2020-12-21）来源：查看链接------------------------Python 3.8.7 是3.8系列的第7...</title><description>&lt;p&gt;【Python官方新闻】Python 3.8.7&amp;nbsp;现在可用！但并非完全支持macOS 11 Big Sur（2020-12-21）&lt;br&gt;来源&lt;!--break--&gt;：&lt;a class=&quot;feed-link-url&quot; href=&quot;https://pythoninsider.blogspot.com/2020/12/python-387-is-now-available.html&quot; title=&quot;https://pythoninsider.blogspot.com/2020/12/python-387-is-now-available.html&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接&lt;/a&gt;&lt;br&gt;------------------------&lt;br&gt;&lt;br&gt;Python 3.8.7 是3.8系列的第7个维护发布版本哈，可以从这里获取到：&lt;a class=&quot;feed-link-url&quot; href=&quot;https://www.python.org/downloads/release/python-387/&quot; title=&quot;https://www.python.org/downloads/release/python-387/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接&lt;/a&gt;&lt;br&gt;&lt;br&gt;请留意：这是一个3.8系列的bug修复版，是将被目前具有最新特性的3.9系列替代的版本。可以在这里找到最新发布的3.9.x版本：&lt;a class=&quot;feed-link-url&quot; href=&quot;https://www.python.org/downloads/&quot; title=&quot;https://www.python.org/downloads/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接&lt;/a&gt;&lt;br&gt;&lt;br&gt;Python 3.8 系列的维护版本将会继续以两月一次的频率发布，也就是说3.8.8版本计划在2021年2月发布。&lt;br&gt;&lt;br&gt;【粗体字】Python 3.8.7&amp;nbsp;并非完全支持macOS 11 Big Sur！&lt;br&gt;3.8.7版可以安装在macOS 11 Big Sur系统上，但在Apple Silicon Mac上将以Rosetta 2转换后的形式运行。但其实在Big&amp;nbsp;Sur上少量特性还不能正常工作（诸如 ctypes.util.find_library()、Distutils ），这些限制是在Apple&amp;nbsp;Silicon和Intel处理器上都会有的，官方正在寻找最佳解决方案，后面会发布在3.8.8版本中。&lt;br&gt;&lt;br&gt;Python 3.9.1 是完全支持Big Sur系统和Apple Silicon Mac的，包含对Apple Silicon Mac的原生支持，以及对universal2二进制的支持。&lt;br&gt;&lt;br&gt;更详细的信息，请参考官方博文原文哈。&lt;/p&gt;&lt;img src=&quot;http://image.coolapk.com/feed/2020/1229/11/44029_bd5505ff_0907_7177@713x155.jpeg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;</description><link>https://www.coolapk.com/feed/23858521?shareKey=ODliOTU1YmI3ODkxNjdlMWY4OTc~</link><guid isPermaLink="false">https://www.coolapk.com/feed/23858521</guid><pubDate>Tue, 29 Dec 2020 03:01:48 GMT</pubDate><author>djunxp</author></item><item><title>【Python官方新闻】支持Apple Silicon的Python 3.9.1 以及3.10.0a3和3.8.7rc1 已经可以用上啦！（2020-12-7）来源：查看链接------------------------官方说现在...</title><description>&lt;p&gt;【Python官方新闻】支持Apple Silicon的Python 3.9.1&amp;nbsp;以及3.10.0a3和3.8.7rc1&amp;nbsp;已经可以用上啦！（2020-12-7）&lt;br&gt;&lt;br&gt;来源&lt;!--break--&gt;：&lt;a class=&quot;feed-link-url&quot; href=&quot;https://pythoninsider.blogspot.com/2020/12/python-391-is-now-available-together.html&quot; title=&quot;https://pythoninsider.blogspot.com/2020/12/python-391-is-now-available-together.html&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接&lt;/a&gt;&lt;br&gt;------------------------&lt;br&gt;&lt;br&gt;官方说现在开始变得非常冷了（至少在北半球是这样），所以他们非常细致地打包了3个新的Python发布版本在这些天给大伙保保暖！（什么鬼逻辑哈哈哈）&lt;br&gt;&lt;br&gt;Python 3.9.1是首个3.9系列的维护版本，而且是第一个原生支持macOS 11 Big Sur (Apple&amp;nbsp;Silicon) 的Python版本！可以在这里下载到：&lt;a class=&quot;feed-link-url&quot; href=&quot;https://www.python.org/downloads/release/python-391/&quot; title=&quot;https://www.python.org/downloads/release/python-391/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接&lt;/a&gt;&lt;br&gt;&lt;br&gt;Python 3.9系列将会继续进行例行的双月更新，也就是说3.9.2版本预计会在2021-2-8发布。&lt;br&gt;&lt;br&gt;更详细的信息，请参考官方博文原文哈。&lt;/p&gt;&lt;img src=&quot;http://image.coolapk.com/feed/2020/1211/12/44029_bd5505ff_1541_2158@713x155.jpeg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;</description><link>https://www.coolapk.com/feed/23492396?shareKey=NThkNjY1MGRlMDExNjdlMWY4OTc~</link><guid isPermaLink="false">https://www.coolapk.com/feed/23492396</guid><pubDate>Fri, 11 Dec 2020 04:39:01 GMT</pubDate><author>djunxp</author></item><item><title>【Python官方新闻】pip 20.3，带着新的依赖解析器正式发布啦（2020-11-30）来源：查看链接------------------------官方刚发布了pip 20.3版本，通过命令“python...</title><description>&lt;p&gt;【Python官方新闻】pip 20.3，带着新的依赖解析器正式发布啦（2020-11-30）&lt;br&gt;来源：&lt;a class=&quot;feed-link-url&quot; href=&quot;https://pythoninsider.blogspot.com/2020/11/pip-20-3-release-new-resolver.html&quot; title=&quot;https://pythoninsider.blogspot.com/2020/11/pip-20-3-release-new-resolver.html&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接&lt;/a&gt;&lt;!--break--&gt;&lt;br&gt;------------------------&lt;br&gt;&lt;br&gt;官方刚发布了pip 20.3版本，通过命令“python -m pip install --upgrade pip”就可以更新到这个版本啦。&lt;br&gt;&lt;br&gt;这是一个重要而且容易引起混淆的发布版本，官方在去年的一篇博文解释过，甚至还做了个视频讲解（&amp;nbsp;&lt;a class=&quot;feed-link-url&quot; href=&quot;https://youtu.be/B4GQCBBsuNU&quot; title=&quot;https://youtu.be/B4GQCBBsuNU&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接&lt;/a&gt; ） 。&lt;br&gt;&lt;br&gt;新版pip将新解析器作为默认使用的了，当它接收到不兼容的指示时，将明显严格而且持续分析，而且减少对确定类型的约束文件的支持，因此某些工作环境或者工作流可能会受损。&lt;br&gt;&lt;br&gt;可以查看这个链接（&amp;nbsp;&lt;a class=&quot;feed-link-url&quot; href=&quot;https://pip.pypa.io/en/latest/user_guide/#changes-to-the-pip-dependency-resolver-in-20-3-2020&quot; title=&quot;https://pip.pypa.io/en/latest/user_guide/#changes-to-the-pip-dependency-resolver-in-20-3-2020&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接&lt;/a&gt; ）处理测试和迁移，以及反馈问题。当然在使用pip的时候也可以带上参数“--use-deprecated=legacy-resolver”来用旧的解析器，但旧解析器将会在明年1月发布21.0版时废弃掉。&lt;br&gt;&lt;br&gt;注意：&lt;br&gt;pip 20.3&amp;nbsp;支持Python 3.5，但会提示即将废弃支持，而且在将来的21.0版以后不再受支持。&lt;br&gt;pip 20.3&amp;nbsp;支持Python 2.7，直到将来的21.0版，此后将不再受pip新版本支持（Python 2&amp;nbsp;整个系列不会再有新版本pip能用了）。&lt;br&gt;&lt;br&gt;更详细的信息，请参考官方博文原文哈。&lt;/p&gt;&lt;img src=&quot;http://image.coolapk.com/feed/2020/1202/15/44029_bd5505ff_4692_2546@713x155.jpeg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;</description><link>https://www.coolapk.com/feed/23309170?shareKey=MDhlNjc2ZDk2MGYyNjdlMWY4OTc~</link><guid isPermaLink="false">https://www.coolapk.com/feed/23309170</guid><pubDate>Wed, 02 Dec 2020 07:38:13 GMT</pubDate><author>djunxp</author></item><item><title>undefined</title><description>&lt;p&gt;undefined&lt;/p&gt;&lt;img src=&quot;http://image.coolapk.com/feed/2020/1113/16/44029_369ee985_7340_0383@1080x1677.jpeg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;</description><link>https://www.coolapk.com/feed/22911832?shareKey=YzE5N2E5M2VmMDY3NjdlMWY4OTc~</link><guid isPermaLink="false">https://www.coolapk.com/feed/22911832</guid><pubDate>Fri, 13 Nov 2020 08:49:01 GMT</pubDate><author>djunxp</author></item><item><title>【Python官方新闻】Python 3.10.0a2 现在可以测试啦！（2020-11-4）来源：查看链接------------------------神秘的发布管理机器引擎终于成功产出了一个新的预发...</title><description>&lt;p&gt;【Python官方新闻】Python 3.10.0a2 现在可以测试啦！（2020-11-4）&lt;br&gt;来源：&lt;a class=&quot;feed-link-url&quot; href=&quot;https://pythoninsider.blogspot.com/2020/11/python-3100a2-is-now-available-for.html&quot; title=&quot;https://pythoninsider.blogspot.com/2020/11/python-3100a2-is-now-available-for.html&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接&lt;/a&gt;&lt;!--break--&gt;&lt;br&gt;------------------------&lt;br&gt;&lt;br&gt;神秘的发布管理机器引擎终于成功产出了一个新的预发布版本啦，可以在这里获取到它：&lt;a class=&quot;feed-link-url&quot; href=&quot;https://www.python.org/downloads/release/python-3100a2/&quot; title=&quot;https://www.python.org/downloads/release/python-3100a2/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接&lt;/a&gt;&lt;br&gt;&lt;br&gt;这是 Python 3.10 的一个早期的开发预览版哦。&lt;br&gt;&lt;br&gt;相比 3.9 ， 3.10 截止目前的主要新特性是：&lt;br&gt;· PEP 623：在Unicode中去除wstr&lt;br&gt;· PEP 604：允许编写像 X | Y 这样的联合类型&lt;br&gt;· PEP 612：参数设定的变量&lt;br&gt;· PEP 626：为调试工具或其他工具提供精确行号&lt;br&gt;· bpo-38605：“from __future__ import annotations (PEP 563)”现已为默认&lt;br&gt;&lt;br&gt;下个预发布版 3.10.0a3 计划在2020-12-7放出。&lt;/p&gt;&lt;img src=&quot;http://image.coolapk.com/feed/2020/1110/11/44029_bd5505ff_9337_0415@713x155.jpeg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;</description><link>https://www.coolapk.com/feed/22831608?shareKey=OTg5M2RmYzMwOTI5NjdlMWY4OTc~</link><guid isPermaLink="false">https://www.coolapk.com/feed/22831608</guid><pubDate>Tue, 10 Nov 2020 03:35:37 GMT</pubDate><author>djunxp</author></item><item><title>【Python官方新闻】Python 3.9.0 现在能用啦！Python 4 还会远吗……（2020-10-5）来源：查看链接------------------------Python 3.9.0 是目前Python最新特性更...</title><description>&lt;p&gt;【Python官方新闻】Python 3.9.0&amp;nbsp;现在能用啦！Python 4&amp;nbsp;还会远吗……（2020-10-5）&lt;br&gt;来源：&lt;a class=&quot;feed-link-url&quot; href=&quot;https://blog.python.org/2020/10/python-390-is-now-available-and-you-can.html&quot; title=&quot;https://blog.python.org/2020/10/python-390-is-now-available-and-you-can.html&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接&lt;/a&gt;&lt;!--break--&gt;&lt;br&gt;------------------------&lt;br&gt;&lt;br&gt;Python 3.9.0 是目前Python最新特性更新正式发布版本，它包含非常多新特性和给力优化，可以在这里看到具体更新内容：&lt;a class=&quot;feed-link-url&quot; href=&quot;https://www.python.org/downloads/release/python-390/&quot; title=&quot;https://www.python.org/downloads/release/python-390/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接&lt;/a&gt;&lt;br&gt;&lt;br&gt;大多数的第三方包发布者现在应该正在制作能正常用于&amp;nbsp;Python 3.9.0 的模块包啦。&lt;br&gt;&lt;br&gt;那么问题来了，官方自问自答：Python 4 有消息了吗？没那么快呢！3.9&amp;nbsp;的下个版本还有 3.10 呢，就像 3.9&amp;nbsp;相对于 3.8，周而复始，生生不息……[流汗滑稽][流汗滑稽][流汗滑稽][流汗滑稽][流汗滑稽]&lt;/p&gt;&lt;img src=&quot;http://image.coolapk.com/feed/2020/1012/12/44029_bd5505ff_5903_1766@713x155.jpeg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;</description><link>https://www.coolapk.com/feed/22185894?shareKey=NDQ5N2M4Y2Y4MTQ0NjdlMWY4OTc~</link><guid isPermaLink="false">https://www.coolapk.com/feed/22185894</guid><pubDate>Mon, 12 Oct 2020 04:11:43 GMT</pubDate><author>djunxp</author></item><item><title>【Python官方新闻】Python 3.5系列版本已终止支持！（2020-10-2）来源：查看链接------------------------官方公告！3.5系列版本现已不再进行支持，不会再有新的...</title><description>&lt;p&gt;【Python官方新闻】Python 3.5系列版本已终止支持！（2020-10-2）&lt;br&gt;来源：&lt;a class=&quot;feed-link-url&quot; href=&quot;https://pythoninsider.blogspot.com/2020/10/python-35-is-no-longer-supported.html&quot; title=&quot;https://pythoninsider.blogspot.com/2020/10/python-35-is-no-longer-supported.html&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接&lt;/a&gt;&lt;!--break--&gt;&lt;br&gt;------------------------&lt;br&gt;&lt;br&gt;官方公告！3.5系列版本现已不再进行支持，不会再有新的bug修复或者安全补丁了！&lt;br&gt;&lt;br&gt;3.5.10版是该系列的最后一个版本了，Python核心开发社区强烈建议所有余留在3.5版本的用户必须升级到最新的Python版本！&lt;/p&gt;&lt;img src=&quot;http://image.coolapk.com/feed/2020/1009/10/44029_bd5505ff_8988_2288@713x155.jpeg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;</description><link>https://www.coolapk.com/feed/22123008?shareKey=OTNkM2MyZTI4MTVjNjdlMWY4OTc~</link><guid isPermaLink="false">https://www.coolapk.com/feed/22123008</guid><pubDate>Fri, 09 Oct 2020 02:03:08 GMT</pubDate><author>djunxp</author></item><item><title>【Python官方新闻】Python 3.9.0rc2 现在开放测试啦（2020-9-17）来源：查看链接------------------------Python 3.9.0 已经几乎快准备好了！本次发布的 3.9.0rc...</title><description>&lt;p&gt;【Python官方新闻】Python 3.9.0rc2&amp;nbsp;现在开放测试啦（2020-9-17）&lt;br&gt;来源：&lt;a class=&quot;feed-link-url&quot; href=&quot;https://pythoninsider.blogspot.com/2020/09/python-390rc2-is-now-available-for.html&quot; title=&quot;https://pythoninsider.blogspot.com/2020/09/python-390rc2-is-now-available-for.html&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接&lt;/a&gt;&lt;!--break--&gt;&lt;br&gt;------------------------&lt;br&gt;&lt;br&gt;Python 3.9.0&amp;nbsp;已经几乎快准备好了！本次发布的 3.9.0rc2&amp;nbsp;是10月5号最终发布 3.9.0正式版 之前的，计划中的最后一个预览版。可以在这里下载到：&lt;br&gt;&lt;a class=&quot;feed-link-url&quot; href=&quot;https://www.python.org/downloads/release/python-390rc2/&quot; title=&quot;https://www.python.org/downloads/release/python-390rc2/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接&lt;/a&gt;&lt;br&gt;&lt;br&gt;与此同时，官方强烈鼓励第三方Python项目的维护人员在这个即将发布3.9版的阶段调试准备好跟它的兼容性，有任何问题可以反馈到官方的bug&amp;nbsp;tracker上。&lt;br&gt;&lt;br&gt;【留意！官方安装包 在Windows上已默认为64位版本，而且已经不支持更多旧版本Win系统！已经启用在Win7以下版本禁止安装的机制咯！】&lt;/p&gt;&lt;img src=&quot;http://image.coolapk.com/feed/2020/0922/10/44029_bd5505ff_1178_5948@713x155.jpeg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;</description><link>https://www.coolapk.com/feed/21787570?shareKey=ODhmYzFhNTRkNTcwNjdlMWY4OTc~</link><guid isPermaLink="false">https://www.coolapk.com/feed/21787570</guid><pubDate>Tue, 22 Sep 2020 02:19:39 GMT</pubDate><author>djunxp</author></item><item><title>【Python官方新闻】Python 3.5.10 正式发布了；3.5系列版本即将在9月“寿终正寝”（2020-9-5）来源：查看链接------------------------Python 3.5.10 可以在这里...</title><description>&lt;p&gt;【Python官方新闻】Python 3.5.10&amp;nbsp;正式发布了；3.5系列版本即将在9月“寿终正寝”（2020-9-5）&lt;br&gt;来源：&lt;a class=&quot;feed-link-url&quot; href=&quot;https://pythoninsider.blogspot.com/2020/09/python-3510-is-now-available.html&quot; title=&quot;https://pythoninsider.blogspot.com/2020/09/python-3510-is-now-available.html&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接&lt;/a&gt;&lt;!--break--&gt;&lt;br&gt;------------------------&lt;br&gt;&lt;br&gt;Python 3.5.10 可以在这里下载到：&lt;br&gt;&lt;a class=&quot;feed-link-url&quot; href=&quot;https://www.python.org/downloads/release/python-3510/&quot; title=&quot;https://www.python.org/downloads/release/python-3510/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接&lt;/a&gt;&lt;br&gt;&lt;br&gt;该版本依然是“仅安全更新”的一个新版本。Python 3.5&amp;nbsp;即将在2020年9月“寿终正寝”，如果在3.5.10之后没有其他新的安全补丁，那么这个版本就是3.5系列的最终版本啦。&lt;br&gt;&lt;br&gt;（依然建议大家使用官方有提供安装程序文件的更新的版本，除了保持兼容性的目的外，可以弃用这些老版本了）&lt;/p&gt;&lt;img src=&quot;http://image.coolapk.com/feed/2020/0916/09/44029_bd5505ff_9476_2725@713x155.jpeg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;</description><link>https://www.coolapk.com/feed/21666390?shareKey=NWFmMTE1Nzk1YTM2NjdlMWY4OTc~</link><guid isPermaLink="false">https://www.coolapk.com/feed/21666390</guid><pubDate>Wed, 16 Sep 2020 01:24:37 GMT</pubDate><author>djunxp</author></item><item><title>今天分享几本推荐给所有准备入门学习Python的朋友的经典电子书籍。在酷安发《哪里开始学好呢？》（图文传送门： 查看链接 ）的时候，很多朋友问过说求入门电子书...</title><description>&lt;p&gt;今天分享几本推荐给所有准备入门学习Python的朋友的经典电子书籍。在酷安发《哪里开始学好呢？》（图文传送门： &lt;a class=&quot;feed-link-url&quot; href=&quot;https://www.coolapk.com/feed/6863960&quot; title=&quot;https://www.coolapk.com/feed/6863960&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接&lt;/a&gt; ）的时候，很多朋友问过说求入门电子书，现在传到网盘分享到这里方便大家投[酷币]自取吧～&lt;!--break--&gt;&lt;br&gt;&lt;br&gt;书籍介绍：&lt;br&gt;《Python编程：从入门到实践》 如果是没有编程基础，或者编程基础薄弱的，推荐优先看这本。&lt;br&gt;《Python Cookbook 第三版 中文》《Python基础教程 第3版》 有一定编程基础，或者之前学习过C、C++、C#、Java、Golang等其他语言的朋友，推荐优先看这本。&lt;br&gt;&lt;br&gt;请自觉投[酷币]再下载哟，网盘链：&lt;br&gt;&lt;a class=&quot;feed-link-url&quot; href=&quot;https://wws.lanzoux.com/b01hk5brc&quot; title=&quot;https://wws.lanzoux.com/b01hk5brc&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接&lt;/a&gt;&lt;br&gt;密码:8b14&lt;/p&gt;</description><link>https://www.coolapk.com/feed/20522800?shareKey=Yzg0ZjZjYzlhZjA4NjdlMWY4OTc~</link><guid isPermaLink="false">https://www.coolapk.com/feed/20522800</guid><pubDate>Wed, 29 Jul 2020 07:40:08 GMT</pubDate><author>djunxp</author></item><item><title>你买到了女朋友喜欢的口红色号了吗？ - 我的Python实战项目</title><description>&lt;img src=&quot;http://image.coolapk.com/feed/2018/1227/13/44029_1545887546_9097@690x310.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;hr&gt;&lt;p&gt;&lt;a class=&quot;feed-link-tag&quot; href=&quot;https://www.coolapk.com/t/%E7%88%B1%E7%BC%96%E7%A8%8B?type=12&quot;&gt;#爱编程#&lt;/a&gt;  办公室闲聊时间，只听一位女同事锤着桌子向另一位女同事吐槽道……&lt;/p&gt;&lt;p&gt;------------------------&lt;/p&gt;&lt;p&gt;【请关注我】&lt;/p&gt;&lt;p&gt;我的看看号“好想学Python”（与WeChat公众号同名），欢迎订阅。&lt;/p&gt;&lt;p&gt;往期精选&lt;!--break--&gt;，尽在其中 → &lt;a class=&quot;feed-link-url&quot; href=&quot;https://www.coolapk.com/dyh/1524&quot; title=&quot;https://www.coolapk.com/dyh/1524&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接&lt;/a&gt;&lt;/p&gt;&lt;p&gt;------------------------&lt;/p&gt;&lt;p&gt;【个人简介】&lt;/p&gt;&lt;p&gt;我是DJun（小丁），码龄18年，从事IT工作5年，踩过无数“语言”坑最后入坑Python，想通过酷安看看号，把自己的成长经历与经验分享给酷友们。&lt;/p&gt;&lt;p&gt;------------------------&lt;/p&gt;&lt;p&gt;办公室闲聊时间，只听一位女同事锤着桌子向另一位女同事吐槽道：“能分清口红色号的直男，不存在的！！”“‘死亡芭比粉’，我男朋友他送我的口红色号竟然真的是‘死亡芭比粉’！！”&lt;/p&gt;&lt;p&gt;就在这天，笔者听到这位女同事吐槽的时候，陷入了思考。&lt;/p&gt;&lt;p&gt;早前就听说，“死亡芭比粉”是对口红有深刻误解的“钢铁直男”送异性首选色号～满天飞的“口红色号”段子也足以证明女生并不喜欢男生为自己挑口红礼物时，即使是买的知名品牌也难以接受与自己“水火不容”的色号吧！&lt;/p&gt;&lt;div class=&quot;img-container&quot; style=&quot;text-align: center;&quot;&gt;
                &lt;img src=&quot;http://image.coolapk.com/feed/2018/1227/13/44029_1545887549_4961@601x387.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
                &lt;p class=&quot;image-caption&quot; style=&quot;text-align: center;&quot;&gt;（图片来源网络）&lt;/p&gt;&lt;/div&gt;&lt;p&gt;笔者联想到之前在知乎上看过一位大神grapeot的文章，是用深度学习工具Caffe撸了一个“斗图机器人”，大致原理是先收集一些表情包抽取特征放入数据库，然后机器人接收到对方发来的表情包时对收到的图也抽取特征，然后“在数据库里面找最近邻，做一些简单的dedup”&lt;!--break--&gt;，把最终从库里取出的表情包发回，“效果意外地好”“在一些不知情的群里面跟人直接斗起来了”。哈哈，还挺有意思的！&lt;/p&gt;&lt;p&gt;他的思路方法主要是“抽取特征”“找最近邻”两大点。&lt;/p&gt;&lt;div class=&quot;img-container&quot; style=&quot;text-align: center;&quot;&gt;
                &lt;img src=&quot;http://image.coolapk.com/feed/2018/1227/13/44029_1545887551_7573@854x178.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
                &lt;p class=&quot;image-caption&quot; style=&quot;text-align: center;&quot;&gt;（“斗图机器人”的大致思路）&lt;/p&gt;&lt;/div&gt;&lt;p&gt;头上闪现一个亮亮的大灯泡。试想一下，借鉴“抽取特征”“找最近邻”这样的整体思路，我们似乎可以这样做：预先通过爬虫从品牌官网爬取一些口红产品以及对应的色号，取色号颜色作为“特征”，再从明星图片的唇色取色作为“特征”，然后通过“找最近邻”，匹配到跟明星使用的口红颜色最为接近的口红产品&lt;!--break--&gt;。&lt;/p&gt;&lt;p&gt;这思路想起来还挺棒的，或许可以人工智能方式帮直男朋友们买到明星款口红产品送给心爱的她！&lt;/p&gt;&lt;div class=&quot;img-container&quot; style=&quot;text-align: center;&quot;&gt;
                &lt;img src=&quot;http://image.coolapk.com/feed/2018/1227/13/44029_1545887554_0083@854x179.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
                &lt;p class=&quot;image-caption&quot; style=&quot;text-align: center;&quot;&gt;（“口红色号查询”的构思）&lt;/p&gt;&lt;/div&gt;&lt;p&gt;.&lt;/p&gt;&lt;p&gt;二话不说，笔者开始动手尝试具体实现。&lt;/p&gt;&lt;p&gt;即将实践的这个项目，笔者将它大致分解成这几部分：&lt;/p&gt;&lt;p&gt;① 从品牌官网获取产品、色号资料：用Python写爬虫，读取色号SKU的样图颜色作为特征，存入数据库；&lt;/p&gt;&lt;p&gt;② 找一个颜色在已知颜色中最为相似的颜色：即颜色特征之间“找最近邻”&lt;!--break--&gt;，将颜色特征分解为R（红）、G（绿）、B（蓝）三个分量，其对应色号名称如“N°3 蜜桃唇语”作为分类标签（目标值），通过Python，使用机器学习中的KNN最近邻算法来作训练和预测前N个结果；&lt;/p&gt;&lt;p&gt;③ 从明星图片唇色取色：用谷歌浏览器插件ColorZilla，对网络搜索找到的图片进行取色；&lt;/p&gt;&lt;p&gt;④ 便捷的查询功能：用Python编写Web后端程序，用ColorZilla插件取色后，通过开源词典GoldenDict作为前端，向后端发起查询，得到结果。&lt;/p&gt;&lt;p&gt;总的来说：&lt;/p&gt;&lt;p&gt;① 爬虫部分，通常是优先考虑使用requests、lxml模块，人工分析网页HTML结构，找规律，筛选出所需数据；&lt;/p&gt;&lt;p&gt;② 图片取色用PIL（pillow）来做；&lt;/p&gt;&lt;p&gt;③ KNN最近邻算法考虑交给sklearn（scikit-learn）来做，简单易操作；&lt;/p&gt;&lt;p&gt;④ Web后端就交给Flask吧，对于这类小需求实现成本越低越好。&lt;/p&gt;&lt;p&gt;接下来是动手时间啦，一边分析，一边开发项目程序。（文末附上项目GitHub地址）&lt;/p&gt;&lt;p&gt;一、【爬虫】从品牌官网获取产品、色号资料&lt;/p&gt;&lt;p&gt;这里选取了国际知名品牌“以纯”（别打～笔者知道是YSL～）的官网作例子，网页结构规整，而且有我们最为需要的，色号样图（就是一排的一小格一小格色块那种）。&lt;/p&gt;&lt;p&gt;通过色号样图我们可以轻松地获取不同色号SKU对应的颜色值（形式为“#xxxxxx”，即#号开头的六位16进制数字）～&lt;/p&gt;&lt;div class=&quot;img-container&quot; style=&quot;text-align: center;&quot;&gt;
                &lt;img src=&quot;http://image.coolapk.com/feed/2018/1227/13/44029_1545887556_3935@892x652.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
                &lt;p class=&quot;image-caption&quot; style=&quot;text-align: center;&quot;&gt;（YSL官网，唇部-唇膏 页面）&lt;/p&gt;&lt;/div&gt;&lt;p&gt;观察到我们需要关注的 彩妆-唇部 大分类下面，唇膏、唇釉、唇油、唇颊霜 这些小分类的产品列表界面都是一样的，而且每个小分类的页面数都只有1页，我们通过同样的方式爬取这几个URL的页面就可以了～&lt;/p&gt;&lt;p&gt;具体的做法可以进入文末提供的项目地址，在MLSCMain.py中找到答案。&lt;!--break--&gt;&lt;/p&gt;&lt;p&gt;需要留意的几点：&lt;/p&gt;&lt;p&gt;① 浏览器看到的是渲染后的页面，requests获取到的是未经渲染的页面，两者的HTML结构上可能会有差别，通常在网页上得到元素路径后，还要在requests获取到的HTML上做验证和调整；&lt;/p&gt;&lt;p&gt;② 数据储存的“大结构”需要仔细考虑，这里的目标是寻找相似的产品对应的色号，笔者选择了JSON、SQLite两种形式进行对比，觉得SQLite更为实用，其实不需要限制在SQLite上，其他的关系型数据库也可以，将产品和色号等信息压缩到同一张表，方便做KNN，也方便预测结果回查；&lt;/p&gt;&lt;p&gt;③ RGB与“颜色值”间的转换，#号开头的颜色值，后面的六位16进制数字其实是分别由R、G、B三个通道的16进制值拼接而成，通过PIL可以直接得到RGB三个10进制数值，简单转换就可以得到#号开头的颜色值了，存到数据库也只需要一个字段，虽然查询时ColorZilla能直接pick到的也是#号开头的颜色值，但是KNN需要用到的是RGB三个数字，在使用KNN的地方再转换回去即可；&lt;/p&gt;&lt;p&gt;④ 彩妆-唇部 下面不同小分类可能会重复出现某款产品，因为总共要爬的也就4个页面，可以考虑在全部爬完后，再做去重操作，去重后再储存入库。&lt;/p&gt;&lt;p&gt;二、【机器学习】找一个颜色在已知颜色中最为相似的颜色&lt;/p&gt;&lt;p&gt;对“机器学习”的入门，我们可以简单地将机器学习的操作理解为，往算法“黑盒子”进行训练数据和待预测数据的输入，从“黑盒子”得到预测结果。&lt;/p&gt;&lt;p&gt;就好比一个人跟另一个不知道苹果形状的人描述，拿了几张苹果的照片举例，说苹果是这般这般的形状，那么这个人往后看到苹果的实物或者照片，通过形状规律推测出它可能是苹果。&lt;/p&gt;&lt;p&gt;通过sklearn这款利器，选用其中的KNeighborsClassifier作为“黑盒子”，我们可以非常方便地实现“找相似颜色”这一目的。不添加复杂的调校参数的前提下，跟它相关的代码可以控制在10行以内。&lt;/p&gt;&lt;p&gt;具体的做法可以进入文末提供的项目地址，在MLSWebMain.py中找到答案。&lt;/p&gt;&lt;p&gt;三、【取色】从明星图片唇色取色&lt;/p&gt;&lt;p&gt;我们想找明星款色号，最简单的方式是打开浏览器，转到搜索引擎输入关键词搜索得到了。取色可以在浏览器上通过插件来实现，笔者用的是谷歌浏览器，在“chrome网上应用店”中找到了ColorZilla这款。&lt;/p&gt;&lt;div class=&quot;img-container&quot; style=&quot;text-align: center;&quot;&gt;
                &lt;img src=&quot;http://image.coolapk.com/feed/2018/1227/13/44029_1545887558_459@416x221.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
                &lt;p class=&quot;image-caption&quot; style=&quot;text-align: center;&quot;&gt;（ColorZilla 扩展程序信息）&lt;/p&gt;&lt;/div&gt;&lt;p&gt;插件使用方法极其简单，点击工具栏图标，往网页上要吸取颜色的地方点击一下，浮动条会提示对应的颜色值已复制。&lt;/p&gt;&lt;div class=&quot;img-container&quot; style=&quot;text-align: center;&quot;&gt;
                &lt;img src=&quot;http://image.coolapk.com/feed/2018/1227/13/44029_1545887560_6537@906x52.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
                &lt;p class=&quot;image-caption&quot; style=&quot;text-align: center;&quot;&gt;（颜色已被复制到剪贴板！）&lt;/p&gt;&lt;/div&gt;&lt;p&gt;.&lt;/p&gt;&lt;p&gt;四、【查询】便捷的查询功能&lt;/p&gt;&lt;p&gt;前些天遇见了GoldenDict这款开源词典软件，它给了我非常好的程序设计灵感，笔者已经将它应用在公司内部的项目中。&lt;/p&gt;&lt;p&gt;软件支持屏幕取词，支持“网络词典”，即从指定URL请求数据，获取结果显示在软件界面中。&lt;/p&gt;&lt;div class=&quot;img-container&quot; style=&quot;text-align: center;&quot;&gt;
                &lt;img src=&quot;http://image.coolapk.com/feed/2018/1227/13/44029_1545887562_7986@893x565.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
                &lt;p class=&quot;image-caption&quot; style=&quot;text-align: center;&quot;&gt;（词典设置界面）&lt;/p&gt;&lt;/div&gt;&lt;p&gt;上图没有马赛克的部分，除了上半部分软件自带的网络词典URL外，还有下半部分没打码的两项，一项是海词的URL，一项是本项目测试使用的URL。&lt;/p&gt;&lt;p&gt;我们在浏览器中进入海词的页面时，可以观察到，查询词被放在了最右斜杠的右边。&lt;/p&gt;&lt;div class=&quot;img-container&quot; style=&quot;text-align: center;&quot;&gt;
                &lt;img src=&quot;http://image.coolapk.com/feed/2018/1227/13/44029_1545887565_1056@147x26.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
                &lt;p class=&quot;image-caption&quot; style=&quot;text-align: center;&quot;&gt;（海词的URL示例）&lt;/p&gt;&lt;/div&gt;&lt;p&gt;按照GoldenDict的设置说明，只要将查询词替换为占位符“%GDWORD%”，软件就可以在我们查词的时候自动把词放入占位符中帮我们查询。&lt;/p&gt;&lt;p&gt;改成应用在我们的项目上也是同样方式的，我们自己定一个route就可以实现了。这在Flask中都能轻松快速地解决。&lt;/p&gt;&lt;div class=&quot;img-container&quot; style=&quot;text-align: center;&quot;&gt;
                &lt;img src=&quot;http://image.coolapk.com/feed/2018/1227/13/44029_1545887567_0292@389x24.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
                &lt;p class=&quot;image-caption&quot; style=&quot;text-align: center;&quot;&gt;（我们的URL示例）&lt;/p&gt;&lt;/div&gt;&lt;p&gt;还有一个问题就是，直接在网址上输入#号这个特殊符号，会被解析为其他意义，所以图上的网址如果是kw=#B03C79，就查不到数据了，要把#号quote成这串“%2523”才行，或者后端设计成可以直接处理不带#号的六位16进制数也是可以的。&lt;/p&gt;&lt;p&gt;当然我们使用GoldenDict的话&lt;!--break--&gt;，#号是会自动quote的，不需要考虑自己转换。&lt;/p&gt;&lt;p&gt;把KNN和Flask的代码写在一块，包含格式化的空行总共不到200行。具体的做法可以进入文末提供的项目地址，在MLSWebMain.py中找到答案。&lt;/p&gt;&lt;p&gt;这部分代码在本地测试ok后，还可以部署到自己的VPS上，随时随地使用更方便～&lt;/p&gt;&lt;p&gt;五、【效果演示】当当当当，最终效果出来啦&lt;/p&gt;&lt;p&gt;先是在YSL官网上对色号样图取色进行测试，验证得知100%匹配正确，这里不再截图了。来看看在网络图片上的测试吧～&lt;/p&gt;&lt;div class=&quot;img-container&quot; style=&quot;text-align: center;&quot;&gt;
                &lt;img src=&quot;http://image.coolapk.com/feed/2018/1227/13/44029_1545887569_509@1358x680.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
                &lt;p class=&quot;image-caption&quot; style=&quot;text-align: center;&quot;&gt;（从图上绿圈中某点取色得到的预测前5相似结果-1）&lt;/p&gt;&lt;/div&gt;&lt;div class=&quot;img-container&quot; style=&quot;text-align: center;&quot;&gt;
                &lt;img src=&quot;http://image.coolapk.com/feed/2018/1227/13/44029_1545887572_1825@1346x684.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
                &lt;p class=&quot;image-caption&quot; style=&quot;text-align: center;&quot;&gt;（从图上绿圈中某点取色得到的预测前5相似结果-2）&lt;/p&gt;&lt;/div&gt;&lt;p&gt;找了一张全智贤剧照和口红产品图P在一起的图片，分别在图上用绿色圈出来的地方进行测试。然后发现匹配到的相似色号的产品，竟然跟原图上的两款产品图都是不同款产品，哭唧唧～&lt;/p&gt;&lt;div class=&quot;img-container&quot; style=&quot;text-align: center;&quot;&gt;
                &lt;img src=&quot;http://image.coolapk.com/feed/2018/1227/13/44029_1545887574_5914@423x523.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
                &lt;p class=&quot;image-caption&quot; style=&quot;text-align: center;&quot;&gt;（聊天截图-1）&lt;/p&gt;&lt;/div&gt;&lt;div class=&quot;img-container&quot; style=&quot;text-align: center;&quot;&gt;
                &lt;img src=&quot;http://image.coolapk.com/feed/2018/1227/13/44029_1545887577_4277@419x398.png&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
                &lt;p class=&quot;image-caption&quot; style=&quot;text-align: center;&quot;&gt;（聊天截图-2）&lt;/p&gt;&lt;/div&gt;&lt;p&gt;然后发消息向老婆大人求教，得知因为唇膏、嘴唇都是立体的，有高光和阴影，取色都会受到影响，而且还有一个非常玄学的“在不同嘴上显现不同的颜色”的问题，emmmmmmm～&lt;/p&gt;&lt;p&gt;毕竟做KNN的训练数据的量就摆在那里了，也没有应用深度学习&lt;!--break--&gt;，很难处理那些复杂又玄学的问题的～好在只要来源图片取到的颜色不是“死亡芭比粉”，程序推荐的相似颜色也几乎不会出现“死亡芭比粉”，算是勉强解决了直男挑口红色号的需求？哈哈哈（尴尬笑）&lt;/p&gt;&lt;p&gt;懂一些绘画知识的她跟我提建议：可以考虑取高光颜色与阴影颜色之间最居中的那个颜色，作为查找相近颜色的依据。方法听起来不错，不过笔者还没有进一步实现和测试验证。你们怎么看？&lt;/p&gt;&lt;p&gt;------我是尴尬而又不失礼貌的分隔线------&lt;/p&gt;&lt;p&gt;获取本项目请访问： &lt;a class=&quot;feed-link-url&quot; href=&quot;https://github.com/djun/makeup-crawler&quot; title=&quot;https://github.com/djun/makeup-crawler&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接&lt;/a&gt;&lt;/p&gt;&lt;p&gt;------------------------&lt;/p&gt;&lt;p&gt;【友情推荐】&lt;/p&gt;&lt;p&gt;&amp;gt;&amp;gt;&amp;gt; [用PHP写漂亮的网页] PHP零基础入门教程 &lt;a class=&quot;feed-link-url&quot; href=&quot;https://www.coolapk.com/dyh/1475&quot; title=&quot;https://www.coolapk.com/dyh/1475&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&amp;gt;&amp;gt;&amp;gt; [开发在优雅Win10上的通用应用] UWP开发 &lt;a class=&quot;feed-link-url&quot; href=&quot;https://www.coolapk.com/dyh/1700&quot; title=&quot;https://www.coolapk.com/dyh/1700&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&amp;gt;&amp;gt;&amp;gt; [美食 手绘 穿搭 摄影 书籍] 幸福感提升指南 &lt;a class=&quot;feed-link-url&quot; href=&quot;https://www.coolapk.com/dyh/1526&quot; title=&quot;https://www.coolapk.com/dyh/1526&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接&lt;/a&gt;&lt;/p&gt;</description><link>https://www.coolapk.com/feed/9544961?shareKey=MjUwNDQwMzFkNGZkNjdlMWY4OTc~</link><guid isPermaLink="false">https://www.coolapk.com/feed/9544961</guid><pubDate>Thu, 27 Dec 2018 05:12:59 GMT</pubDate><author>djunxp</author></item><item><title>200行代码实现一个带界面的爬图小软件 - Python高手成长路(系列)(第3阶段)</title><description>&lt;img src=&quot;http://image.coolapk.com/feed/2018/0803/44029_1533277840_6379@480x216.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;&lt;hr&gt;&lt;p&gt;&lt;a class=&quot;feed-link-tag&quot; href=&quot;https://www.coolapk.com/t/%E9%85%B7%E5%AE%89%E4%B8%93%E6%A0%8F?type=12&quot;&gt;#酷安专栏#&lt;/a&gt; &lt;a class=&quot;feed-link-tag&quot; href=&quot;https://www.coolapk.com/t/%E7%88%B1%E7%BC%96%E7%A8%8B?type=12&quot;&gt;#爱编程#&lt;/a&gt;&amp;nbsp; 我的专栏“好想学Python”（与微信公众号同名），欢迎订阅→&amp;nbsp;&lt;a class=&quot;feed-link-url&quot; href=&quot;https://www.coolapk.com/dyh/1524&quot; title=&quot;https://www.coolapk.com/dyh/1524&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接»&lt;/a&gt;&lt;/p&gt;&lt;p&gt;【本篇摘要】&lt;/p&gt;&lt;p&gt;从构思到代码实现，详细讲解如何通过Python用200行代码实现一个带界面的爬图程序小项目&lt;!--break--&gt;。主要使用界面模块PyQt 4＋HTTP模块requests＋HTML文档解析模块lxml，涉及线程基本用法、队列基本用法、内存IO操作、简单图像处理等。&lt;/p&gt;&lt;p&gt;------------------------&lt;/p&gt;&lt;p&gt;【往期精选】&lt;/p&gt;&lt;p&gt;&amp;gt;&amp;gt;&amp;gt; Python从哪里开始学好呢？&amp;nbsp;&lt;a class=&quot;feed-link-url&quot; href=&quot;https://www.coolapk.com/feed/6863960&quot; title=&quot;https://www.coolapk.com/feed/6863960&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接»&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&amp;gt;&amp;gt;&amp;gt; 一道简单的程序题？&amp;nbsp;&lt;a class=&quot;feed-link-url&quot; href=&quot;https://www.coolapk.com/feed/6906518&quot; title=&quot;https://www.coolapk.com/feed/6906518&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接»&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&amp;gt;&amp;gt;&amp;gt; 面向你的对象，写一手漂亮的类&amp;nbsp;&lt;a class=&quot;feed-link-url&quot; href=&quot;https://www.coolapk.com/feed/7177036&quot; title=&quot;https://www.coolapk.com/feed/7177036&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接»&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&amp;gt;&amp;gt;&amp;gt; 网络爬虫与网页自动化操作：最小化版系统学习的大纲&amp;nbsp;&lt;a class=&quot;feed-link-url&quot; href=&quot;https://www.coolapk.com/feed/7480760&quot; title=&quot;https://www.coolapk.com/feed/7480760&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接»&lt;/a&gt;&lt;/p&gt;&lt;p&gt;更多往期精彩文章请进入查看 →&amp;nbsp;&lt;a class=&quot;feed-link-url&quot; href=&quot;https://www.coolapk.com/dyh/1524&quot; title=&quot;https://www.coolapk.com/dyh/1524&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接»&lt;/a&gt;&lt;/p&gt;&lt;p&gt;------------------------&lt;/p&gt;&lt;p&gt;【个人简介】&lt;/p&gt;&lt;p&gt;我是DJun（小丁），码龄18年，从事IT工作5年，踩过无数“语言”坑最后入坑Python，想通过酷安专栏，把自己的成长经历与经验分享给酷友们。&lt;/p&gt;&lt;p&gt;微信公众号：好想学Python&lt;/p&gt;&lt;p&gt;------------------------&lt;/p&gt;&lt;p&gt;上次笔者在酷安发的一篇图文（&amp;nbsp;&lt;a class=&quot;feed-link-url&quot; href=&quot;https://www.coolapk.com/feed/7464911&quot; title=&quot;https://www.coolapk.com/feed/7464911&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接»&lt;/a&gt;&amp;nbsp;）里面挖了个坑说，会出一篇用Python＋PyQt写GUI小软件的入门教程。说到做到，今天来填坑了～#(cos滑稽)#(cos滑稽)&lt;/p&gt;&lt;p&gt;这次做的是可以边爬图、边下载、边看图的一个小软件，为了更好地演示，特别挑选了一个HTML源码看起来比较有代表性的图库站点。&lt;/p&gt;&lt;p&gt;先来看看最终效果是怎样的：&lt;/p&gt;&lt;div class=&quot;img-container&quot; style=&quot;text-align: center;&quot;&gt;
                &lt;img src=&quot;http://image.coolapk.com/feed/2018/0803/44029_1533277841_441@802x632.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
                &lt;p class=&quot;image-caption&quot; style=&quot;text-align: center;&quot;&gt;主程序界面&lt;/p&gt;&lt;/div&gt;&lt;div class=&quot;img-container&quot; style=&quot;text-align: center;&quot;&gt;
                &lt;img src=&quot;http://image.coolapk.com/feed/2018/0803/44029_1533277842_8885@629x205.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
                &lt;p class=&quot;image-caption&quot; style=&quot;text-align: center;&quot;&gt;爬取的图片文件&lt;/p&gt;&lt;/div&gt;&lt;p&gt;运行程序后：&lt;/p&gt;&lt;p&gt;① 自动从某图库网站上抓取各种客气小姐姐的照片，在界面上显示预览图&lt;/p&gt;&lt;p&gt;② 每次加载一批并自动保存在本地，需要时再点击按钮加载下一批&lt;/p&gt;&lt;p&gt;③ 双击界面上的预览图打开查看高清大图&lt;/p&gt;&lt;p&gt;听起来是不是略cool？而这些并不需要多大的代码量（包括灵活的界面设计），就可以漂亮地实现。&lt;!--break--&gt;&lt;/p&gt;&lt;p&gt;嗯？你问笔者为何图片是模糊的？由于会引起舒适，笔者在代码里面用PIL图像处理库加了点高斯模糊，不过只处理了界面上的预览图，实际下载下来的图片文件都是原图数据未处理的哦。#(墨镜滑稽)#(墨镜滑稽)#(墨镜滑稽)&lt;/p&gt;&lt;p&gt;（文章最后附上项目源码链接，其中包含用于演示的图库网站的网址）&lt;/p&gt;&lt;p&gt;我们从实现效果倒推一下这个程序需要用到什么“装备”吧。&lt;/p&gt;&lt;p&gt;既然是爬图，一般是会用到爬虫常用的那几款模块，本程序用的是“人用的”requests（“HTTP for humans”，它的slogan）做HTTP请求抓取HTML数据，然后用lxml处理，并用XPath解析得到网页URL、图片URL。&lt;/p&gt;&lt;p&gt;（requests中文文档： &lt;a class=&quot;feed-link-url&quot; href=&quot;http://docs.python-requests.org/zh_CN/latest/user/quickstart.html&quot; title=&quot;http://docs.python-requests.org/zh_CN/latest/user/quickstart.html&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接»&lt;/a&gt;&amp;nbsp;，XPath中文参考资料：&amp;nbsp;&lt;a class=&quot;feed-link-url&quot; href=&quot;https://www.runoob.com/xpath/xpath-tutorial.html&quot; title=&quot;https://www.runoob.com/xpath/xpath-tutorial.html&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接»&lt;/a&gt;&amp;nbsp;）&lt;/p&gt;&lt;p&gt;爬下来的图片需要显示到界面上，那么需要选用一款图形界面模块，这里选了PyQt（Qt的Python实现，Qt是源于1991年、曾在2008年被诺基亚收购、现属Digia公司的一款非常强大的跨平台图形界面库），别问我为什么不用Python自带的Tkinter，因为PyQt实在太香了，各种对图形界面的支持都非常完善，自带界面设计工具、数据转换工具等，支持实现非常复杂的界面效果，而Tkinter扩展性太差就不提了。&lt;/p&gt;&lt;p&gt;综合上面的两种模块使用需求，我们还需要考虑：&lt;/p&gt;&lt;p&gt;①&amp;nbsp;爬图时对网页URL、图片URL分开处理，从网页URL获取到HTML数据，解析出其中的网页URL或图片URL，而从图片URL则直接获取到图片数据&lt;/p&gt;&lt;p&gt;②&amp;nbsp;爬图过程中，不能因为爬图正在工作而阻塞图形界面导致界面无法操作，爬图过程需要在后台完成&lt;/p&gt;&lt;p&gt;③&amp;nbsp;爬取一批图片后自动暂停工作，点击按钮继续工作爬取下一批图片&lt;/p&gt;&lt;p&gt;我们采用Python自带的threading线程模块（Thread类、Lock类、Event类）、queue队列模块（Queue类）来实现。&lt;/p&gt;&lt;p&gt;到这里我们考虑到需要的暂时是这些：PyQt，requests，lxml，threading，queue。开发过程中需要其他的再作补充。&lt;/p&gt;&lt;p&gt;接下来可以开始动手啦，一边分析，一边开发程序。&lt;/p&gt;&lt;p&gt;一、爬图思路&lt;/p&gt;&lt;p&gt;把图片爬下来必须走的第一步，当然是对图片所在的网页进行解析啦。&lt;/p&gt;&lt;p&gt;我们先选一个网站上的页面作为爬图的起始页面，这个页面会包含很多图集的入口链接。打开Chrome（谷歌浏览器）访问页面，如图。&lt;/p&gt;&lt;div class=&quot;img-container&quot; style=&quot;text-align: center;&quot;&gt;
                &lt;img src=&quot;http://image.coolapk.com/feed/2018/0803/44029_1533277844_3829@811x627.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
                &lt;p class=&quot;image-caption&quot; style=&quot;text-align: center;&quot;&gt;起始网页页面截图&lt;/p&gt;&lt;/div&gt;&lt;p&gt;我们选用图上有多行每行四张小姐姐预览图的区域作为图集的入口点。仅仅是一个页面上这一小部分而已吗？我们再往下看。&lt;/p&gt;&lt;div class=&quot;img-container&quot; style=&quot;text-align: center;&quot;&gt;
                &lt;img src=&quot;http://image.coolapk.com/feed/2018/0803/44029_1533277845_7291@530x37.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
                &lt;p class=&quot;image-caption&quot; style=&quot;text-align: center;&quot;&gt;翻页链接截图&lt;/p&gt;&lt;/div&gt;&lt;p&gt;在最下面有一行有“1”“2”“3”“4”……的翻页链接，我们就选这里作为翻页爬取更多图集的入口吧。&lt;/p&gt;&lt;p&gt;然后我们按F12开启Developer Tools（开发者工具）查看Elements（元素），在这里可以看到页面上的元素对应的HTML源码。不过直接在这里找似乎太麻烦了&lt;!--break--&gt;，我们回到页面，在预览图上点击右键，选择“检查”。&lt;/p&gt;&lt;div class=&quot;img-container&quot; style=&quot;text-align: center;&quot;&gt;
                &lt;img src=&quot;http://image.coolapk.com/feed/2018/0803/44029_1533277846_7084@343x245.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
                &lt;p class=&quot;image-caption&quot; style=&quot;text-align: center;&quot;&gt;“检查”页面元素的功能&lt;/p&gt;&lt;/div&gt;&lt;p&gt;在Elements这边就能直接看到刚才点击“检查”的位置对应的网页元素了。&lt;/p&gt;&lt;div class=&quot;img-container&quot; style=&quot;text-align: center;&quot;&gt;
                &lt;img src=&quot;http://image.coolapk.com/feed/2018/0803/44029_1533277848_205@702x579.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
                &lt;p class=&quot;image-caption&quot; style=&quot;text-align: center;&quot;&gt;页面元素截图&lt;/p&gt;&lt;/div&gt;&lt;p&gt;不难发现，网页设计者在设计HTML模板时，对id、class的命名还是挺友好的，比如第一行的div标签，id是“imgList”，我们推测是“图片清单”的意思，可以确定我们需要的区域就在这个div标签下面。&lt;/p&gt;&lt;p&gt;div下的ul标签下面有一堆li标签&lt;!--break--&gt;，每个li标签分别对应一张预览图（li下面的a标签和img标签）以及图下面的文字（li下面的span标签和a标签）。观察到两个a标签的href属性都是一样的，是进入到图集的链接，我们取其一就行。&lt;/p&gt;&lt;p&gt;观察到ul标签有class属性“liL”，我们由此写出取出图集链接的XPath：&lt;/p&gt;&lt;div class=&quot;img-container&quot; style=&quot;text-align: center;&quot;&gt;
                &lt;img src=&quot;http://image.coolapk.com/feed/2018/0803/44029_1533277849_4946@205x15.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
                &lt;p class=&quot;image-caption&quot; style=&quot;text-align: center;&quot;&gt;&lt;/p&gt;&lt;/div&gt;&lt;p&gt;为什么要用ul这个标签来定位呢？往后翻了几个页面，发现基本上是id为“imgList”的div标签下面跟一个class为“liL”的ul标签，我们秉承“让这条XPath尽量通用”的编写原则，尽量利用能提取到确切需要的数据它的最简特征信息，能不用id属性尽量不用&lt;!--break--&gt;。最终写出来的是上面这样。&lt;/p&gt;&lt;p&gt;那下面翻页的链接如何取到呢？别紧张，我们接下来看看进入图集后的页面。&lt;/p&gt;&lt;div class=&quot;img-container&quot; style=&quot;text-align: center;&quot;&gt;
                &lt;img src=&quot;http://image.coolapk.com/feed/2018/0803/44029_1533277850_6329@643x336.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
                &lt;p class=&quot;image-caption&quot; style=&quot;text-align: center;&quot;&gt;图集页面截图&lt;/p&gt;&lt;/div&gt;&lt;p&gt;随便点击一个图集后，我们发现这里下面的这行有“1”“2”“3”“4”……的翻页链接，不是长得跟刚才上一个页面的翻页链接一模一样吗？马上用“检查”看一下相关元素，笔者把两边的Elements放在一起截图，方便对比，如图。&lt;/p&gt;&lt;div class=&quot;img-container&quot; style=&quot;text-align: center;&quot;&gt;
                &lt;img src=&quot;http://image.coolapk.com/feed/2018/0803/44029_1533277851_751@1159x580.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
                &lt;p class=&quot;image-caption&quot; style=&quot;text-align: center;&quot;&gt;两个页面的元素对比&lt;/p&gt;&lt;/div&gt;&lt;p&gt;不难发现，两边都有class为“pages”的div标签，从“pages”这个词推测这里就是显示翻页链接的地方。同样也是有ul标签，以及下面一堆li标签分别对应网页上的“1”“2”“3”“4”……这些链接。需要排除掉“首页”、当前页标号这些无用的链接&lt;!--break--&gt;，观察到他们的href属性都为“#”，那么加个href属性的筛选条件就可以了。另外观察到需要取的链接的href属性值都是不完整的，只有“xxxx.html”这种形式，这里有个小技巧，通过Python自带库urllib.parse里的urljoin()方法，将当前URL跟“xxxx.html”连接起来，就变成完整的链接了。待会在后面实现。&lt;/p&gt;&lt;p&gt;写出取出翻页链接的XPath如下：&lt;/p&gt;&lt;div class=&quot;img-container&quot; style=&quot;text-align: center;&quot;&gt;
                &lt;img src=&quot;http://image.coolapk.com/feed/2018/0803/44029_1533277853_0513@331x16.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
                &lt;p class=&quot;image-caption&quot; style=&quot;text-align: center;&quot;&gt;&lt;/p&gt;&lt;/div&gt;&lt;p&gt;在同样的页面上通过“检查”查看高清大图对应的链接，&lt;/p&gt;&lt;div class=&quot;img-container&quot; style=&quot;text-align: center;&quot;&gt;
                &lt;img src=&quot;http://image.coolapk.com/feed/2018/0803/44029_1533277854_1201@705x210.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
                &lt;p class=&quot;image-caption&quot; style=&quot;text-align: center;&quot;&gt;&lt;/p&gt;&lt;/div&gt;&lt;p&gt;如法炮制，写出取出高清大图的XPath如下：&lt;/p&gt;&lt;div class=&quot;img-container&quot; style=&quot;text-align: center;&quot;&gt;
                &lt;img src=&quot;http://image.coolapk.com/feed/2018/0803/44029_1533277855_0115@262x14.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
                &lt;p class=&quot;image-caption&quot; style=&quot;text-align: center;&quot;&gt;&lt;/p&gt;&lt;/div&gt;&lt;p&gt;测试的时候发现，这样子按部就班取出来的高清大图，每次都是从同一个图集同一个顺序开始爬取。我们用Python自带的random模块里面的shuffle方法，对链接进行打乱，这样每次爬取出来的就不全是一样的了，非常随缘。&lt;/p&gt;&lt;p&gt;抓取到的链接有网页和图片两种，网页的放入一个队列&lt;!--break--&gt;，图片的放入另一个队列。分别开启两个线程，一个按顺序从队列里面取出网页URL，按照上面写的三种XPath规则解析出来，再放入队列，再从队列取出新URL，如此反复；另一个按顺序从队列里面取出图片URL，做下载的操作，并发送Qt的信号更新界面（不允许在非主线程中更新处在主线程中的界面），如此反复。&lt;/p&gt;&lt;p&gt;限于篇幅，完整的双线程＋双队列的实现可以在项目代码中结合代码的上下文进行理解。&lt;/p&gt;&lt;p&gt;爬图的核心代码真的不多，除去线程的壳子、连同requests获取数据的操作一起看，如图所示。&lt;/p&gt;&lt;div class=&quot;img-container&quot; style=&quot;text-align: center;&quot;&gt;
                &lt;img src=&quot;http://image.coolapk.com/feed/2018/0803/44029_1533277856_1485@582x566.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
                &lt;p class=&quot;image-caption&quot; style=&quot;text-align: center;&quot;&gt;爬图核心代码&lt;/p&gt;&lt;/div&gt;&lt;p&gt;小技巧：requests请求数据所用的User-agent可以通过在浏览器地址栏输入执行以下代码，在出现的弹窗中获取。&lt;/p&gt;&lt;div class=&quot;img-container&quot; style=&quot;text-align: center;&quot;&gt;
                &lt;img src=&quot;http://image.coolapk.com/feed/2018/0803/44029_1533277857_5724@385x14.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
                &lt;p class=&quot;image-caption&quot; style=&quot;text-align: center;&quot;&gt;查看浏览器UA&lt;/p&gt;&lt;/div&gt;&lt;p&gt;二、界面设计&lt;/p&gt;&lt;p&gt;界面设计的部分相对简单，这里说一些比较关键的点吧。&lt;/p&gt;&lt;p&gt;安装好PyQt后，在安装目录下会有qtdesigner程序，运行它开启“Qt&amp;nbsp;Designer”（Qt设计师），可以在这里直接设计界面。&lt;/p&gt;&lt;p&gt;选择MainWindow模板（包含基本窗体、菜单栏、状态栏）&lt;!--break--&gt;，然后来一波控件拖放操作，界面控件就设计好了。如图。&lt;/p&gt;&lt;div class=&quot;img-container&quot; style=&quot;text-align: center;&quot;&gt;
                &lt;img src=&quot;http://image.coolapk.com/feed/2018/0803/44029_1533277859_0611@1042x731.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
                &lt;p class=&quot;image-caption&quot; style=&quot;text-align: center;&quot;&gt;界面设计&lt;/p&gt;&lt;/div&gt;&lt;div class=&quot;img-container&quot; style=&quot;text-align: center;&quot;&gt;
                &lt;img src=&quot;http://image.coolapk.com/feed/2018/0803/44029_1533277860_5203@371x225.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
                &lt;p class=&quot;image-caption&quot; style=&quot;text-align: center;&quot;&gt;对象查看器&lt;/p&gt;&lt;/div&gt;&lt;p&gt;综合窗体设计预览和“对象查看器”来看，按钮（QPushButton）和文字标签（QLabel）是排列在“Horizontal Layout”（水平排列层，对应QHBoxLayout）里面的，这个Layout跟下面的“List&amp;nbsp;Widget”（列表控件&lt;!--break--&gt;，对应QListWidget）又是排列在“Vertical Layout”（垂直排列层，对应QVBoxLayout）里面的。这些控件并不是随随便便从控件栏拖动到窗体上处于绝对位置的哦！通过对控件属性的简单调校，是可以实现调整窗口大小或者最大化时只有下面的List&amp;nbsp;Widget扩大这样的效果的。&lt;/p&gt;&lt;p&gt;其实用List&amp;nbsp;Widget列表控件来显示爬到的图片的预览图并不是它本身设定的用法，借助的是它“IconMode”（图标模式）的显示方式，利用将图片放入列表项的图标（QIcon）里面，把图片排列显示在列表控件上。&lt;/p&gt;&lt;p&gt;既然不是它本身设定的用法，必然会出现一些纠结的问题，比如横竖向不同的图片排列在一起的时候，会出现横向图片在格子中居上而不是居中的问题。查了很多文档资料，尝试了很多种方式，最后选择“QPainter居中画图”的方式来解决问题，这些在项目源码中都有体现，这里暂时不细讲。&lt;/p&gt;&lt;p&gt;限于篇幅，对控件的调校细节，可以下载项目源码，用Qt Designer打开“MainWindow.ui”文件详细查看。&lt;/p&gt;&lt;p&gt;通过代码加载“MainWindow.ui”界面文件的方式也很简单，只需要调用uic.loadUi()方法即可。接着作一些事件关联、信号关联。抽取出来看，大体框架如图。&lt;/p&gt;&lt;div class=&quot;img-container&quot; style=&quot;text-align: center;&quot;&gt;
                &lt;img src=&quot;http://image.coolapk.com/feed/2018/0803/44029_1533277861_5604@702x387.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
                &lt;p class=&quot;image-caption&quot; style=&quot;text-align: center;&quot;&gt;主窗口框架代码&lt;/p&gt;&lt;/div&gt;&lt;p&gt;注意这里的pyqtSignal产生的对象一定要放在类共有属性下面，否则会报错“AttributeError: &#39;PyQt4.QtCore.pyqtSignal&#39; object has no attribute &#39;connect&#39;”。限于篇幅&lt;!--break--&gt;，pyqtSignal相关用法请参考官方文档（英文，&amp;nbsp;&lt;a class=&quot;feed-link-url&quot; href=&quot;http://pyqt.sourceforge.net/Docs/PyQt4/new_style_signals_slots.html&quot; title=&quot;http://pyqt.sourceforge.net/Docs/PyQt4/new_style_signals_slots.html&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接»&lt;/a&gt; ）。&lt;/p&gt;&lt;p&gt;三、程序优化&lt;/p&gt;&lt;p&gt;爬图、界面两部分都设计好了，接下来考虑一下程序优化问题。&lt;/p&gt;&lt;p&gt;（1）图片分批加载&lt;/p&gt;&lt;p&gt;由于图片的加载是在线程里面实现的，线程里面用一个“while True”循环，从队列中取出图片URL进行下载。我们需要一种能控制线程暂停的方式，来解决“分批加载”这个问题。&lt;/p&gt;&lt;p&gt;既然是线程相关，我们优先考虑一下threading模块里面有什么适合用的。查看文档发现，Event事件类比较适合这种使用场景。简单说，Event产生的实例对象可以存储一个标记，标记为False时，调用它的wait()方法可以进行阻塞等待，而标记为True时wait()方法不阻塞或者从阻塞中恢复。&lt;/p&gt;&lt;p&gt;为了方便，我们在MyMainWindow的初始化__init__()里面操作一下：&lt;/p&gt;&lt;p&gt;self.running_event = Event()&lt;/p&gt;&lt;p&gt;self.running_event.set()&amp;nbsp; #&amp;nbsp;一开始不需要让线程等待，设置标志为True&lt;/p&gt;&lt;p&gt;然后在线程中加入等待的代码：&lt;/p&gt;&lt;p&gt;self.running_event.wait()&lt;/p&gt;&lt;p&gt;但这样子并不会自己自动产生阻塞，还需要写一段代码主动设置标志为False从而产生阻塞，于是在处理图片URL的线程中加入判断代码，如果达到批次数量时，就改变event的标志为False，这样当执行到wait()就会自动产生阻塞了，如下代码：&lt;/p&gt;&lt;p&gt;with self.data_lock:&lt;/p&gt;&lt;p&gt;... if len(self.data_list) % self.PAGE_LIMIT == 0:&lt;/p&gt;&lt;p&gt;... ... self.running_event.clear()&lt;/p&gt;&lt;p&gt;最后在“加载下一批”的按钮中加入代码解除wait()阻塞即可：&lt;/p&gt;&lt;p&gt;self.running_event.set()&lt;/p&gt;&lt;p&gt;（2）预览图加载小图、高斯模糊、居中显示&lt;/p&gt;&lt;p&gt;如果我们不清除列表控件中的图片，随着图片数量增加，内存占用会越来越高。不管Qt或者别的模块有没有对这些地方作出优化，我们在程序开发的时候都要保持着随时做优化的好习惯。&lt;/p&gt;&lt;p&gt;利用PIL模块，简单几行代码就可以把缩小图片、高斯模糊两种操作一起实现，先缩小再高斯模糊，在一般配置的机器上处理时间是非常短的。&lt;/p&gt;&lt;p&gt;考虑到预览小图的空间占用并不会太高，我们在产生小图的时候直接写入到BytesIO即字节内存IO中，让QIcon最终加载存在于内存中的字节数据即可。&lt;/p&gt;&lt;p&gt;关键代码如下：&lt;/p&gt;&lt;p&gt;# PIL打开图片&lt;/p&gt;&lt;p&gt;img = Image.open(file_name)&lt;/p&gt;&lt;p&gt;# 锁定长宽比缩小图片&lt;/p&gt;&lt;p&gt;w, h = img.size&lt;/p&gt;&lt;p&gt;ratio = self.PIC_SIZE / (h if h &amp;gt;= w else w)&lt;/p&gt;&lt;p&gt;img = img.resize((int(w * ratio), int(h * ratio)), Image.ANTIALIAS)&lt;/p&gt;&lt;p&gt;# 高斯模糊&lt;/p&gt;&lt;p&gt;img = img.filter(ImageFilter.GaussianBlur(radius=2))&lt;/p&gt;&lt;p&gt;# 暂存于内存中，使用BytesIO&lt;/p&gt;&lt;p&gt;bio = BytesIO()&lt;/p&gt;&lt;p&gt;img.save(bio, &#39;jpeg&#39;)&lt;/p&gt;&lt;p&gt;# 关闭PIL图像句柄&lt;/p&gt;&lt;p&gt;img.close()&lt;/p&gt;&lt;p&gt;# 从BytesIO加载图片数据&lt;/p&gt;&lt;p&gt;qimg = QImage.fromData(bio.getvalue())&lt;/p&gt;&lt;p&gt;# 关闭BytesIO句柄&lt;/p&gt;&lt;p&gt;bio.close()&lt;/p&gt;&lt;p&gt;限于篇幅，可以在下载项目代码后查看具体实现。&lt;/p&gt;&lt;p&gt;（3）爬取到的图片文件名的命名&lt;/p&gt;&lt;p&gt;文章开头有一张保存的图片文件的截图，观察到所有图片文件都是从图片URL得到的原始文件名，乱七八糟的。我们可以利用网页上的标题文字来给图片文件重新命名。&lt;/p&gt;&lt;p&gt;这一个优化点作为扩展练习题吧。处理思路：引用原网页的img标签的alt属性文字（alt的值刚好是图片标题）即可，如图所示。同样也可以用XPath取出。&lt;/p&gt;&lt;div class=&quot;img-container&quot; style=&quot;text-align: center;&quot;&gt;
                &lt;img src=&quot;http://image.coolapk.com/feed/2018/0803/44029_1533277862_7257@586x174.jpg&quot; referrerpolicy=&quot;no-referrer&quot;&gt;
                &lt;p class=&quot;image-caption&quot; style=&quot;text-align: center;&quot;&gt;&lt;/p&gt;&lt;/div&gt;&lt;p&gt;------------------------&lt;/p&gt;&lt;p&gt;获取本项目请访问：&amp;nbsp;&lt;a class=&quot;feed-link-url&quot; href=&quot;https://github.com/djun/PyQtPicsCrawler&quot; title=&quot;https://github.com/djun/PyQtPicsCrawler&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接»&lt;/a&gt;&lt;/p&gt;&lt;p&gt;有任何疑问可以在评论区内或私信一起讨论～&lt;/p&gt;&lt;p&gt;以上&lt;!--break--&gt;。[wpy交易][wpy交易][wpy交易][wpy交易][wpy交易] &lt;a class=&quot;feed-link-uname&quot; href=&quot;https://www.coolapk.com/u/%E9%85%B7%E5%AE%89%E5%B0%8F%E7%BC%96&quot;&gt;@酷安小编&lt;/a&gt; &lt;a class=&quot;feed-link-uname&quot; href=&quot;https://www.coolapk.com/u/%E8%8C%B6%E6%9D%AF&quot;&gt;@茶杯&lt;/a&gt; &lt;a class=&quot;feed-link-uname&quot; href=&quot;https://www.coolapk.com/u/%E5%85%AB%E7%99%BE%E6%A0%87%E5%85%B5&quot;&gt;@八百标兵&lt;/a&gt; &lt;a class=&quot;feed-link-uname&quot; href=&quot;https://www.coolapk.com/u/%E4%BE%A7%E8%84%B8%E5%90%9B&quot;&gt;@侧脸君&lt;/a&gt; &lt;a class=&quot;feed-link-uname&quot; href=&quot;https://www.coolapk.com/u/%E6%A2%A8%E5%AD%90&quot;&gt;@梨子&lt;/a&gt;&amp;nbsp;&lt;/p&gt;&lt;p&gt;------------------------&lt;/p&gt;&lt;p&gt;【专栏推荐】&lt;/p&gt;&lt;p&gt;&amp;gt;&amp;gt;&amp;gt; [用PHP写漂亮的网页] PHP零基础入门教程&amp;nbsp;&lt;a class=&quot;feed-link-url&quot; href=&quot;https://www.coolapk.com/dyh/1475&quot; title=&quot;https://www.coolapk.com/dyh/1475&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接»&lt;/a&gt;&lt;/p&gt;&lt;p&gt;&amp;gt;&amp;gt;&amp;gt; [美食 手绘 穿搭 摄影 书籍] 幸福感提升指南 &lt;a class=&quot;feed-link-url&quot; href=&quot;https://www.coolapk.com/dyh/1526&quot; title=&quot;https://www.coolapk.com/dyh/1526&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;查看链接»&lt;/a&gt;&lt;/p&gt;</description><link>https://www.coolapk.com/feed/7577786?shareKey=NTBhMWVhNjQ4YjU5NjdlMWY4OTc~</link><guid isPermaLink="false">https://www.coolapk.com/feed/7577786</guid><pubDate>Fri, 03 Aug 2018 06:31:03 GMT</pubDate><author>djunxp</author></item></channel></rss>